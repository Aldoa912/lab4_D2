

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 09 23:51:28 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Version 2.40
    20                           ; Generated 04/07/2022 GMT
    21                           ; 
    22                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     008F                     	;# 
    99     0090                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0095                     	;# 
   107     0096                     	;# 
   108     0097                     	;# 
   109     0098                     	;# 
   110     0099                     	;# 
   111     009A                     	;# 
   112     009B                     	;# 
   113     009C                     	;# 
   114     009D                     	;# 
   115     009E                     	;# 
   116     009F                     	;# 
   117     0105                     	;# 
   118     0107                     	;# 
   119     0108                     	;# 
   120     0109                     	;# 
   121     010C                     	;# 
   122     010C                     	;# 
   123     010D                     	;# 
   124     010E                     	;# 
   125     010F                     	;# 
   126     0185                     	;# 
   127     0187                     	;# 
   128     0188                     	;# 
   129     0189                     	;# 
   130     018C                     	;# 
   131     018D                     	;# 
   132     0000                     	;# 
   133     0001                     	;# 
   134     0002                     	;# 
   135     0003                     	;# 
   136     0004                     	;# 
   137     0005                     	;# 
   138     0006                     	;# 
   139     0007                     	;# 
   140     0008                     	;# 
   141     0009                     	;# 
   142     000A                     	;# 
   143     000B                     	;# 
   144     000C                     	;# 
   145     000D                     	;# 
   146     000E                     	;# 
   147     000E                     	;# 
   148     000F                     	;# 
   149     0010                     	;# 
   150     0011                     	;# 
   151     0012                     	;# 
   152     0013                     	;# 
   153     0014                     	;# 
   154     0015                     	;# 
   155     0015                     	;# 
   156     0016                     	;# 
   157     0017                     	;# 
   158     0018                     	;# 
   159     0019                     	;# 
   160     001A                     	;# 
   161     001B                     	;# 
   162     001B                     	;# 
   163     001C                     	;# 
   164     001D                     	;# 
   165     001E                     	;# 
   166     001F                     	;# 
   167     0081                     	;# 
   168     0085                     	;# 
   169     0086                     	;# 
   170     0087                     	;# 
   171     0088                     	;# 
   172     0089                     	;# 
   173     008C                     	;# 
   174     008D                     	;# 
   175     008E                     	;# 
   176     008F                     	;# 
   177     0090                     	;# 
   178     0091                     	;# 
   179     0092                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0094                     	;# 
   184     0095                     	;# 
   185     0096                     	;# 
   186     0097                     	;# 
   187     0098                     	;# 
   188     0099                     	;# 
   189     009A                     	;# 
   190     009B                     	;# 
   191     009C                     	;# 
   192     009D                     	;# 
   193     009E                     	;# 
   194     009F                     	;# 
   195     0105                     	;# 
   196     0107                     	;# 
   197     0108                     	;# 
   198     0109                     	;# 
   199     010C                     	;# 
   200     010C                     	;# 
   201     010D                     	;# 
   202     010E                     	;# 
   203     010F                     	;# 
   204     0185                     	;# 
   205     0187                     	;# 
   206     0188                     	;# 
   207     0189                     	;# 
   208     018C                     	;# 
   209     018D                     	;# 
   210     0000                     	;# 
   211     0001                     	;# 
   212     0002                     	;# 
   213     0003                     	;# 
   214     0004                     	;# 
   215     0005                     	;# 
   216     0006                     	;# 
   217     0007                     	;# 
   218     0008                     	;# 
   219     0009                     	;# 
   220     000A                     	;# 
   221     000B                     	;# 
   222     000C                     	;# 
   223     000D                     	;# 
   224     000E                     	;# 
   225     000E                     	;# 
   226     000F                     	;# 
   227     0010                     	;# 
   228     0011                     	;# 
   229     0012                     	;# 
   230     0013                     	;# 
   231     0014                     	;# 
   232     0015                     	;# 
   233     0015                     	;# 
   234     0016                     	;# 
   235     0017                     	;# 
   236     0018                     	;# 
   237     0019                     	;# 
   238     001A                     	;# 
   239     001B                     	;# 
   240     001B                     	;# 
   241     001C                     	;# 
   242     001D                     	;# 
   243     001E                     	;# 
   244     001F                     	;# 
   245     0081                     	;# 
   246     0085                     	;# 
   247     0086                     	;# 
   248     0087                     	;# 
   249     0088                     	;# 
   250     0089                     	;# 
   251     008C                     	;# 
   252     008D                     	;# 
   253     008E                     	;# 
   254     008F                     	;# 
   255     0090                     	;# 
   256     0091                     	;# 
   257     0092                     	;# 
   258     0093                     	;# 
   259     0093                     	;# 
   260     0093                     	;# 
   261     0094                     	;# 
   262     0095                     	;# 
   263     0096                     	;# 
   264     0097                     	;# 
   265     0098                     	;# 
   266     0099                     	;# 
   267     009A                     	;# 
   268     009B                     	;# 
   269     009C                     	;# 
   270     009D                     	;# 
   271     009E                     	;# 
   272     009F                     	;# 
   273     0105                     	;# 
   274     0107                     	;# 
   275     0108                     	;# 
   276     0109                     	;# 
   277     010C                     	;# 
   278     010C                     	;# 
   279     010D                     	;# 
   280     010E                     	;# 
   281     010F                     	;# 
   282     0185                     	;# 
   283     0187                     	;# 
   284     0188                     	;# 
   285     0189                     	;# 
   286     018C                     	;# 
   287     018D                     	;# 
   288     0000                     	;# 
   289     0001                     	;# 
   290     0002                     	;# 
   291     0003                     	;# 
   292     0004                     	;# 
   293     0005                     	;# 
   294     0006                     	;# 
   295     0007                     	;# 
   296     0008                     	;# 
   297     0009                     	;# 
   298     000A                     	;# 
   299     000B                     	;# 
   300     000C                     	;# 
   301     000D                     	;# 
   302     000E                     	;# 
   303     000E                     	;# 
   304     000F                     	;# 
   305     0010                     	;# 
   306     0011                     	;# 
   307     0012                     	;# 
   308     0013                     	;# 
   309     0014                     	;# 
   310     0015                     	;# 
   311     0015                     	;# 
   312     0016                     	;# 
   313     0017                     	;# 
   314     0018                     	;# 
   315     0019                     	;# 
   316     001A                     	;# 
   317     001B                     	;# 
   318     001B                     	;# 
   319     001C                     	;# 
   320     001D                     	;# 
   321     001E                     	;# 
   322     001F                     	;# 
   323     0081                     	;# 
   324     0085                     	;# 
   325     0086                     	;# 
   326     0087                     	;# 
   327     0088                     	;# 
   328     0089                     	;# 
   329     008C                     	;# 
   330     008D                     	;# 
   331     008E                     	;# 
   332     008F                     	;# 
   333     0090                     	;# 
   334     0091                     	;# 
   335     0092                     	;# 
   336     0093                     	;# 
   337     0093                     	;# 
   338     0093                     	;# 
   339     0094                     	;# 
   340     0095                     	;# 
   341     0096                     	;# 
   342     0097                     	;# 
   343     0098                     	;# 
   344     0099                     	;# 
   345     009A                     	;# 
   346     009B                     	;# 
   347     009C                     	;# 
   348     009D                     	;# 
   349     009E                     	;# 
   350     009F                     	;# 
   351     0105                     	;# 
   352     0107                     	;# 
   353     0108                     	;# 
   354     0109                     	;# 
   355     010C                     	;# 
   356     010C                     	;# 
   357     010D                     	;# 
   358     010E                     	;# 
   359     010F                     	;# 
   360     0185                     	;# 
   361     0187                     	;# 
   362     0188                     	;# 
   363     0189                     	;# 
   364     018C                     	;# 
   365     018D                     	;# 
   366                           
   367                           	psect	nvCOMMON
   368     0079                     __pnvCOMMON:
   369     0079                     _ADC:
   370     0079                     	ds	1
   371     001F                     _ADCON0	set	31
   372     001E                     _ADRESH	set	30
   373     001F                     _ADCON0bits	set	31
   374     0005                     _PORTA	set	5
   375     0006                     _PORTB	set	6
   376     0008                     _PORTD	set	8
   377     0014                     _SSPCONbits	set	20
   378     000C                     _PIR1bits	set	12
   379     0013                     _SSPBUF	set	19
   380     0014                     _SSPCON	set	20
   381     0063                     _SSPIF	set	99
   382     005E                     _PEIE	set	94
   383     005F                     _GIE	set	95
   384     009F                     _ADCON1bits	set	159
   385     008F                     _OSCCONbits	set	143
   386     0085                     _TRISA	set	133
   387     0088                     _TRISD	set	136
   388     0086                     _TRISB	set	134
   389     0094                     _SSPSTATbits	set	148
   390     0091                     _SSPCON2bits	set	145
   391     0087                     _TRISCbits	set	135
   392     0094                     _SSPSTAT	set	148
   393     0093                     _SSPADD	set	147
   394     0091                     _SSPCON2	set	145
   395     04A0                     _BF	set	1184
   396     0463                     _SSPIE	set	1123
   397     043C                     _TRISC4	set	1084
   398     043B                     _TRISC3	set	1083
   399     0189                     _ANSELH	set	393
   400     0188                     _ANSEL	set	392
   401                           
   402                           	psect	cinit
   403     000F                     start_initialization:	
   404                           ; #config settings
   405                           
   406     000F                     __initialization:
   407                           
   408                           ; Clear objects allocated to COMMON
   409     000F  01F7               	clrf	__pbssCOMMON& (0+127)
   410     0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   411     0011                     end_of_initialization:	
   412                           ;End of C runtime variable initialization code
   413                           
   414     0011                     __end_of__initialization:
   415     0011  0183               	clrf	3
   416     0012  120A  118A  2872   	ljmp	_main	;jump to C main() function
   417                           
   418                           	psect	bssCOMMON
   419     0077                     __pbssCOMMON:
   420     0077                     _dato:
   421     0077                     	ds	1
   422     0078                     _z:
   423     0078                     	ds	1
   424                           
   425                           	psect	cstackCOMMON
   426     0070                     __pcstackCOMMON:
   427     0070                     ?_setup:
   428     0070                     ?_I2C_Slave_Init:	
   429                           ; 1 bytes @ 0x0
   430                           
   431     0070                     ?_isr:	
   432                           ; 1 bytes @ 0x0
   433                           
   434     0070                     ??_isr:	
   435                           ; 1 bytes @ 0x0
   436                           
   437     0070                     ?_main:	
   438                           ; 1 bytes @ 0x0
   439                           
   440                           
   441                           ; 1 bytes @ 0x0
   442     0070                     	ds	3
   443     0073                     ??_I2C_Slave_Init:
   444     0073                     ?_ADC_Read:	
   445                           ; 1 bytes @ 0x3
   446                           
   447     0073                     I2C_Slave_Init@address:	
   448                           ; 2 bytes @ 0x3
   449                           
   450     0073                     ADC_Read@channel:	
   451                           ; 1 bytes @ 0x3
   452                           
   453                           
   454                           ; 2 bytes @ 0x3
   455     0073                     	ds	1
   456     0074                     ??_setup:
   457                           
   458                           ; 1 bytes @ 0x4
   459     0074                     	ds	1
   460     0075                     ??_ADC_Read:
   461                           
   462                           ; 1 bytes @ 0x5
   463     0075                     	ds	2
   464                           
   465                           	psect	cstackBANK0
   466     0020                     __pcstackBANK0:
   467     0020                     ??_main:
   468                           
   469                           ; 1 bytes @ 0x0
   470     0020                     	ds	3
   471                           
   472                           	psect	maintext
   473     0072                     __pmaintext:	
   474 ;;
   475 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   476 ;;
   477 ;; *************** function _main *****************
   478 ;; Defined at:
   479 ;;		line 89 in file "main.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0, pclath, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : B00/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   493 ;;      Params:         0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0
   495 ;;      Temps:          0       3       0       0       0
   496 ;;      Totals:         0       3       0       0       0
   497 ;;Total ram usage:        3 bytes
   498 ;; Hardware stack levels required when called: 3
   499 ;; This function calls:
   500 ;;		_ADC_Read
   501 ;;		_setup
   502 ;; This function is called by:
   503 ;;		Startup code after reset
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507     0072                     _main:	
   508                           ;psect for function _main
   509                           
   510     0072                     l889:	
   511                           ;incstack = 0
   512                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   513                           
   514                           
   515                           ;main.c: 90:     setup();
   516     0072  120A  118A  20B1  120A  118A  	fcall	_setup
   517     0077                     l122:	
   518                           ;main.c: 95:     while(1){
   519                           
   520                           
   521                           ;main.c: 96:         ADC = ADC_Read(0);
   522     0077  3000               	movlw	0
   523     0078  00F3               	movwf	ADC_Read@channel
   524     0079  00F4               	movwf	ADC_Read@channel+1
   525     007A  120A  118A  2093  120A  118A  	fcall	_ADC_Read
   526     007F  0873               	movf	?_ADC_Read,w
   527     0080  00F9               	movwf	_ADC
   528     0081                     l891:
   529                           
   530                           ;main.c: 97:        _delay((unsigned long)((500)*(8000000/4000.0)));
   531     0081  3006               	movlw	6
   532     0082  1283               	bcf	3,5	;RP0=0, select bank0
   533     0083  1303               	bcf	3,6	;RP1=0, select bank0
   534     0084  00A2               	movwf	??_main+2
   535     0085  3013               	movlw	19
   536     0086  00A1               	movwf	??_main+1
   537     0087  30AD               	movlw	173
   538     0088  00A0               	movwf	??_main
   539     0089                     u167:
   540     0089  0BA0               	decfsz	??_main,f
   541     008A  2889               	goto	u167
   542     008B  0BA1               	decfsz	??_main+1,f
   543     008C  2889               	goto	u167
   544     008D  0BA2               	decfsz	??_main+2,f
   545     008E  2889               	goto	u167
   546     008F  2877               	goto	l122
   547     0090  120A  118A  280C   	ljmp	start
   548     0093                     __end_of_main:
   549                           
   550                           	psect	text1
   551     00B1                     __ptext1:	
   552 ;; *************** function _setup *****************
   553 ;; Defined at:
   554 ;;		line 104 in file "main.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0, pclath, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   568 ;;      Params:         0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0
   571 ;;      Totals:         0       0       0       0       0
   572 ;;Total ram usage:        0 bytes
   573 ;; Hardware stack levels used: 1
   574 ;; Hardware stack levels required when called: 2
   575 ;; This function calls:
   576 ;;		_I2C_Slave_Init
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582     00B1                     _setup:	
   583                           ;psect for function _setup
   584                           
   585     00B1                     l759:	
   586                           ;incstack = 0
   587                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   588                           
   589                           
   590                           ;main.c: 105:     ANSEL = 0;
   591     00B1  1683               	bsf	3,5	;RP0=1, select bank3
   592     00B2  1703               	bsf	3,6	;RP1=1, select bank3
   593     00B3  0188               	clrf	8	;volatile
   594                           
   595                           ;main.c: 106:     ANSELH = 0;
   596     00B4  0189               	clrf	9	;volatile
   597                           
   598                           ;main.c: 108:     TRISB = 0;
   599     00B5  1683               	bsf	3,5	;RP0=1, select bank1
   600     00B6  1303               	bcf	3,6	;RP1=0, select bank1
   601     00B7  0186               	clrf	6	;volatile
   602                           
   603                           ;main.c: 109:     TRISD = 0;
   604     00B8  0188               	clrf	8	;volatile
   605     00B9                     l761:
   606                           
   607                           ;main.c: 110:     TRISA = 0b00000001;
   608     00B9  3001               	movlw	1
   609     00BA  0085               	movwf	5	;volatile
   610     00BB                     l763:
   611                           
   612                           ;main.c: 112:     PORTB = 0;
   613     00BB  1283               	bcf	3,5	;RP0=0, select bank0
   614     00BC  1303               	bcf	3,6	;RP1=0, select bank0
   615     00BD  0186               	clrf	6	;volatile
   616     00BE                     l765:
   617                           
   618                           ;main.c: 113:     PORTD = 0;
   619     00BE  0188               	clrf	8	;volatile
   620     00BF                     l767:
   621                           
   622                           ;main.c: 114:     PORTA = 0;
   623     00BF  0185               	clrf	5	;volatile
   624     00C0                     l769:
   625                           
   626                           ;main.c: 115:     OSCCONbits.IRCF = 0b111;
   627     00C0  3070               	movlw	112
   628     00C1  1683               	bsf	3,5	;RP0=1, select bank1
   629     00C2  1303               	bcf	3,6	;RP1=0, select bank1
   630     00C3  048F               	iorwf	15,f	;volatile
   631     00C4                     l771:
   632                           
   633                           ;main.c: 116:     OSCCONbits.SCS = 1;
   634     00C4  140F               	bsf	15,0	;volatile
   635     00C5                     l773:
   636                           
   637                           ;main.c: 118:     I2C_Slave_Init(0x50);
   638     00C5  3050               	movlw	80
   639     00C6  120A  118A  20CC  120A  118A  	fcall	_I2C_Slave_Init
   640     00CB                     l128:
   641     00CB  0008               	return
   642     00CC                     __end_of_setup:
   643                           
   644                           	psect	text2
   645     00CC                     __ptext2:	
   646 ;; *************** function _I2C_Slave_Init *****************
   647 ;; Defined at:
   648 ;;		line 93 in file "I2C.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;  address         1    wreg     unsigned char 
   651 ;; Auto vars:     Size  Location     Type
   652 ;;  address         1    3[COMMON] unsigned char 
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		wreg
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   662 ;;      Params:         0       0       0       0       0
   663 ;;      Locals:         1       0       0       0       0
   664 ;;      Temps:          0       0       0       0       0
   665 ;;      Totals:         1       0       0       0       0
   666 ;;Total ram usage:        1 bytes
   667 ;; Hardware stack levels used: 1
   668 ;; Hardware stack levels required when called: 1
   669 ;; This function calls:
   670 ;;		Nothing
   671 ;; This function is called by:
   672 ;;		_setup
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676     00CC                     _I2C_Slave_Init:	
   677                           ;psect for function _I2C_Slave_Init
   678                           
   679                           
   680                           ;incstack = 0
   681                           ; Regs used in _I2C_Slave_Init: [wreg]
   682                           ;I2C_Slave_Init@address stored from wreg
   683     00CC  00F3               	movwf	I2C_Slave_Init@address
   684     00CD                     l741:
   685                           
   686                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   687     00CD  0873               	movf	I2C_Slave_Init@address,w
   688     00CE  1683               	bsf	3,5	;RP0=1, select bank1
   689     00CF  1303               	bcf	3,6	;RP1=0, select bank1
   690     00D0  0093               	movwf	19	;volatile
   691                           
   692                           ;I2C.c: 96:     SSPCON = 0x36;
   693     00D1  3036               	movlw	54
   694     00D2  1283               	bcf	3,5	;RP0=0, select bank0
   695     00D3  1303               	bcf	3,6	;RP1=0, select bank0
   696     00D4  0094               	movwf	20	;volatile
   697                           
   698                           ;I2C.c: 97:     SSPSTAT = 0x80;
   699     00D5  3080               	movlw	128
   700     00D6  1683               	bsf	3,5	;RP0=1, select bank1
   701     00D7  1303               	bcf	3,6	;RP1=0, select bank1
   702     00D8  0094               	movwf	20	;volatile
   703                           
   704                           ;I2C.c: 98:     SSPCON2 = 0x01;
   705     00D9  3001               	movlw	1
   706     00DA  0091               	movwf	17	;volatile
   707     00DB                     l743:
   708                           
   709                           ;I2C.c: 99:     TRISC3 = 1;
   710     00DB  1587               	bsf	7,3	;volatile
   711     00DC                     l745:
   712                           
   713                           ;I2C.c: 100:     TRISC4 = 1;
   714     00DC  1607               	bsf	7,4	;volatile
   715     00DD                     l747:
   716                           
   717                           ;I2C.c: 101:     GIE = 1;
   718     00DD  178B               	bsf	11,7	;volatile
   719     00DE                     l749:
   720                           
   721                           ;I2C.c: 102:     PEIE = 1;
   722     00DE  170B               	bsf	11,6	;volatile
   723     00DF                     l751:
   724                           
   725                           ;I2C.c: 103:     SSPIF = 0;
   726     00DF  1283               	bcf	3,5	;RP0=0, select bank0
   727     00E0  1303               	bcf	3,6	;RP1=0, select bank0
   728     00E1  118C               	bcf	12,3	;volatile
   729     00E2                     l753:
   730                           
   731                           ;I2C.c: 104:     SSPIE = 1;
   732     00E2  1683               	bsf	3,5	;RP0=1, select bank1
   733     00E3  1303               	bcf	3,6	;RP1=0, select bank1
   734     00E4  158C               	bsf	12,3	;volatile
   735     00E5                     l55:
   736     00E5  0008               	return
   737     00E6                     __end_of_I2C_Slave_Init:
   738                           
   739                           	psect	text3
   740     0093                     __ptext3:	
   741 ;; *************** function _ADC_Read *****************
   742 ;; Defined at:
   743 ;;		line 5 in file "ADC.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;  channel         2    3[COMMON] unsigned int 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  2    3[COMMON] unsigned int 
   750 ;; Registers used:
   751 ;;		wreg, status,2, status,0
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         2       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0
   759 ;;      Temps:          2       0       0       0       0
   760 ;;      Totals:         4       0       0       0       0
   761 ;;Total ram usage:        4 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; Hardware stack levels required when called: 1
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_main
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771     0093                     _ADC_Read:	
   772                           ;psect for function _ADC_Read
   773                           
   774     0093                     l877:	
   775                           ;incstack = 0
   776                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
   777                           
   778                           
   779                           ;ADC.c: 6:     ADCON0bits.CHS = channel;
   780     0093  0873               	movf	ADC_Read@channel,w
   781     0094  00F5               	movwf	??_ADC_Read
   782     0095  0DF5               	rlf	??_ADC_Read,f
   783     0096  0DF5               	rlf	??_ADC_Read,f
   784     0097  1283               	bcf	3,5	;RP0=0, select bank0
   785     0098  1303               	bcf	3,6	;RP1=0, select bank0
   786     0099  081F               	movf	31,w	;volatile
   787     009A  0675               	xorwf	??_ADC_Read,w
   788     009B  39C3               	andlw	-61
   789     009C  0675               	xorwf	??_ADC_Read,w
   790     009D  009F               	movwf	31	;volatile
   791     009E                     l879:
   792                           
   793                           ;ADC.c: 7:     ADCON0bits.GO = 1;
   794     009E  149F               	bsf	31,1	;volatile
   795     009F                     l143:	
   796                           ;ADC.c: 8:     while(ADCON0bits.GO);
   797                           
   798     009F  189F               	btfsc	31,1	;volatile
   799     00A0  28A2               	goto	u151
   800     00A1  28A3               	goto	u150
   801     00A2                     u151:
   802     00A2  289F               	goto	l143
   803     00A3                     u150:
   804     00A3                     l881:
   805                           
   806                           ;ADC.c: 9:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   807     00A3  3021               	movlw	33
   808     00A4  00F5               	movwf	??_ADC_Read
   809     00A5                     u177:
   810     00A5  0BF5               	decfsz	??_ADC_Read,f
   811     00A6  28A5               	goto	u177
   812                           
   813                           ;ADC.c: 10:     return (ADRESH);
   814     00A7  1283               	bcf	3,5	;RP0=0, select bank0
   815     00A8  1303               	bcf	3,6	;RP1=0, select bank0
   816     00A9  081E               	movf	30,w	;volatile
   817     00AA  00F5               	movwf	??_ADC_Read
   818     00AB  01F6               	clrf	??_ADC_Read+1
   819     00AC  0875               	movf	??_ADC_Read,w
   820     00AD  00F3               	movwf	?_ADC_Read
   821     00AE  0876               	movf	??_ADC_Read+1,w
   822     00AF  00F4               	movwf	?_ADC_Read+1
   823     00B0                     l146:
   824     00B0  0008               	return
   825     00B1                     __end_of_ADC_Read:
   826                           
   827                           	psect	text4
   828     0015                     __ptext4:	
   829 ;; *************** function _isr *****************
   830 ;; Defined at:
   831 ;;		line 52 in file "main.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;		None
   834 ;; Auto vars:     Size  Location     Type
   835 ;;		None
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   845 ;;      Params:         0       0       0       0       0
   846 ;;      Locals:         0       0       0       0       0
   847 ;;      Temps:          3       0       0       0       0
   848 ;;      Totals:         3       0       0       0       0
   849 ;;Total ram usage:        3 bytes
   850 ;; Hardware stack levels used: 1
   851 ;; This function calls:
   852 ;;		Nothing
   853 ;; This function is called by:
   854 ;;		Interrupt level 1
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858     0015                     _isr:	
   859                           ;psect for function _isr
   860                           
   861     0015                     i1l823:
   862                           
   863                           ;main.c: 53:    if(PIR1bits.SSPIF == 1){
   864     0015  1283               	bcf	3,5	;RP0=0, select bank0
   865     0016  1303               	bcf	3,6	;RP1=0, select bank0
   866     0017  1D8C               	btfss	12,3	;volatile
   867     0018  281A               	goto	u6_21
   868     0019  281B               	goto	u6_20
   869     001A                     u6_21:
   870     001A  286B               	goto	i1l117
   871     001B                     u6_20:
   872     001B                     i1l825:
   873                           
   874                           ;main.c: 55:         SSPCONbits.CKP = 0;
   875     001B  1214               	bcf	20,4	;volatile
   876                           
   877                           ;main.c: 57:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   878     001C  1B14               	btfsc	20,6	;volatile
   879     001D  281F               	goto	u7_21
   880     001E  2820               	goto	u7_20
   881     001F                     u7_21:
   882     001F  2824               	goto	i1l829
   883     0020                     u7_20:
   884     0020                     i1l827:
   885     0020  1F94               	btfss	20,7	;volatile
   886     0021  2823               	goto	u8_21
   887     0022  2824               	goto	u8_20
   888     0023                     u8_21:
   889     0023  2829               	goto	i1l837
   890     0024                     u8_20:
   891     0024                     i1l829:
   892                           
   893                           ;main.c: 58:             z = SSPBUF;
   894     0024  0813               	movf	19,w	;volatile
   895     0025  00F8               	movwf	_z
   896     0026                     i1l831:
   897                           
   898                           ;main.c: 59:             SSPCONbits.SSPOV = 0;
   899     0026  1314               	bcf	20,6	;volatile
   900     0027                     i1l833:
   901                           
   902                           ;main.c: 60:             SSPCONbits.WCOL = 0;
   903     0027  1394               	bcf	20,7	;volatile
   904     0028                     i1l835:
   905                           
   906                           ;main.c: 61:             SSPCONbits.CKP = 1;
   907     0028  1614               	bsf	20,4	;volatile
   908     0029                     i1l837:
   909                           
   910                           ;main.c: 64:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
   911     0029  1683               	bsf	3,5	;RP0=1, select bank1
   912     002A  1303               	bcf	3,6	;RP1=0, select bank1
   913     002B  1A94               	btfsc	20,5	;volatile
   914     002C  282E               	goto	u9_21
   915     002D  282F               	goto	u9_20
   916     002E                     u9_21:
   917     002E  2849               	goto	i1l108
   918     002F                     u9_20:
   919     002F                     i1l839:
   920     002F  1914               	btfsc	20,2	;volatile
   921     0030  2832               	goto	u10_21
   922     0031  2833               	goto	u10_20
   923     0032                     u10_21:
   924     0032  2849               	goto	i1l108
   925     0033                     u10_20:
   926     0033                     i1l841:
   927                           
   928                           ;main.c: 66:             z = SSPBUF;
   929     0033  1283               	bcf	3,5	;RP0=0, select bank0
   930     0034  1303               	bcf	3,6	;RP1=0, select bank0
   931     0035  0813               	movf	19,w	;volatile
   932     0036  00F8               	movwf	_z
   933     0037                     i1l843:
   934                           
   935                           ;main.c: 68:             PIR1bits.SSPIF = 0;
   936     0037  118C               	bcf	12,3	;volatile
   937     0038                     i1l845:
   938                           
   939                           ;main.c: 69:             SSPCONbits.CKP = 1;
   940     0038  1614               	bsf	20,4	;volatile
   941     0039                     i1l109:	
   942                           ;main.c: 70:             while(!SSPSTATbits.BF);
   943                           
   944     0039  1683               	bsf	3,5	;RP0=1, select bank1
   945     003A  1303               	bcf	3,6	;RP1=0, select bank1
   946     003B  1C14               	btfss	20,0	;volatile
   947     003C  283E               	goto	u11_21
   948     003D  283F               	goto	u11_20
   949     003E                     u11_21:
   950     003E  2839               	goto	i1l109
   951     003F                     u11_20:
   952     003F                     i1l847:
   953                           
   954                           ;main.c: 71:             PORTD = SSPBUF;
   955     003F  1283               	bcf	3,5	;RP0=0, select bank0
   956     0040  1303               	bcf	3,6	;RP1=0, select bank0
   957     0041  0813               	movf	19,w	;volatile
   958     0042  0088               	movwf	8	;volatile
   959                           
   960                           ;main.c: 72:             _delay((unsigned long)((250)*(8000000/4000000.0)));
   961     0043  30A6               	movlw	166
   962     0044  00F0               	movwf	??_isr
   963     0045                     u18_27:
   964     0045  0BF0               	decfsz	??_isr,f
   965     0046  2845               	goto	u18_27
   966     0047  0000               	nop
   967                           
   968                           ;main.c: 74:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
   969     0048  2868               	goto	i1l112
   970     0049                     i1l108:
   971     0049  1A94               	btfsc	20,5	;volatile
   972     004A  284C               	goto	u12_21
   973     004B  284D               	goto	u12_20
   974     004C                     u12_21:
   975     004C  2868               	goto	i1l112
   976     004D                     u12_20:
   977     004D                     i1l849:
   978     004D  1D14               	btfss	20,2	;volatile
   979     004E  2850               	goto	u13_21
   980     004F  2851               	goto	u13_20
   981     0050                     u13_21:
   982     0050  2868               	goto	i1l112
   983     0051                     u13_20:
   984     0051                     i1l851:
   985                           
   986                           ;main.c: 75:             z = SSPBUF;
   987     0051  1283               	bcf	3,5	;RP0=0, select bank0
   988     0052  1303               	bcf	3,6	;RP1=0, select bank0
   989     0053  0813               	movf	19,w	;volatile
   990     0054  00F8               	movwf	_z
   991     0055                     i1l853:
   992                           
   993                           ;main.c: 76:             BF = 0;
   994     0055  1683               	bsf	3,5	;RP0=1, select bank1
   995     0056  1303               	bcf	3,6	;RP1=0, select bank1
   996     0057  1014               	bcf	20,0	;volatile
   997                           
   998                           ;main.c: 77:             SSPBUF = PORTB;
   999     0058  1283               	bcf	3,5	;RP0=0, select bank0
  1000     0059  1303               	bcf	3,6	;RP1=0, select bank0
  1001     005A  0806               	movf	6,w	;volatile
  1002     005B  0093               	movwf	19	;volatile
  1003     005C                     i1l855:
  1004                           
  1005                           ;main.c: 78:             SSPCONbits.CKP = 1;
  1006     005C  1614               	bsf	20,4	;volatile
  1007                           
  1008                           ;main.c: 79:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1009     005D  30A6               	movlw	166
  1010     005E  00F0               	movwf	??_isr
  1011     005F                     u19_27:
  1012     005F  0BF0               	decfsz	??_isr,f
  1013     0060  285F               	goto	u19_27
  1014     0061  0000               	nop
  1015     0062                     i1l114:	
  1016                           ;main.c: 80:             while(SSPSTATbits.BF);
  1017                           
  1018     0062  1683               	bsf	3,5	;RP0=1, select bank1
  1019     0063  1303               	bcf	3,6	;RP1=0, select bank1
  1020     0064  1814               	btfsc	20,0	;volatile
  1021     0065  2867               	goto	u14_21
  1022     0066  2868               	goto	u14_20
  1023     0067                     u14_21:
  1024     0067  2862               	goto	i1l114
  1025     0068                     u14_20:
  1026     0068                     i1l112:
  1027                           
  1028                           ;main.c: 83:         PIR1bits.SSPIF = 0;
  1029     0068  1283               	bcf	3,5	;RP0=0, select bank0
  1030     0069  1303               	bcf	3,6	;RP1=0, select bank0
  1031     006A  118C               	bcf	12,3	;volatile
  1032     006B                     i1l117:
  1033     006B  0872               	movf	??_isr+2,w
  1034     006C  008A               	movwf	10
  1035     006D  0E71               	swapf	??_isr+1,w
  1036     006E  0083               	movwf	3
  1037     006F  0EFE               	swapf	btemp,f
  1038     0070  0E7E               	swapf	btemp,w
  1039     0071  0009               	retfie
  1040     0072                     __end_of_isr:
  1041     007E                     btemp	set	126	;btemp
  1042     007E                     wtemp0	set	126
  1043                           
  1044                           	psect	intentry
  1045     0004                     __pintentry:	
  1046                           ;incstack = 0
  1047                           ; Regs used in _isr: [wreg]
  1048                           
  1049     0004                     interrupt_function:
  1050     007E                     saved_w	set	btemp
  1051     0004  00FE               	movwf	btemp
  1052     0005  0E03               	swapf	3,w
  1053     0006  00F1               	movwf	??_isr+1
  1054     0007  080A               	movf	10,w
  1055     0008  00F2               	movwf	??_isr+2
  1056     0009  120A  118A  2815   	ljmp	_isr
  1057                           
  1058                           	psect	idloc
  1059                           
  1060                           ;Config register IDLOC0 @ 0x2000
  1061                           ;	unspecified, using default values
  1062     2000                     	org	8192
  1063     2000  3FFF               	dw	16383
  1064                           
  1065                           ;Config register IDLOC1 @ 0x2001
  1066                           ;	unspecified, using default values
  1067     2001                     	org	8193
  1068     2001  3FFF               	dw	16383
  1069                           
  1070                           ;Config register IDLOC2 @ 0x2002
  1071                           ;	unspecified, using default values
  1072     2002                     	org	8194
  1073     2002  3FFF               	dw	16383
  1074                           
  1075                           ;Config register IDLOC3 @ 0x2003
  1076                           ;	unspecified, using default values
  1077     2003                     	org	8195
  1078     2003  3FFF               	dw	16383
  1079                           
  1080                           	psect	config
  1081                           
  1082                           ;Config register CONFIG1 @ 0x2007
  1083                           ;	Oscillator Selection bits
  1084                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1085                           ;	Watchdog Timer Enable bit
  1086                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1087                           ;	Power-up Timer Enable bit
  1088                           ;	PWRTE = OFF, PWRT disabled
  1089                           ;	RE3/MCLR pin function select bit
  1090                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1091                           ;	Code Protection bit
  1092                           ;	CP = OFF, Program memory code protection is disabled
  1093                           ;	Data Code Protection bit
  1094                           ;	CPD = OFF, Data memory code protection is disabled
  1095                           ;	Brown Out Reset Selection bits
  1096                           ;	BOREN = OFF, BOR disabled
  1097                           ;	Internal External Switchover bit
  1098                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1099                           ;	Fail-Safe Clock Monitor Enabled bit
  1100                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1101                           ;	Low Voltage Programming Enable bit
  1102                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1103                           ;	In-Circuit Debugger Mode bit
  1104                           ;	DEBUG = 0x1, unprogrammed default
  1105     2007                     	org	8199
  1106     2007  20D6               	dw	8406
  1107                           
  1108                           ;Config register CONFIG2 @ 0x2008
  1109                           ;	Brown-out Reset Selection bit
  1110                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1111                           ;	Flash Program Memory Self Write Enable bits
  1112                           ;	WRT = OFF, Write protection off
  1113     2008                     	org	8200
  1114     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Read
    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     113
                                              0 BANK0      3     3      0
                           _ADC_Read
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      98
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _setup
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 09 23:51:28 2023

                      _z 0078              _SSPSTATbits 0094                       _BF 04A0  
                     l55 00E5                      l122 0077                      l143 009F  
                    l128 00CB                      l146 00B0                      _ADC 0079  
                    l741 00CD                      l751 00DF                      l743 00DB  
                    l753 00E2                      l745 00DC                      l761 00B9  
                    l747 00DD                      l771 00C4                      l763 00BB  
                    l749 00DE                      l773 00C5                      l765 00BE  
                    l767 00BF                      l759 00B1                      l881 00A3  
                    l769 00C0                      l891 0081                      l877 0093  
                    l879 009E                      l889 0072                      _GIE 005F  
                    u150 00A3                      u151 00A2                      u167 0089  
                    u177 00A5                      _isr 0015                     ?_isr 0070  
                   _PEIE 005E                     u6_20 001B                     u6_21 001A  
                   u7_20 0020                     u7_21 001F                     u8_20 0024  
                   u8_21 0023                     u9_20 002F                     u9_21 002E  
                   _dato 0077                     _main 0072                     btemp 007E  
       __end_of_ADC_Read 00B1                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l112 0068  
                  i1l114 0062                    i1l108 0049                    i1l109 0039  
                  i1l117 006B                    i1l831 0026                    i1l823 0015  
                  i1l841 0033                    i1l833 0027                    i1l825 001B  
                  i1l851 0051                    i1l843 0037                    i1l835 0028  
                  i1l827 0020                    i1l853 0055                    i1l845 0038  
                  i1l837 0029                    i1l829 0024                    i1l855 005C  
                  i1l847 003F                    i1l839 002F                    i1l849 004D  
                  u10_20 0033                    u10_21 0032                    u11_20 003F  
                  u11_21 003E                    u12_20 004D                    u12_21 004C  
                  u13_20 0051                    u13_21 0050                    u14_20 0068  
                  u14_21 0067                    u18_27 0045                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008                    u19_27 005F  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _SSPIE 0463                    _SSPIF 0063                    _setup 00B1  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0093                   ??_main 0020  
                 _ADCON0 001F                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _SSPADD 0093                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPCON 0014                   _SSPBUF 0013  
        ADC_Read@channel 0073                ?_ADC_Read 0073                   saved_w 007E  
__end_of__initialization 0011           __pcstackCOMMON 0070            __end_of_setup 00CC  
             ??_ADC_Read 0075                  ??_setup 0074    I2C_Slave_Init@address 0073  
             __pnvCOMMON 0079               __pmaintext 0072               __pintentry 0004  
                _SSPCON2 0091                  _SSPSTAT 0094                  __ptext1 00B1  
                __ptext2 00CC                  __ptext3 0093                  __ptext4 0015  
   end_of_initialization 0011           _I2C_Slave_Init 00CC                _TRISCbits 0087  
 __end_of_I2C_Slave_Init 00E6      start_initialization 000F              __end_of_isr 0072  
        ?_I2C_Slave_Init 0070              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020                 _ADC_Read 0093        interrupt_function 0004  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
       ??_I2C_Slave_Init 0073                 intlevel1 0000               _OSCCONbits 008F  
            _SSPCON2bits 0091               _SSPCONbits 0014  
