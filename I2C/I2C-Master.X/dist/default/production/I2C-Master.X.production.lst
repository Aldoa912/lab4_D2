

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 10 11:32:08 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Version 2.40
    32                           ; Generated 04/07/2022 GMT
    33                           ; 
    34                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000D                     	;# 
    80     000E                     	;# 
    81     000E                     	;# 
    82     000F                     	;# 
    83     0010                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0014                     	;# 
    88     0015                     	;# 
    89     0015                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001B                     	;# 
    97     001C                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0081                     	;# 
   102     0085                     	;# 
   103     0086                     	;# 
   104     0087                     	;# 
   105     0088                     	;# 
   106     0089                     	;# 
   107     008C                     	;# 
   108     008D                     	;# 
   109     008E                     	;# 
   110     008F                     	;# 
   111     0090                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0094                     	;# 
   118     0095                     	;# 
   119     0096                     	;# 
   120     0097                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009A                     	;# 
   124     009B                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     0105                     	;# 
   130     0107                     	;# 
   131     0108                     	;# 
   132     0109                     	;# 
   133     010C                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     0185                     	;# 
   139     0187                     	;# 
   140     0188                     	;# 
   141     0189                     	;# 
   142     018C                     	;# 
   143     018D                     	;# 
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     000E                     	;# 
   159     000E                     	;# 
   160     000F                     	;# 
   161     0010                     	;# 
   162     0011                     	;# 
   163     0012                     	;# 
   164     0013                     	;# 
   165     0014                     	;# 
   166     0015                     	;# 
   167     0015                     	;# 
   168     0016                     	;# 
   169     0017                     	;# 
   170     0018                     	;# 
   171     0019                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     0081                     	;# 
   180     0085                     	;# 
   181     0086                     	;# 
   182     0087                     	;# 
   183     0088                     	;# 
   184     0089                     	;# 
   185     008C                     	;# 
   186     008D                     	;# 
   187     008E                     	;# 
   188     008F                     	;# 
   189     0090                     	;# 
   190     0091                     	;# 
   191     0092                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0094                     	;# 
   196     0095                     	;# 
   197     0096                     	;# 
   198     0097                     	;# 
   199     0098                     	;# 
   200     0099                     	;# 
   201     009A                     	;# 
   202     009B                     	;# 
   203     009C                     	;# 
   204     009D                     	;# 
   205     009E                     	;# 
   206     009F                     	;# 
   207     0105                     	;# 
   208     0107                     	;# 
   209     0108                     	;# 
   210     0109                     	;# 
   211     010C                     	;# 
   212     010C                     	;# 
   213     010D                     	;# 
   214     010E                     	;# 
   215     010F                     	;# 
   216     0185                     	;# 
   217     0187                     	;# 
   218     0188                     	;# 
   219     0189                     	;# 
   220     018C                     	;# 
   221     018D                     	;# 
   222     0000                     	;# 
   223     0001                     	;# 
   224     0002                     	;# 
   225     0003                     	;# 
   226     0004                     	;# 
   227     0005                     	;# 
   228     0006                     	;# 
   229     0007                     	;# 
   230     0008                     	;# 
   231     0009                     	;# 
   232     000A                     	;# 
   233     000B                     	;# 
   234     000C                     	;# 
   235     000D                     	;# 
   236     000E                     	;# 
   237     000E                     	;# 
   238     000F                     	;# 
   239     0010                     	;# 
   240     0011                     	;# 
   241     0012                     	;# 
   242     0013                     	;# 
   243     0014                     	;# 
   244     0015                     	;# 
   245     0015                     	;# 
   246     0016                     	;# 
   247     0017                     	;# 
   248     0018                     	;# 
   249     0019                     	;# 
   250     001A                     	;# 
   251     001B                     	;# 
   252     001B                     	;# 
   253     001C                     	;# 
   254     001D                     	;# 
   255     001E                     	;# 
   256     001F                     	;# 
   257     0081                     	;# 
   258     0085                     	;# 
   259     0086                     	;# 
   260     0087                     	;# 
   261     0088                     	;# 
   262     0089                     	;# 
   263     008C                     	;# 
   264     008D                     	;# 
   265     008E                     	;# 
   266     008F                     	;# 
   267     0090                     	;# 
   268     0091                     	;# 
   269     0092                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0094                     	;# 
   274     0095                     	;# 
   275     0096                     	;# 
   276     0097                     	;# 
   277     0098                     	;# 
   278     0099                     	;# 
   279     009A                     	;# 
   280     009B                     	;# 
   281     009C                     	;# 
   282     009D                     	;# 
   283     009E                     	;# 
   284     009F                     	;# 
   285     0105                     	;# 
   286     0107                     	;# 
   287     0108                     	;# 
   288     0109                     	;# 
   289     010C                     	;# 
   290     010C                     	;# 
   291     010D                     	;# 
   292     010E                     	;# 
   293     010F                     	;# 
   294     0185                     	;# 
   295     0187                     	;# 
   296     0188                     	;# 
   297     0189                     	;# 
   298     018C                     	;# 
   299     018D                     	;# 
   300     0000                     	;# 
   301     0001                     	;# 
   302     0002                     	;# 
   303     0003                     	;# 
   304     0004                     	;# 
   305     0005                     	;# 
   306     0006                     	;# 
   307     0007                     	;# 
   308     0008                     	;# 
   309     0009                     	;# 
   310     000A                     	;# 
   311     000B                     	;# 
   312     000C                     	;# 
   313     000D                     	;# 
   314     000E                     	;# 
   315     000E                     	;# 
   316     000F                     	;# 
   317     0010                     	;# 
   318     0011                     	;# 
   319     0012                     	;# 
   320     0013                     	;# 
   321     0014                     	;# 
   322     0015                     	;# 
   323     0015                     	;# 
   324     0016                     	;# 
   325     0017                     	;# 
   326     0018                     	;# 
   327     0019                     	;# 
   328     001A                     	;# 
   329     001B                     	;# 
   330     001B                     	;# 
   331     001C                     	;# 
   332     001D                     	;# 
   333     001E                     	;# 
   334     001F                     	;# 
   335     0081                     	;# 
   336     0085                     	;# 
   337     0086                     	;# 
   338     0087                     	;# 
   339     0088                     	;# 
   340     0089                     	;# 
   341     008C                     	;# 
   342     008D                     	;# 
   343     008E                     	;# 
   344     008F                     	;# 
   345     0090                     	;# 
   346     0091                     	;# 
   347     0092                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0094                     	;# 
   352     0095                     	;# 
   353     0096                     	;# 
   354     0097                     	;# 
   355     0098                     	;# 
   356     0099                     	;# 
   357     009A                     	;# 
   358     009B                     	;# 
   359     009C                     	;# 
   360     009D                     	;# 
   361     009E                     	;# 
   362     009F                     	;# 
   363     0105                     	;# 
   364     0107                     	;# 
   365     0108                     	;# 
   366     0109                     	;# 
   367     010C                     	;# 
   368     010C                     	;# 
   369     010D                     	;# 
   370     010E                     	;# 
   371     010F                     	;# 
   372     0185                     	;# 
   373     0187                     	;# 
   374     0188                     	;# 
   375     0189                     	;# 
   376     018C                     	;# 
   377     018D                     	;# 
   378     0000                     	;# 
   379     0001                     	;# 
   380     0002                     	;# 
   381     0003                     	;# 
   382     0004                     	;# 
   383     0005                     	;# 
   384     0006                     	;# 
   385     0007                     	;# 
   386     0008                     	;# 
   387     0009                     	;# 
   388     000A                     	;# 
   389     000B                     	;# 
   390     000C                     	;# 
   391     000D                     	;# 
   392     000E                     	;# 
   393     000E                     	;# 
   394     000F                     	;# 
   395     0010                     	;# 
   396     0011                     	;# 
   397     0012                     	;# 
   398     0013                     	;# 
   399     0014                     	;# 
   400     0015                     	;# 
   401     0015                     	;# 
   402     0016                     	;# 
   403     0017                     	;# 
   404     0018                     	;# 
   405     0019                     	;# 
   406     001A                     	;# 
   407     001B                     	;# 
   408     001B                     	;# 
   409     001C                     	;# 
   410     001D                     	;# 
   411     001E                     	;# 
   412     001F                     	;# 
   413     0081                     	;# 
   414     0085                     	;# 
   415     0086                     	;# 
   416     0087                     	;# 
   417     0088                     	;# 
   418     0089                     	;# 
   419     008C                     	;# 
   420     008D                     	;# 
   421     008E                     	;# 
   422     008F                     	;# 
   423     0090                     	;# 
   424     0091                     	;# 
   425     0092                     	;# 
   426     0093                     	;# 
   427     0093                     	;# 
   428     0093                     	;# 
   429     0094                     	;# 
   430     0095                     	;# 
   431     0096                     	;# 
   432     0097                     	;# 
   433     0098                     	;# 
   434     0099                     	;# 
   435     009A                     	;# 
   436     009B                     	;# 
   437     009C                     	;# 
   438     009D                     	;# 
   439     009E                     	;# 
   440     009F                     	;# 
   441     0105                     	;# 
   442     0107                     	;# 
   443     0108                     	;# 
   444     0109                     	;# 
   445     010C                     	;# 
   446     010C                     	;# 
   447     010D                     	;# 
   448     010E                     	;# 
   449     010F                     	;# 
   450     0185                     	;# 
   451     0187                     	;# 
   452     0188                     	;# 
   453     0189                     	;# 
   454     018C                     	;# 
   455     018D                     	;# 
   456     0008                     _PORTDbits	set	8
   457     001F                     _ADCON0	set	31
   458     001E                     _ADRESH	set	30
   459     001F                     _ADCON0bits	set	31
   460     0013                     _SSPBUF	set	19
   461     0014                     _SSPCON	set	20
   462     0008                     _PORTD	set	8
   463     0006                     _PORTB	set	6
   464     0043                     _RD3	set	67
   465     0047                     _RD7	set	71
   466     0046                     _RD6	set	70
   467     0045                     _RD5	set	69
   468     0044                     _RD4	set	68
   469     0063                     _SSPIF	set	99
   470     005E                     _PEIE	set	94
   471     005F                     _GIE	set	95
   472     009F                     _ADCON1bits	set	159
   473     0091                     _SSPCON2bits	set	145
   474     0087                     _TRISCbits	set	135
   475     0094                     _SSPSTAT	set	148
   476     0093                     _SSPADD	set	147
   477     0091                     _SSPCON2	set	145
   478     008F                     _OSCCONbits	set	143
   479     0088                     _TRISD	set	136
   480     0086                     _TRISB	set	134
   481     0463                     _SSPIE	set	1123
   482     043C                     _TRISC4	set	1084
   483     043B                     _TRISC3	set	1083
   484     0189                     _ANSELH	set	393
   485     0188                     _ANSEL	set	392
   486                           
   487                           	psect	strings
   488     0003                     __pstrings:
   489     0003                     stringtab:
   490     0003                     __stringtab:
   491     0003                     stringcode:	
   492                           ;	String table - string pointers are 1 byte each
   493                           
   494     0003                     stringdir:
   495     0003  3000               	movlw	high stringdir
   496     0004  008A               	movwf	10
   497     0005  0804               	movf	4,w
   498     0006  0A84               	incf	4,f
   499     0007  0782               	addwf	2,f
   500     0008                     __stringbase:
   501     0008  3400               	retlw	0
   502     0009                     __end_of__stringtab:
   503     0009                     STR_1:
   504     0009  3441               	retlw	65	;'A'
   505     000A  3444               	retlw	68	;'D'
   506     000B  3443               	retlw	67	;'C'
   507     000C  3420               	retlw	32	;' '
   508     000D  3420               	retlw	32	;' '
   509     000E  3420               	retlw	32	;' '
   510     000F  3420               	retlw	32	;' '
   511     0010  3420               	retlw	32	;' '
   512     0011  3446               	retlw	70	;'F'
   513     0012  3465               	retlw	101	;'e'
   514     0013  3463               	retlw	99	;'c'
   515     0014  3468               	retlw	104	;'h'
   516     0015  3461               	retlw	97	;'a'
   517     0016  3400               	retlw	0
   518                           
   519                           	psect	cinit
   520     07F6                     start_initialization:	
   521                           ; #config settings
   522                           
   523     07F6                     __initialization:
   524                           
   525                           ; Clear objects allocated to BANK0
   526     07F6  1283               	bcf	3,5	;RP0=0, select bank0
   527     07F7  1303               	bcf	3,6	;RP1=0, select bank0
   528     07F8  01AB               	clrf	__pbssBANK0& (0+127)
   529     07F9  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   530     07FA  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   531     07FB  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   532     07FC                     end_of_initialization:	
   533                           ;End of C runtime variable initialization code
   534                           
   535     07FC                     __end_of__initialization:
   536     07FC  0183               	clrf	3
   537     07FD  120A  118A  2F09   	ljmp	_main	;jump to C main() function
   538                           
   539                           	psect	bssBANK0
   540     002B                     __pbssBANK0:
   541     002B                     _unidad:
   542     002B                     	ds	1
   543     002C                     _decenas:
   544     002C                     	ds	1
   545     002D                     _centenas:
   546     002D                     	ds	1
   547     002E                     _ADC:
   548     002E                     	ds	1
   549                           
   550                           	psect	cstackCOMMON
   551     0070                     __pcstackCOMMON:
   552     0070                     ?_setup:
   553     0070                     ?_Lcd_Init:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     ?_Lcd_Clear:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ?_Lcd_Write_String:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ?_I2C_Master_Start:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ??_I2C_Master_Start:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_I2C_Master_Write:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ?_I2C_Master_Stop:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ??_I2C_Master_Stop:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0070                     ?_Lcd_Write_Char:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0070                     ?_main:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0070                     ?_I2C_Master_Wait:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0070                     ??_I2C_Master_Wait:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     0070                     ?_Lcd_Port:	
   590                           ; 1 bytes @ 0x0
   591                           
   592     0070                     ??_Lcd_Port:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     ?_Lcd_Cmd:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ?_I2C_Master_Read:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0070                     ?___awdiv:	
   602                           ; 2 bytes @ 0x0
   603                           
   604     0070                     ?___lldiv:	
   605                           ; 2 bytes @ 0x0
   606                           
   607     0070                     Lcd_Port@a:	
   608                           ; 4 bytes @ 0x0
   609                           
   610     0070                     I2C_Master_Write@d:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0070                     I2C_Master_Read@a:	
   614                           ; 2 bytes @ 0x0
   615                           
   616     0070                     ___awdiv@divisor:	
   617                           ; 2 bytes @ 0x0
   618                           
   619     0070                     ___lldiv@divisor:	
   620                           ; 2 bytes @ 0x0
   621                           
   622                           
   623                           ; 4 bytes @ 0x0
   624     0070                     	ds	1
   625     0071                     ??_Lcd_Write_Char:
   626     0071                     ??_Lcd_Cmd:	
   627                           ; 1 bytes @ 0x1
   628                           
   629                           
   630                           ; 1 bytes @ 0x1
   631     0071                     	ds	1
   632     0072                     ??_I2C_Master_Write:
   633     0072                     ??_I2C_Master_Read:	
   634                           ; 1 bytes @ 0x2
   635                           
   636     0072                     Lcd_Write_Char@temp:	
   637                           ; 1 bytes @ 0x2
   638                           
   639     0072                     ___awdiv@dividend:	
   640                           ; 1 bytes @ 0x2
   641                           
   642                           
   643                           ; 2 bytes @ 0x2
   644     0072                     	ds	1
   645     0073                     Lcd_Cmd@a:
   646     0073                     Lcd_Write_Char@y:	
   647                           ; 1 bytes @ 0x3
   648                           
   649                           
   650                           ; 1 bytes @ 0x3
   651     0073                     	ds	1
   652     0074                     ??_Lcd_Init:
   653     0074                     ??_Lcd_Clear:	
   654                           ; 1 bytes @ 0x4
   655                           
   656     0074                     ?_Lcd_Set_Cursor:	
   657                           ; 1 bytes @ 0x4
   658                           
   659     0074                     ??___awdiv:	
   660                           ; 1 bytes @ 0x4
   661                           
   662     0074                     Lcd_Set_Cursor@b:	
   663                           ; 1 bytes @ 0x4
   664                           
   665     0074                     Lcd_Write_Char@a:	
   666                           ; 1 bytes @ 0x4
   667                           
   668     0074                     I2C_Master_Read@temp:	
   669                           ; 1 bytes @ 0x4
   670                           
   671     0074                     ___lldiv@dividend:	
   672                           ; 2 bytes @ 0x4
   673                           
   674                           
   675                           ; 4 bytes @ 0x4
   676     0074                     	ds	1
   677     0075                     ??_Lcd_Set_Cursor:
   678     0075                     ??_Lcd_Write_String:	
   679                           ; 1 bytes @ 0x5
   680                           
   681     0075                     ___awdiv@counter:	
   682                           ; 1 bytes @ 0x5
   683                           
   684     0075                     Lcd_Write_String@i:	
   685                           ; 1 bytes @ 0x5
   686                           
   687                           
   688                           ; 2 bytes @ 0x5
   689     0075                     	ds	1
   690     0076                     Lcd_Set_Cursor@a:
   691     0076                     ___awdiv@sign:	
   692                           ; 1 bytes @ 0x6
   693                           
   694                           
   695                           ; 1 bytes @ 0x6
   696     0076                     	ds	1
   697     0077                     Lcd_Set_Cursor@z:
   698     0077                     Lcd_Write_String@a:	
   699                           ; 1 bytes @ 0x7
   700                           
   701     0077                     ___awdiv@quotient:	
   702                           ; 1 bytes @ 0x7
   703                           
   704                           
   705                           ; 2 bytes @ 0x7
   706     0077                     	ds	1
   707     0078                     ??___lldiv:
   708     0078                     Lcd_Set_Cursor@y:	
   709                           ; 1 bytes @ 0x8
   710                           
   711                           
   712                           ; 1 bytes @ 0x8
   713     0078                     	ds	1
   714     0079                     ?___awmod:
   715     0079                     Lcd_Set_Cursor@temp:	
   716                           ; 2 bytes @ 0x9
   717                           
   718     0079                     ___awmod@divisor:	
   719                           ; 1 bytes @ 0x9
   720                           
   721     0079                     ___lldiv@quotient:	
   722                           ; 2 bytes @ 0x9
   723                           
   724                           
   725                           ; 4 bytes @ 0x9
   726     0079                     	ds	2
   727     007B                     ___awmod@dividend:
   728                           
   729                           ; 2 bytes @ 0xB
   730     007B                     	ds	2
   731     007D                     ??___awmod:
   732     007D                     ___lldiv@counter:	
   733                           ; 1 bytes @ 0xD
   734                           
   735                           
   736                           ; 1 bytes @ 0xD
   737     007D                     	ds	1
   738     007E                     ??_setup:
   739                           
   740                           	psect	cstackBANK0
   741     0020                     __pcstackBANK0:	
   742                           ; 1 bytes @ 0xE
   743                           
   744     0020                     ?_I2C_Master_Init:
   745     0020                     ___awmod@counter:	
   746                           ; 1 bytes @ 0x0
   747                           
   748     0020                     I2C_Master_Init@c:	
   749                           ; 1 bytes @ 0x0
   750                           
   751                           
   752                           ; 4 bytes @ 0x0
   753     0020                     	ds	1
   754     0021                     ___awmod@sign:
   755                           
   756                           ; 1 bytes @ 0x1
   757     0021                     	ds	3
   758     0024                     ??_I2C_Master_Init:
   759                           
   760                           ; 1 bytes @ 0x4
   761     0024                     	ds	4
   762     0028                     ??_main:
   763                           
   764                           ; 1 bytes @ 0x8
   765     0028                     	ds	3
   766                           
   767                           	psect	maintext
   768     0709                     __pmaintext:	
   769 ;;
   770 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   771 ;;
   772 ;; *************** function _main *****************
   773 ;; Defined at:
   774 ;;		line 56 in file "main.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : B00/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   788 ;;      Params:         0       0       0       0       0
   789 ;;      Locals:         0       0       0       0       0
   790 ;;      Temps:          0       3       0       0       0
   791 ;;      Totals:         0       3       0       0       0
   792 ;;Total ram usage:        3 bytes
   793 ;; Hardware stack levels required when called: 3
   794 ;; This function calls:
   795 ;;		_I2C_Master_Read
   796 ;;		_I2C_Master_Start
   797 ;;		_I2C_Master_Stop
   798 ;;		_I2C_Master_Write
   799 ;;		_Lcd_Clear
   800 ;;		_Lcd_Init
   801 ;;		_Lcd_Set_Cursor
   802 ;;		_Lcd_Write_Char
   803 ;;		_Lcd_Write_String
   804 ;;		___awdiv
   805 ;;		___awmod
   806 ;;		_setup
   807 ;; This function is called by:
   808 ;;		Startup code after reset
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812     0709                     _main:	
   813                           ;psect for function _main
   814                           
   815     0709                     l1340:	
   816                           ;incstack = 0
   817                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   818                           
   819                           
   820                           ;main.c: 57:     setup();
   821     0709  120A  118A  243B  120A  118A  	fcall	_setup
   822                           
   823                           ;main.c: 58:     Lcd_Init();
   824     070E  120A  118A  25DF  120A  118A  	fcall	_Lcd_Init
   825                           
   826                           ;main.c: 59:     Lcd_Clear();
   827     0713  120A  118A  2414  120A  118A  	fcall	_Lcd_Clear
   828                           
   829                           ;main.c: 60:     Lcd_Set_Cursor(1,1);
   830     0718  01F4               	clrf	Lcd_Set_Cursor@b
   831     0719  0AF4               	incf	Lcd_Set_Cursor@b,f
   832     071A  3001               	movlw	1
   833     071B  120A  118A  253E  120A  118A  	fcall	_Lcd_Set_Cursor
   834     0720                     l1342:
   835                           
   836                           ;main.c: 61:     Lcd_Write_String("ADC     Fecha");
   837     0720  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   838     0721  120A  118A  247E  120A  118A  	fcall	_Lcd_Write_String
   839     0726                     l1344:
   840                           
   841                           ;main.c: 63:         I2C_Master_Start();
   842     0726  120A  118A  23EB  120A  118A  	fcall	_I2C_Master_Start
   843     072B                     l1346:
   844                           
   845                           ;main.c: 64:         I2C_Master_Write(0x50);
   846     072B  3050               	movlw	80
   847     072C  00F0               	movwf	I2C_Master_Write@d
   848     072D  3000               	movlw	0
   849     072E  00F1               	movwf	I2C_Master_Write@d+1
   850     072F  120A  118A  23FD  120A  118A  	fcall	_I2C_Master_Write
   851     0734                     l1348:
   852                           
   853                           ;main.c: 65:         I2C_Master_Write(PORTB);
   854     0734  1283               	bcf	3,5	;RP0=0, select bank0
   855     0735  1303               	bcf	3,6	;RP1=0, select bank0
   856     0736  0806               	movf	6,w	;volatile
   857     0737  00A8               	movwf	??_main
   858     0738  01A9               	clrf	??_main+1
   859     0739  0828               	movf	??_main,w
   860     073A  00F0               	movwf	I2C_Master_Write@d
   861     073B  0829               	movf	??_main+1,w
   862     073C  00F1               	movwf	I2C_Master_Write@d+1
   863     073D  120A  118A  23FD  120A  118A  	fcall	_I2C_Master_Write
   864     0742                     l1350:
   865                           
   866                           ;main.c: 66:         I2C_Master_Stop();
   867     0742  120A  118A  23F4  120A  118A  	fcall	_I2C_Master_Stop
   868     0747                     l1352:
   869                           
   870                           ;main.c: 67:         _delay((unsigned long)((200)*(8000000/4000.0)));
   871     0747  3003               	movlw	3
   872     0748  1283               	bcf	3,5	;RP0=0, select bank0
   873     0749  1303               	bcf	3,6	;RP1=0, select bank0
   874     074A  00AA               	movwf	??_main+2
   875     074B  3008               	movlw	8
   876     074C  00A9               	movwf	??_main+1
   877     074D  3076               	movlw	118
   878     074E  00A8               	movwf	??_main
   879     074F                     u827:
   880     074F  0BA8               	decfsz	??_main,f
   881     0750  2F4F               	goto	u827
   882     0751  0BA9               	decfsz	??_main+1,f
   883     0752  2F4F               	goto	u827
   884     0753  0BAA               	decfsz	??_main+2,f
   885     0754  2F4F               	goto	u827
   886     0755  0000               	nop
   887     0756                     l1354:
   888                           
   889                           ;main.c: 69:         I2C_Master_Start();
   890     0756  120A  118A  23EB  120A  118A  	fcall	_I2C_Master_Start
   891     075B                     l1356:
   892                           
   893                           ;main.c: 70:         I2C_Master_Write(0x51);
   894     075B  3051               	movlw	81
   895     075C  00F0               	movwf	I2C_Master_Write@d
   896     075D  3000               	movlw	0
   897     075E  00F1               	movwf	I2C_Master_Write@d+1
   898     075F  120A  118A  23FD  120A  118A  	fcall	_I2C_Master_Write
   899     0764                     l1358:
   900                           
   901                           ;main.c: 71:         ADC = I2C_Master_Read(0);
   902     0764  3000               	movlw	0
   903     0765  00F0               	movwf	I2C_Master_Read@a
   904     0766  00F1               	movwf	I2C_Master_Read@a+1
   905     0767  120A  118A  24A3  120A  118A  	fcall	_I2C_Master_Read
   906     076C  0870               	movf	?_I2C_Master_Read,w
   907     076D  1283               	bcf	3,5	;RP0=0, select bank0
   908     076E  1303               	bcf	3,6	;RP1=0, select bank0
   909     076F  00AE               	movwf	_ADC
   910     0770                     l1360:
   911                           
   912                           ;main.c: 72:         I2C_Master_Stop();
   913     0770  120A  118A  23F4  120A  118A  	fcall	_I2C_Master_Stop
   914     0775                     l1362:
   915                           
   916                           ;main.c: 73:         _delay((unsigned long)((200)*(8000000/4000.0)));
   917     0775  3003               	movlw	3
   918     0776  1283               	bcf	3,5	;RP0=0, select bank0
   919     0777  1303               	bcf	3,6	;RP1=0, select bank0
   920     0778  00AA               	movwf	??_main+2
   921     0779  3008               	movlw	8
   922     077A  00A9               	movwf	??_main+1
   923     077B  3076               	movlw	118
   924     077C  00A8               	movwf	??_main
   925     077D                     u837:
   926     077D  0BA8               	decfsz	??_main,f
   927     077E  2F7D               	goto	u837
   928     077F  0BA9               	decfsz	??_main+1,f
   929     0780  2F7D               	goto	u837
   930     0781  0BAA               	decfsz	??_main+2,f
   931     0782  2F7D               	goto	u837
   932     0783  0000               	nop
   933     0784                     l1364:
   934                           
   935                           ;main.c: 75:         centenas = (ADC/100);
   936     0784  3064               	movlw	100
   937     0785  00F0               	movwf	___awdiv@divisor
   938     0786  3000               	movlw	0
   939     0787  00F1               	movwf	___awdiv@divisor+1
   940     0788  1283               	bcf	3,5	;RP0=0, select bank0
   941     0789  1303               	bcf	3,6	;RP1=0, select bank0
   942     078A  082E               	movf	_ADC,w
   943     078B  00A8               	movwf	??_main
   944     078C  01A9               	clrf	??_main+1
   945     078D  0828               	movf	??_main,w
   946     078E  00F2               	movwf	___awdiv@dividend
   947     078F  0829               	movf	??_main+1,w
   948     0790  00F3               	movwf	___awdiv@dividend+1
   949     0791  120A  118A  26A2  120A  118A  	fcall	___awdiv
   950     0796  0870               	movf	?___awdiv,w
   951     0797  1283               	bcf	3,5	;RP0=0, select bank0
   952     0798  1303               	bcf	3,6	;RP1=0, select bank0
   953     0799  00AD               	movwf	_centenas
   954     079A                     l1366:
   955                           
   956                           ;main.c: 76:         decenas = (ADC/10)%10;
   957     079A  300A               	movlw	10
   958     079B  00F9               	movwf	___awmod@divisor
   959     079C  3000               	movlw	0
   960     079D  00FA               	movwf	___awmod@divisor+1
   961     079E  300A               	movlw	10
   962     079F  00F0               	movwf	___awdiv@divisor
   963     07A0  3000               	movlw	0
   964     07A1  00F1               	movwf	___awdiv@divisor+1
   965     07A2  082E               	movf	_ADC,w
   966     07A3  00A8               	movwf	??_main
   967     07A4  01A9               	clrf	??_main+1
   968     07A5  0828               	movf	??_main,w
   969     07A6  00F2               	movwf	___awdiv@dividend
   970     07A7  0829               	movf	??_main+1,w
   971     07A8  00F3               	movwf	___awdiv@dividend+1
   972     07A9  120A  118A  26A2  120A  118A  	fcall	___awdiv
   973     07AE  0871               	movf	?___awdiv+1,w
   974     07AF  00FC               	movwf	___awmod@dividend+1
   975     07B0  0870               	movf	?___awdiv,w
   976     07B1  00FB               	movwf	___awmod@dividend
   977     07B2  120A  118A  2584  120A  118A  	fcall	___awmod
   978     07B7  0879               	movf	?___awmod,w
   979     07B8  1283               	bcf	3,5	;RP0=0, select bank0
   980     07B9  1303               	bcf	3,6	;RP1=0, select bank0
   981     07BA  00AC               	movwf	_decenas
   982     07BB                     l1368:
   983                           
   984                           ;main.c: 77:         unidad = ADC%10;
   985     07BB  300A               	movlw	10
   986     07BC  00F9               	movwf	___awmod@divisor
   987     07BD  3000               	movlw	0
   988     07BE  00FA               	movwf	___awmod@divisor+1
   989     07BF  082E               	movf	_ADC,w
   990     07C0  00A8               	movwf	??_main
   991     07C1  01A9               	clrf	??_main+1
   992     07C2  0828               	movf	??_main,w
   993     07C3  00FB               	movwf	___awmod@dividend
   994     07C4  0829               	movf	??_main+1,w
   995     07C5  00FC               	movwf	___awmod@dividend+1
   996     07C6  120A  118A  2584  120A  118A  	fcall	___awmod
   997     07CB  0879               	movf	?___awmod,w
   998     07CC  1283               	bcf	3,5	;RP0=0, select bank0
   999     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1000     07CE  00AB               	movwf	_unidad
  1001     07CF                     l1370:
  1002                           
  1003                           ;main.c: 79:         Lcd_Set_Cursor(2,1);
  1004     07CF  01F4               	clrf	Lcd_Set_Cursor@b
  1005     07D0  0AF4               	incf	Lcd_Set_Cursor@b,f
  1006     07D1  3002               	movlw	2
  1007     07D2  120A  118A  253E  120A  118A  	fcall	_Lcd_Set_Cursor
  1008     07D7                     l1372:
  1009                           
  1010                           ;main.c: 80:         Lcd_Write_Char(centenas + 48);
  1011     07D7  1283               	bcf	3,5	;RP0=0, select bank0
  1012     07D8  1303               	bcf	3,6	;RP1=0, select bank0
  1013     07D9  082D               	movf	_centenas,w
  1014     07DA  3E30               	addlw	48
  1015     07DB  120A  118A  24D1  120A  118A  	fcall	_Lcd_Write_Char
  1016     07E0                     l1374:
  1017                           
  1018                           ;main.c: 81:         Lcd_Write_Char(decenas + 48);
  1019     07E0  1283               	bcf	3,5	;RP0=0, select bank0
  1020     07E1  1303               	bcf	3,6	;RP1=0, select bank0
  1021     07E2  082C               	movf	_decenas,w
  1022     07E3  3E30               	addlw	48
  1023     07E4  120A  118A  24D1  120A  118A  	fcall	_Lcd_Write_Char
  1024     07E9                     l1376:
  1025                           
  1026                           ;main.c: 82:         Lcd_Write_Char(unidad + 48);
  1027     07E9  1283               	bcf	3,5	;RP0=0, select bank0
  1028     07EA  1303               	bcf	3,6	;RP1=0, select bank0
  1029     07EB  082B               	movf	_unidad,w
  1030     07EC  3E30               	addlw	48
  1031     07ED  120A  118A  24D1  120A  118A  	fcall	_Lcd_Write_Char
  1032     07F2  2F26               	goto	l1344
  1033     07F3  120A  118A  2800   	ljmp	start
  1034     07F6                     __end_of_main:
  1035                           
  1036                           	psect	text1
  1037     043B                     __ptext1:	
  1038 ;; *************** function _setup *****************
  1039 ;; Defined at:
  1040 ;;		line 89 in file "main.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;		None
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg, status,2, status,0, pclath, cstack
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1054 ;;      Params:         0       0       0       0       0
  1055 ;;      Locals:         0       0       0       0       0
  1056 ;;      Temps:          0       0       0       0       0
  1057 ;;      Totals:         0       0       0       0       0
  1058 ;;Total ram usage:        0 bytes
  1059 ;; Hardware stack levels used: 1
  1060 ;; Hardware stack levels required when called: 2
  1061 ;; This function calls:
  1062 ;;		_I2C_Master_Init
  1063 ;; This function is called by:
  1064 ;;		_main
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068     043B                     _setup:	
  1069                           ;psect for function _setup
  1070                           
  1071     043B                     l1182:	
  1072                           ;incstack = 0
  1073                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1074                           
  1075                           
  1076                           ;main.c: 90:     ANSEL = 0;
  1077     043B  1683               	bsf	3,5	;RP0=1, select bank3
  1078     043C  1703               	bsf	3,6	;RP1=1, select bank3
  1079     043D  0188               	clrf	8	;volatile
  1080                           
  1081                           ;main.c: 91:     ANSELH = 0;
  1082     043E  0189               	clrf	9	;volatile
  1083                           
  1084                           ;main.c: 92:     TRISB = 0;
  1085     043F  1683               	bsf	3,5	;RP0=1, select bank1
  1086     0440  1303               	bcf	3,6	;RP1=0, select bank1
  1087     0441  0186               	clrf	6	;volatile
  1088                           
  1089                           ;main.c: 93:     TRISD = 0;
  1090     0442  0188               	clrf	8	;volatile
  1091                           
  1092                           ;main.c: 94:     PORTB = 0;
  1093     0443  1283               	bcf	3,5	;RP0=0, select bank0
  1094     0444  1303               	bcf	3,6	;RP1=0, select bank0
  1095     0445  0186               	clrf	6	;volatile
  1096                           
  1097                           ;main.c: 95:     PORTD = 0;
  1098     0446  0188               	clrf	8	;volatile
  1099     0447                     l1184:
  1100                           
  1101                           ;main.c: 96:     OSCCONbits.IRCF = 0b111;
  1102     0447  3070               	movlw	112
  1103     0448  1683               	bsf	3,5	;RP0=1, select bank1
  1104     0449  1303               	bcf	3,6	;RP1=0, select bank1
  1105     044A  048F               	iorwf	15,f	;volatile
  1106     044B                     l1186:
  1107                           
  1108                           ;main.c: 97:     OSCCONbits.SCS = 1;
  1109     044B  140F               	bsf	15,0	;volatile
  1110     044C                     l1188:
  1111                           
  1112                           ;main.c: 98:     I2C_Master_Init(100000);
  1113     044C  3000               	movlw	0
  1114     044D  1283               	bcf	3,5	;RP0=0, select bank0
  1115     044E  1303               	bcf	3,6	;RP1=0, select bank0
  1116     044F  00A3               	movwf	I2C_Master_Init@c+3
  1117     0450  3001               	movlw	1
  1118     0451  00A2               	movwf	I2C_Master_Init@c+2
  1119     0452  3086               	movlw	134
  1120     0453  00A1               	movwf	I2C_Master_Init@c+1
  1121     0454  30A0               	movlw	160
  1122     0455  00A0               	movwf	I2C_Master_Init@c
  1123     0456  120A  118A  2506  120A  118A  	fcall	_I2C_Master_Init
  1124     045B                     l57:
  1125     045B  0008               	return
  1126     045C                     __end_of_setup:
  1127                           
  1128                           	psect	text2
  1129     0506                     __ptext2:	
  1130 ;; *************** function _I2C_Master_Init *****************
  1131 ;; Defined at:
  1132 ;;		line 16 in file "I2C.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  c               4    0[BANK0 ] const unsigned long 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0, pclath, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         0       4       0       0       0
  1147 ;;      Locals:         0       0       0       0       0
  1148 ;;      Temps:          0       4       0       0       0
  1149 ;;      Totals:         0       8       0       0       0
  1150 ;;Total ram usage:        8 bytes
  1151 ;; Hardware stack levels used: 1
  1152 ;; Hardware stack levels required when called: 1
  1153 ;; This function calls:
  1154 ;;		___lldiv
  1155 ;; This function is called by:
  1156 ;;		_setup
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160     0506                     _I2C_Master_Init:	
  1161                           ;psect for function _I2C_Master_Init
  1162                           
  1163     0506                     l1156:	
  1164                           ;incstack = 0
  1165                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1166                           
  1167                           
  1168                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1169     0506  3028               	movlw	40
  1170     0507  1283               	bcf	3,5	;RP0=0, select bank0
  1171     0508  1303               	bcf	3,6	;RP1=0, select bank0
  1172     0509  0094               	movwf	20	;volatile
  1173     050A                     l1158:
  1174                           
  1175                           ;I2C.c: 19:     SSPCON2 = 0;
  1176     050A  1683               	bsf	3,5	;RP0=1, select bank1
  1177     050B  1303               	bcf	3,6	;RP1=0, select bank1
  1178     050C  0191               	clrf	17	;volatile
  1179     050D                     l1160:
  1180                           
  1181                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1182     050D  1283               	bcf	3,5	;RP0=0, select bank0
  1183     050E  1303               	bcf	3,6	;RP1=0, select bank0
  1184     050F  0820               	movf	I2C_Master_Init@c,w
  1185     0510  00A4               	movwf	??_I2C_Master_Init
  1186     0511  0821               	movf	I2C_Master_Init@c+1,w
  1187     0512  00A5               	movwf	??_I2C_Master_Init+1
  1188     0513  0822               	movf	I2C_Master_Init@c+2,w
  1189     0514  00A6               	movwf	??_I2C_Master_Init+2
  1190     0515  0823               	movf	I2C_Master_Init@c+3,w
  1191     0516  00A7               	movwf	??_I2C_Master_Init+3
  1192     0517  3002               	movlw	2
  1193     0518                     u545:
  1194     0518  1003               	clrc
  1195     0519  0DA4               	rlf	??_I2C_Master_Init,f
  1196     051A  0DA5               	rlf	??_I2C_Master_Init+1,f
  1197     051B  0DA6               	rlf	??_I2C_Master_Init+2,f
  1198     051C  0DA7               	rlf	??_I2C_Master_Init+3,f
  1199     051D                     u540:
  1200     051D  3EFF               	addlw	-1
  1201     051E  1D03               	skipz
  1202     051F  2D18               	goto	u545
  1203     0520  0827               	movf	??_I2C_Master_Init+3,w
  1204     0521  00F3               	movwf	___lldiv@divisor+3
  1205     0522  0826               	movf	??_I2C_Master_Init+2,w
  1206     0523  00F2               	movwf	___lldiv@divisor+2
  1207     0524  0825               	movf	??_I2C_Master_Init+1,w
  1208     0525  00F1               	movwf	___lldiv@divisor+1
  1209     0526  0824               	movf	??_I2C_Master_Init,w
  1210     0527  00F0               	movwf	___lldiv@divisor
  1211     0528  3000               	movlw	0
  1212     0529  00F7               	movwf	___lldiv@dividend+3
  1213     052A  307A               	movlw	122
  1214     052B  00F6               	movwf	___lldiv@dividend+2
  1215     052C  3012               	movlw	18
  1216     052D  00F5               	movwf	___lldiv@dividend+1
  1217     052E  3000               	movlw	0
  1218     052F  00F4               	movwf	___lldiv@dividend
  1219     0530  120A  118A  263C  120A  118A  	fcall	___lldiv
  1220     0535  0870               	movf	?___lldiv,w
  1221     0536  3EFF               	addlw	255
  1222     0537  1683               	bsf	3,5	;RP0=1, select bank1
  1223     0538  1303               	bcf	3,6	;RP1=0, select bank1
  1224     0539  0093               	movwf	19	;volatile
  1225     053A                     l1162:
  1226                           
  1227                           ;I2C.c: 21:     SSPSTAT = 0;
  1228     053A  0194               	clrf	20	;volatile
  1229     053B                     l1164:
  1230                           
  1231                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1232     053B  1587               	bsf	7,3	;volatile
  1233     053C                     l1166:
  1234                           
  1235                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1236     053C  1607               	bsf	7,4	;volatile
  1237     053D                     l86:
  1238     053D  0008               	return
  1239     053E                     __end_of_I2C_Master_Init:
  1240                           
  1241                           	psect	text3
  1242     063C                     __ptext3:	
  1243 ;; *************** function ___lldiv *****************
  1244 ;; Defined at:
  1245 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;  divisor         4    0[COMMON] unsigned long 
  1248 ;;  dividend        4    4[COMMON] unsigned long 
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;  quotient        4    9[COMMON] unsigned long 
  1251 ;;  counter         1   13[COMMON] unsigned char 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  4    0[COMMON] unsigned long 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1261 ;;      Params:         8       0       0       0       0
  1262 ;;      Locals:         5       0       0       0       0
  1263 ;;      Temps:          1       0       0       0       0
  1264 ;;      Totals:        14       0       0       0       0
  1265 ;;Total ram usage:       14 bytes
  1266 ;; Hardware stack levels used: 1
  1267 ;; This function calls:
  1268 ;;		Nothing
  1269 ;; This function is called by:
  1270 ;;		_I2C_Master_Init
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274     063C                     ___lldiv:	
  1275                           ;psect for function ___lldiv
  1276                           
  1277     063C                     l1112:	
  1278                           ;incstack = 0
  1279                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1280                           
  1281     063C  3000               	movlw	0
  1282     063D  00FC               	movwf	___lldiv@quotient+3
  1283     063E  3000               	movlw	0
  1284     063F  00FB               	movwf	___lldiv@quotient+2
  1285     0640  3000               	movlw	0
  1286     0641  00FA               	movwf	___lldiv@quotient+1
  1287     0642  3000               	movlw	0
  1288     0643  00F9               	movwf	___lldiv@quotient
  1289     0644  0873               	movf	___lldiv@divisor+3,w
  1290     0645  0472               	iorwf	___lldiv@divisor+2,w
  1291     0646  0471               	iorwf	___lldiv@divisor+1,w
  1292     0647  0470               	iorwf	___lldiv@divisor,w
  1293     0648  1903               	skipnz
  1294     0649  2E4B               	goto	u461
  1295     064A  2E4C               	goto	u460
  1296     064B                     u461:
  1297     064B  2E99               	goto	l1132
  1298     064C                     u460:
  1299     064C                     l1114:
  1300     064C  01FD               	clrf	___lldiv@counter
  1301     064D  0AFD               	incf	___lldiv@counter,f
  1302     064E  2E5C               	goto	l1118
  1303     064F                     l1116:
  1304     064F  3001               	movlw	1
  1305     0650  00F8               	movwf	??___lldiv
  1306     0651                     u475:
  1307     0651  1003               	clrc
  1308     0652  0DF0               	rlf	___lldiv@divisor,f
  1309     0653  0DF1               	rlf	___lldiv@divisor+1,f
  1310     0654  0DF2               	rlf	___lldiv@divisor+2,f
  1311     0655  0DF3               	rlf	___lldiv@divisor+3,f
  1312     0656  0BF8               	decfsz	??___lldiv,f
  1313     0657  2E51               	goto	u475
  1314     0658  3001               	movlw	1
  1315     0659  00F8               	movwf	??___lldiv
  1316     065A  0878               	movf	??___lldiv,w
  1317     065B  07FD               	addwf	___lldiv@counter,f
  1318     065C                     l1118:
  1319     065C  1FF3               	btfss	___lldiv@divisor+3,7
  1320     065D  2E5F               	goto	u481
  1321     065E  2E60               	goto	u480
  1322     065F                     u481:
  1323     065F  2E4F               	goto	l1116
  1324     0660                     u480:
  1325     0660                     l1120:
  1326     0660  3001               	movlw	1
  1327     0661  00F8               	movwf	??___lldiv
  1328     0662                     u495:
  1329     0662  1003               	clrc
  1330     0663  0DF9               	rlf	___lldiv@quotient,f
  1331     0664  0DFA               	rlf	___lldiv@quotient+1,f
  1332     0665  0DFB               	rlf	___lldiv@quotient+2,f
  1333     0666  0DFC               	rlf	___lldiv@quotient+3,f
  1334     0667  0BF8               	decfsz	??___lldiv,f
  1335     0668  2E62               	goto	u495
  1336     0669                     l1122:
  1337     0669  0873               	movf	___lldiv@divisor+3,w
  1338     066A  0277               	subwf	___lldiv@dividend+3,w
  1339     066B  1D03               	skipz
  1340     066C  2E77               	goto	u505
  1341     066D  0872               	movf	___lldiv@divisor+2,w
  1342     066E  0276               	subwf	___lldiv@dividend+2,w
  1343     066F  1D03               	skipz
  1344     0670  2E77               	goto	u505
  1345     0671  0871               	movf	___lldiv@divisor+1,w
  1346     0672  0275               	subwf	___lldiv@dividend+1,w
  1347     0673  1D03               	skipz
  1348     0674  2E77               	goto	u505
  1349     0675  0870               	movf	___lldiv@divisor,w
  1350     0676  0274               	subwf	___lldiv@dividend,w
  1351     0677                     u505:
  1352     0677  1C03               	skipc
  1353     0678  2E7A               	goto	u501
  1354     0679  2E7B               	goto	u500
  1355     067A                     u501:
  1356     067A  2E8A               	goto	l1128
  1357     067B                     u500:
  1358     067B                     l1124:
  1359     067B  0870               	movf	___lldiv@divisor,w
  1360     067C  02F4               	subwf	___lldiv@dividend,f
  1361     067D  0871               	movf	___lldiv@divisor+1,w
  1362     067E  1C03               	skipc
  1363     067F  0F71               	incfsz	___lldiv@divisor+1,w
  1364     0680  02F5               	subwf	___lldiv@dividend+1,f
  1365     0681  0872               	movf	___lldiv@divisor+2,w
  1366     0682  1C03               	skipc
  1367     0683  0F72               	incfsz	___lldiv@divisor+2,w
  1368     0684  02F6               	subwf	___lldiv@dividend+2,f
  1369     0685  0873               	movf	___lldiv@divisor+3,w
  1370     0686  1C03               	skipc
  1371     0687  0F73               	incfsz	___lldiv@divisor+3,w
  1372     0688  02F7               	subwf	___lldiv@dividend+3,f
  1373     0689                     l1126:
  1374     0689  1479               	bsf	___lldiv@quotient,0
  1375     068A                     l1128:
  1376     068A  3001               	movlw	1
  1377     068B                     u515:
  1378     068B  1003               	clrc
  1379     068C  0CF3               	rrf	___lldiv@divisor+3,f
  1380     068D  0CF2               	rrf	___lldiv@divisor+2,f
  1381     068E  0CF1               	rrf	___lldiv@divisor+1,f
  1382     068F  0CF0               	rrf	___lldiv@divisor,f
  1383     0690  3EFF               	addlw	-1
  1384     0691  1D03               	skipz
  1385     0692  2E8B               	goto	u515
  1386     0693                     l1130:
  1387     0693  3001               	movlw	1
  1388     0694  02FD               	subwf	___lldiv@counter,f
  1389     0695  1D03               	btfss	3,2
  1390     0696  2E98               	goto	u521
  1391     0697  2E99               	goto	u520
  1392     0698                     u521:
  1393     0698  2E60               	goto	l1120
  1394     0699                     u520:
  1395     0699                     l1132:
  1396     0699  087C               	movf	___lldiv@quotient+3,w
  1397     069A  00F3               	movwf	?___lldiv+3
  1398     069B  087B               	movf	___lldiv@quotient+2,w
  1399     069C  00F2               	movwf	?___lldiv+2
  1400     069D  087A               	movf	___lldiv@quotient+1,w
  1401     069E  00F1               	movwf	?___lldiv+1
  1402     069F  0879               	movf	___lldiv@quotient,w
  1403     06A0  00F0               	movwf	?___lldiv
  1404     06A1                     l310:
  1405     06A1  0008               	return
  1406     06A2                     __end_of___lldiv:
  1407                           
  1408                           	psect	text4
  1409     0584                     __ptext4:	
  1410 ;; *************** function ___awmod *****************
  1411 ;; Defined at:
  1412 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;  divisor         2    9[COMMON] int 
  1415 ;;  dividend        2   11[COMMON] int 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  sign            1    1[BANK0 ] unsigned char 
  1418 ;;  counter         1    0[BANK0 ] unsigned char 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  2    9[COMMON] int 
  1421 ;; Registers used:
  1422 ;;		wreg, status,2, status,0
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1428 ;;      Params:         4       0       0       0       0
  1429 ;;      Locals:         0       2       0       0       0
  1430 ;;      Temps:          1       0       0       0       0
  1431 ;;      Totals:         5       2       0       0       0
  1432 ;;Total ram usage:        7 bytes
  1433 ;; Hardware stack levels used: 1
  1434 ;; This function calls:
  1435 ;;		Nothing
  1436 ;; This function is called by:
  1437 ;;		_main
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441     0584                     ___awmod:	
  1442                           ;psect for function ___awmod
  1443                           
  1444     0584                     l1302:	
  1445                           ;incstack = 0
  1446                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1447                           
  1448     0584  1283               	bcf	3,5	;RP0=0, select bank0
  1449     0585  1303               	bcf	3,6	;RP1=0, select bank0
  1450     0586  01A1               	clrf	___awmod@sign
  1451     0587                     l1304:
  1452     0587  1FFC               	btfss	___awmod@dividend+1,7
  1453     0588  2D8A               	goto	u731
  1454     0589  2D8B               	goto	u730
  1455     058A                     u731:
  1456     058A  2D92               	goto	l1310
  1457     058B                     u730:
  1458     058B                     l1306:
  1459     058B  09FB               	comf	___awmod@dividend,f
  1460     058C  09FC               	comf	___awmod@dividend+1,f
  1461     058D  0AFB               	incf	___awmod@dividend,f
  1462     058E  1903               	skipnz
  1463     058F  0AFC               	incf	___awmod@dividend+1,f
  1464     0590                     l1308:
  1465     0590  01A1               	clrf	___awmod@sign
  1466     0591  0AA1               	incf	___awmod@sign,f
  1467     0592                     l1310:
  1468     0592  1FFA               	btfss	___awmod@divisor+1,7
  1469     0593  2D95               	goto	u741
  1470     0594  2D96               	goto	u740
  1471     0595                     u741:
  1472     0595  2D9B               	goto	l1314
  1473     0596                     u740:
  1474     0596                     l1312:
  1475     0596  09F9               	comf	___awmod@divisor,f
  1476     0597  09FA               	comf	___awmod@divisor+1,f
  1477     0598  0AF9               	incf	___awmod@divisor,f
  1478     0599  1903               	skipnz
  1479     059A  0AFA               	incf	___awmod@divisor+1,f
  1480     059B                     l1314:
  1481     059B  0879               	movf	___awmod@divisor,w
  1482     059C  047A               	iorwf	___awmod@divisor+1,w
  1483     059D  1903               	btfsc	3,2
  1484     059E  2DA0               	goto	u751
  1485     059F  2DA1               	goto	u750
  1486     05A0                     u751:
  1487     05A0  2DD0               	goto	l1332
  1488     05A1                     u750:
  1489     05A1                     l1316:
  1490     05A1  01A0               	clrf	___awmod@counter
  1491     05A2  0AA0               	incf	___awmod@counter,f
  1492     05A3  2DAF               	goto	l1322
  1493     05A4                     l1318:
  1494     05A4  3001               	movlw	1
  1495     05A5                     u765:
  1496     05A5  1003               	clrc
  1497     05A6  0DF9               	rlf	___awmod@divisor,f
  1498     05A7  0DFA               	rlf	___awmod@divisor+1,f
  1499     05A8  3EFF               	addlw	-1
  1500     05A9  1D03               	skipz
  1501     05AA  2DA5               	goto	u765
  1502     05AB                     l1320:
  1503     05AB  3001               	movlw	1
  1504     05AC  00FD               	movwf	??___awmod
  1505     05AD  087D               	movf	??___awmod,w
  1506     05AE  07A0               	addwf	___awmod@counter,f
  1507     05AF                     l1322:
  1508     05AF  1FFA               	btfss	___awmod@divisor+1,7
  1509     05B0  2DB2               	goto	u771
  1510     05B1  2DB3               	goto	u770
  1511     05B2                     u771:
  1512     05B2  2DA4               	goto	l1318
  1513     05B3                     u770:
  1514     05B3                     l1324:
  1515     05B3  087A               	movf	___awmod@divisor+1,w
  1516     05B4  027C               	subwf	___awmod@dividend+1,w
  1517     05B5  1D03               	skipz
  1518     05B6  2DB9               	goto	u785
  1519     05B7  0879               	movf	___awmod@divisor,w
  1520     05B8  027B               	subwf	___awmod@dividend,w
  1521     05B9                     u785:
  1522     05B9  1C03               	skipc
  1523     05BA  2DBC               	goto	u781
  1524     05BB  2DBD               	goto	u780
  1525     05BC                     u781:
  1526     05BC  2DC3               	goto	l1328
  1527     05BD                     u780:
  1528     05BD                     l1326:
  1529     05BD  0879               	movf	___awmod@divisor,w
  1530     05BE  02FB               	subwf	___awmod@dividend,f
  1531     05BF  087A               	movf	___awmod@divisor+1,w
  1532     05C0  1C03               	skipc
  1533     05C1  03FC               	decf	___awmod@dividend+1,f
  1534     05C2  02FC               	subwf	___awmod@dividend+1,f
  1535     05C3                     l1328:
  1536     05C3  3001               	movlw	1
  1537     05C4                     u795:
  1538     05C4  1003               	clrc
  1539     05C5  0CFA               	rrf	___awmod@divisor+1,f
  1540     05C6  0CF9               	rrf	___awmod@divisor,f
  1541     05C7  3EFF               	addlw	-1
  1542     05C8  1D03               	skipz
  1543     05C9  2DC4               	goto	u795
  1544     05CA                     l1330:
  1545     05CA  3001               	movlw	1
  1546     05CB  02A0               	subwf	___awmod@counter,f
  1547     05CC  1D03               	btfss	3,2
  1548     05CD  2DCF               	goto	u801
  1549     05CE  2DD0               	goto	u800
  1550     05CF                     u801:
  1551     05CF  2DB3               	goto	l1324
  1552     05D0                     u800:
  1553     05D0                     l1332:
  1554     05D0  0821               	movf	___awmod@sign,w
  1555     05D1  1903               	btfsc	3,2
  1556     05D2  2DD4               	goto	u811
  1557     05D3  2DD5               	goto	u810
  1558     05D4                     u811:
  1559     05D4  2DDA               	goto	l1336
  1560     05D5                     u810:
  1561     05D5                     l1334:
  1562     05D5  09FB               	comf	___awmod@dividend,f
  1563     05D6  09FC               	comf	___awmod@dividend+1,f
  1564     05D7  0AFB               	incf	___awmod@dividend,f
  1565     05D8  1903               	skipnz
  1566     05D9  0AFC               	incf	___awmod@dividend+1,f
  1567     05DA                     l1336:
  1568     05DA  087C               	movf	___awmod@dividend+1,w
  1569     05DB  00FA               	movwf	?___awmod+1
  1570     05DC  087B               	movf	___awmod@dividend,w
  1571     05DD  00F9               	movwf	?___awmod
  1572     05DE                     l440:
  1573     05DE  0008               	return
  1574     05DF                     __end_of___awmod:
  1575                           
  1576                           	psect	text5
  1577     06A2                     __ptext5:	
  1578 ;; *************** function ___awdiv *****************
  1579 ;; Defined at:
  1580 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  divisor         2    0[COMMON] int 
  1583 ;;  dividend        2    2[COMMON] int 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  quotient        2    7[COMMON] int 
  1586 ;;  sign            1    6[COMMON] unsigned char 
  1587 ;;  counter         1    5[COMMON] unsigned char 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  2    0[COMMON] int 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1597 ;;      Params:         4       0       0       0       0
  1598 ;;      Locals:         4       0       0       0       0
  1599 ;;      Temps:          1       0       0       0       0
  1600 ;;      Totals:         9       0       0       0       0
  1601 ;;Total ram usage:        9 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_main
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610     06A2                     ___awdiv:	
  1611                           ;psect for function ___awdiv
  1612                           
  1613     06A2                     l1258:	
  1614                           ;incstack = 0
  1615                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1616                           
  1617     06A2  01F6               	clrf	___awdiv@sign
  1618     06A3                     l1260:
  1619     06A3  1FF1               	btfss	___awdiv@divisor+1,7
  1620     06A4  2EA6               	goto	u631
  1621     06A5  2EA7               	goto	u630
  1622     06A6                     u631:
  1623     06A6  2EAE               	goto	l1266
  1624     06A7                     u630:
  1625     06A7                     l1262:
  1626     06A7  09F0               	comf	___awdiv@divisor,f
  1627     06A8  09F1               	comf	___awdiv@divisor+1,f
  1628     06A9  0AF0               	incf	___awdiv@divisor,f
  1629     06AA  1903               	skipnz
  1630     06AB  0AF1               	incf	___awdiv@divisor+1,f
  1631     06AC                     l1264:
  1632     06AC  01F6               	clrf	___awdiv@sign
  1633     06AD  0AF6               	incf	___awdiv@sign,f
  1634     06AE                     l1266:
  1635     06AE  1FF3               	btfss	___awdiv@dividend+1,7
  1636     06AF  2EB1               	goto	u641
  1637     06B0  2EB2               	goto	u640
  1638     06B1                     u641:
  1639     06B1  2EBB               	goto	l1272
  1640     06B2                     u640:
  1641     06B2                     l1268:
  1642     06B2  09F2               	comf	___awdiv@dividend,f
  1643     06B3  09F3               	comf	___awdiv@dividend+1,f
  1644     06B4  0AF2               	incf	___awdiv@dividend,f
  1645     06B5  1903               	skipnz
  1646     06B6  0AF3               	incf	___awdiv@dividend+1,f
  1647     06B7                     l1270:
  1648     06B7  3001               	movlw	1
  1649     06B8  00F4               	movwf	??___awdiv
  1650     06B9  0874               	movf	??___awdiv,w
  1651     06BA  06F6               	xorwf	___awdiv@sign,f
  1652     06BB                     l1272:
  1653     06BB  01F7               	clrf	___awdiv@quotient
  1654     06BC  01F8               	clrf	___awdiv@quotient+1
  1655     06BD                     l1274:
  1656     06BD  0870               	movf	___awdiv@divisor,w
  1657     06BE  0471               	iorwf	___awdiv@divisor+1,w
  1658     06BF  1903               	btfsc	3,2
  1659     06C0  2EC2               	goto	u651
  1660     06C1  2EC3               	goto	u650
  1661     06C2                     u651:
  1662     06C2  2EFA               	goto	l1294
  1663     06C3                     u650:
  1664     06C3                     l1276:
  1665     06C3  01F5               	clrf	___awdiv@counter
  1666     06C4  0AF5               	incf	___awdiv@counter,f
  1667     06C5  2ED1               	goto	l1282
  1668     06C6                     l1278:
  1669     06C6  3001               	movlw	1
  1670     06C7                     u665:
  1671     06C7  1003               	clrc
  1672     06C8  0DF0               	rlf	___awdiv@divisor,f
  1673     06C9  0DF1               	rlf	___awdiv@divisor+1,f
  1674     06CA  3EFF               	addlw	-1
  1675     06CB  1D03               	skipz
  1676     06CC  2EC7               	goto	u665
  1677     06CD                     l1280:
  1678     06CD  3001               	movlw	1
  1679     06CE  00F4               	movwf	??___awdiv
  1680     06CF  0874               	movf	??___awdiv,w
  1681     06D0  07F5               	addwf	___awdiv@counter,f
  1682     06D1                     l1282:
  1683     06D1  1FF1               	btfss	___awdiv@divisor+1,7
  1684     06D2  2ED4               	goto	u671
  1685     06D3  2ED5               	goto	u670
  1686     06D4                     u671:
  1687     06D4  2EC6               	goto	l1278
  1688     06D5                     u670:
  1689     06D5                     l1284:
  1690     06D5  3001               	movlw	1
  1691     06D6                     u685:
  1692     06D6  1003               	clrc
  1693     06D7  0DF7               	rlf	___awdiv@quotient,f
  1694     06D8  0DF8               	rlf	___awdiv@quotient+1,f
  1695     06D9  3EFF               	addlw	-1
  1696     06DA  1D03               	skipz
  1697     06DB  2ED6               	goto	u685
  1698     06DC  0871               	movf	___awdiv@divisor+1,w
  1699     06DD  0273               	subwf	___awdiv@dividend+1,w
  1700     06DE  1D03               	skipz
  1701     06DF  2EE2               	goto	u695
  1702     06E0  0870               	movf	___awdiv@divisor,w
  1703     06E1  0272               	subwf	___awdiv@dividend,w
  1704     06E2                     u695:
  1705     06E2  1C03               	skipc
  1706     06E3  2EE5               	goto	u691
  1707     06E4  2EE6               	goto	u690
  1708     06E5                     u691:
  1709     06E5  2EED               	goto	l1290
  1710     06E6                     u690:
  1711     06E6                     l1286:
  1712     06E6  0870               	movf	___awdiv@divisor,w
  1713     06E7  02F2               	subwf	___awdiv@dividend,f
  1714     06E8  0871               	movf	___awdiv@divisor+1,w
  1715     06E9  1C03               	skipc
  1716     06EA  03F3               	decf	___awdiv@dividend+1,f
  1717     06EB  02F3               	subwf	___awdiv@dividend+1,f
  1718     06EC                     l1288:
  1719     06EC  1477               	bsf	___awdiv@quotient,0
  1720     06ED                     l1290:
  1721     06ED  3001               	movlw	1
  1722     06EE                     u705:
  1723     06EE  1003               	clrc
  1724     06EF  0CF1               	rrf	___awdiv@divisor+1,f
  1725     06F0  0CF0               	rrf	___awdiv@divisor,f
  1726     06F1  3EFF               	addlw	-1
  1727     06F2  1D03               	skipz
  1728     06F3  2EEE               	goto	u705
  1729     06F4                     l1292:
  1730     06F4  3001               	movlw	1
  1731     06F5  02F5               	subwf	___awdiv@counter,f
  1732     06F6  1D03               	btfss	3,2
  1733     06F7  2EF9               	goto	u711
  1734     06F8  2EFA               	goto	u710
  1735     06F9                     u711:
  1736     06F9  2ED5               	goto	l1284
  1737     06FA                     u710:
  1738     06FA                     l1294:
  1739     06FA  0876               	movf	___awdiv@sign,w
  1740     06FB  1903               	btfsc	3,2
  1741     06FC  2EFE               	goto	u721
  1742     06FD  2EFF               	goto	u720
  1743     06FE                     u721:
  1744     06FE  2F04               	goto	l1298
  1745     06FF                     u720:
  1746     06FF                     l1296:
  1747     06FF  09F7               	comf	___awdiv@quotient,f
  1748     0700  09F8               	comf	___awdiv@quotient+1,f
  1749     0701  0AF7               	incf	___awdiv@quotient,f
  1750     0702  1903               	skipnz
  1751     0703  0AF8               	incf	___awdiv@quotient+1,f
  1752     0704                     l1298:
  1753     0704  0878               	movf	___awdiv@quotient+1,w
  1754     0705  00F1               	movwf	?___awdiv+1
  1755     0706  0877               	movf	___awdiv@quotient,w
  1756     0707  00F0               	movwf	?___awdiv
  1757     0708                     l427:
  1758     0708  0008               	return
  1759     0709                     __end_of___awdiv:
  1760                           
  1761                           	psect	text6
  1762     047E                     __ptext6:	
  1763 ;; *************** function _Lcd_Write_String *****************
  1764 ;; Defined at:
  1765 ;;		line 98 in file "LCD.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  a               1    wreg     PTR unsigned char 
  1768 ;;		 -> STR_1(14), 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  a               1    7[COMMON] PTR unsigned char 
  1771 ;;		 -> STR_1(14), 
  1772 ;;  i               2    5[COMMON] int 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1782 ;;      Params:         0       0       0       0       0
  1783 ;;      Locals:         3       0       0       0       0
  1784 ;;      Temps:          0       0       0       0       0
  1785 ;;      Totals:         3       0       0       0       0
  1786 ;;Total ram usage:        3 bytes
  1787 ;; Hardware stack levels used: 1
  1788 ;; Hardware stack levels required when called: 2
  1789 ;; This function calls:
  1790 ;;		_Lcd_Write_Char
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796     047E                     _Lcd_Write_String:	
  1797                           ;psect for function _Lcd_Write_String
  1798                           
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1802                           ;Lcd_Write_String@a stored from wreg
  1803     047E  00F7               	movwf	Lcd_Write_String@a
  1804     047F                     l1222:
  1805                           
  1806                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  1807     047F  01F5               	clrf	Lcd_Write_String@i
  1808     0480  01F6               	clrf	Lcd_Write_String@i+1
  1809     0481  2C95               	goto	l1228
  1810     0482                     l1224:
  1811                           
  1812                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  1813     0482  0875               	movf	Lcd_Write_String@i,w
  1814     0483  0777               	addwf	Lcd_Write_String@a,w
  1815     0484  0084               	movwf	4
  1816     0485  120A  118A  2003  120A  118A  	fcall	stringdir
  1817     048A  120A  118A  24D1  120A  118A  	fcall	_Lcd_Write_Char
  1818     048F                     l1226:
  1819     048F  3001               	movlw	1
  1820     0490  07F5               	addwf	Lcd_Write_String@i,f
  1821     0491  1803               	skipnc
  1822     0492  0AF6               	incf	Lcd_Write_String@i+1,f
  1823     0493  3000               	movlw	0
  1824     0494  07F6               	addwf	Lcd_Write_String@i+1,f
  1825     0495                     l1228:
  1826     0495  0875               	movf	Lcd_Write_String@i,w
  1827     0496  0777               	addwf	Lcd_Write_String@a,w
  1828     0497  0084               	movwf	4
  1829     0498  120A  118A  2003  120A  118A  	fcall	stringdir
  1830     049D  3A00               	xorlw	0
  1831     049E  1D03               	skipz
  1832     049F  2CA1               	goto	u611
  1833     04A0  2CA2               	goto	u610
  1834     04A1                     u611:
  1835     04A1  2C82               	goto	l1224
  1836     04A2                     u610:
  1837     04A2                     l182:
  1838     04A2  0008               	return
  1839     04A3                     __end_of_Lcd_Write_String:
  1840                           
  1841                           	psect	text7
  1842     04D1                     __ptext7:	
  1843 ;; *************** function _Lcd_Write_Char *****************
  1844 ;; Defined at:
  1845 ;;		line 83 in file "LCD.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  a               1    wreg     unsigned char 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  a               1    4[COMMON] unsigned char 
  1850 ;;  y               1    3[COMMON] unsigned char 
  1851 ;;  temp            1    2[COMMON] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0, pclath, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1861 ;;      Params:         0       0       0       0       0
  1862 ;;      Locals:         3       0       0       0       0
  1863 ;;      Temps:          1       0       0       0       0
  1864 ;;      Totals:         4       0       0       0       0
  1865 ;;Total ram usage:        4 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; Hardware stack levels required when called: 1
  1868 ;; This function calls:
  1869 ;;		_Lcd_Port
  1870 ;; This function is called by:
  1871 ;;		_main
  1872 ;;		_Lcd_Write_String
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876     04D1                     _Lcd_Write_Char:	
  1877                           ;psect for function _Lcd_Write_Char
  1878                           
  1879                           
  1880                           ;incstack = 0
  1881                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1882                           ;Lcd_Write_Char@a stored from wreg
  1883     04D1  00F4               	movwf	Lcd_Write_Char@a
  1884     04D2                     l1136:
  1885                           
  1886                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  1887     04D2  0874               	movf	Lcd_Write_Char@a,w
  1888     04D3  390F               	andlw	15
  1889     04D4  00F2               	movwf	Lcd_Write_Char@temp
  1890                           
  1891                           ;LCD.c: 86:     y = a & 0xF0;
  1892     04D5  0874               	movf	Lcd_Write_Char@a,w
  1893     04D6  39F0               	andlw	240
  1894     04D7  00F3               	movwf	Lcd_Write_Char@y
  1895     04D8                     l1138:
  1896                           
  1897                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  1898     04D8  1283               	bcf	3,5	;RP0=0, select bank0
  1899     04D9  1303               	bcf	3,6	;RP1=0, select bank0
  1900     04DA  1508               	bsf	8,2	;volatile
  1901     04DB                     l1140:
  1902                           
  1903                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  1904     04DB  0873               	movf	Lcd_Write_Char@y,w
  1905     04DC  00F1               	movwf	??_Lcd_Write_Char
  1906     04DD  3004               	movlw	4
  1907     04DE                     u535:
  1908     04DE  1003               	clrc
  1909     04DF  0CF1               	rrf	??_Lcd_Write_Char,f
  1910     04E0  3EFF               	addlw	-1
  1911     04E1  1D03               	skipz
  1912     04E2  2CDE               	goto	u535
  1913     04E3  0871               	movf	??_Lcd_Write_Char,w
  1914     04E4  120A  118A  245C  120A  118A  	fcall	_Lcd_Port
  1915     04E9                     l1142:
  1916                           
  1917                           ;LCD.c: 89:     RD3 = 1;
  1918     04E9  1283               	bcf	3,5	;RP0=0, select bank0
  1919     04EA  1303               	bcf	3,6	;RP1=0, select bank0
  1920     04EB  1588               	bsf	8,3	;volatile
  1921     04EC                     l1144:
  1922                           
  1923                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1924     04EC  301A               	movlw	26
  1925     04ED  00F1               	movwf	??_Lcd_Write_Char
  1926     04EE                     u847:
  1927     04EE  0BF1               	decfsz	??_Lcd_Write_Char,f
  1928     04EF  2CEE               	goto	u847
  1929     04F0  0000               	nop
  1930     04F1                     l1146:
  1931                           
  1932                           ;LCD.c: 91:     RD3 = 0;
  1933     04F1  1283               	bcf	3,5	;RP0=0, select bank0
  1934     04F2  1303               	bcf	3,6	;RP1=0, select bank0
  1935     04F3  1188               	bcf	8,3	;volatile
  1936     04F4                     l1148:
  1937                           
  1938                           ;LCD.c: 92:     Lcd_Port(temp);
  1939     04F4  0872               	movf	Lcd_Write_Char@temp,w
  1940     04F5  120A  118A  245C  120A  118A  	fcall	_Lcd_Port
  1941     04FA                     l1150:
  1942                           
  1943                           ;LCD.c: 93:     RD3 = 1;
  1944     04FA  1283               	bcf	3,5	;RP0=0, select bank0
  1945     04FB  1303               	bcf	3,6	;RP1=0, select bank0
  1946     04FC  1588               	bsf	8,3	;volatile
  1947     04FD                     l1152:
  1948                           
  1949                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1950     04FD  301A               	movlw	26
  1951     04FE  00F1               	movwf	??_Lcd_Write_Char
  1952     04FF                     u857:
  1953     04FF  0BF1               	decfsz	??_Lcd_Write_Char,f
  1954     0500  2CFF               	goto	u857
  1955     0501  0000               	nop
  1956     0502                     l1154:
  1957                           
  1958                           ;LCD.c: 95:     RD3 = 0;
  1959     0502  1283               	bcf	3,5	;RP0=0, select bank0
  1960     0503  1303               	bcf	3,6	;RP1=0, select bank0
  1961     0504  1188               	bcf	8,3	;volatile
  1962     0505                     l176:
  1963     0505  0008               	return
  1964     0506                     __end_of_Lcd_Write_Char:
  1965                           
  1966                           	psect	text8
  1967     053E                     __ptext8:	
  1968 ;; *************** function _Lcd_Set_Cursor *****************
  1969 ;; Defined at:
  1970 ;;		line 48 in file "LCD.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  a               1    wreg     unsigned char 
  1973 ;;  b               1    4[COMMON] unsigned char 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  a               1    6[COMMON] unsigned char 
  1976 ;;  temp            1    9[COMMON] unsigned char 
  1977 ;;  y               1    8[COMMON] unsigned char 
  1978 ;;  z               1    7[COMMON] unsigned char 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg, status,2, status,0, pclath, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1988 ;;      Params:         1       0       0       0       0
  1989 ;;      Locals:         4       0       0       0       0
  1990 ;;      Temps:          1       0       0       0       0
  1991 ;;      Totals:         6       0       0       0       0
  1992 ;;Total ram usage:        6 bytes
  1993 ;; Hardware stack levels used: 1
  1994 ;; Hardware stack levels required when called: 2
  1995 ;; This function calls:
  1996 ;;		_Lcd_Cmd
  1997 ;; This function is called by:
  1998 ;;		_main
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002     053E                     _Lcd_Set_Cursor:	
  2003                           ;psect for function _Lcd_Set_Cursor
  2004                           
  2005                           
  2006                           ;incstack = 0
  2007                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2008                           ;Lcd_Set_Cursor@a stored from wreg
  2009     053E  00F6               	movwf	Lcd_Set_Cursor@a
  2010     053F                     l1202:
  2011                           
  2012                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2013     053F  0376               	decf	Lcd_Set_Cursor@a,w
  2014     0540  1D03               	btfss	3,2
  2015     0541  2D43               	goto	u571
  2016     0542  2D44               	goto	u570
  2017     0543                     u571:
  2018     0543  2D61               	goto	l1212
  2019     0544                     u570:
  2020     0544                     l1204:
  2021                           
  2022                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2023     0544  0874               	movf	Lcd_Set_Cursor@b,w
  2024     0545  3E7F               	addlw	127
  2025     0546  00F9               	movwf	Lcd_Set_Cursor@temp
  2026                           
  2027                           ;LCD.c: 52:         z = temp >> 4;
  2028     0547  0879               	movf	Lcd_Set_Cursor@temp,w
  2029     0548  00F5               	movwf	??_Lcd_Set_Cursor
  2030     0549  3004               	movlw	4
  2031     054A                     u585:
  2032     054A  1003               	clrc
  2033     054B  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2034     054C  3EFF               	addlw	-1
  2035     054D  1D03               	skipz
  2036     054E  2D4A               	goto	u585
  2037     054F  0875               	movf	??_Lcd_Set_Cursor,w
  2038     0550  00F7               	movwf	Lcd_Set_Cursor@z
  2039     0551                     l1206:
  2040                           
  2041                           ;LCD.c: 53:         y = temp & 0x0F;
  2042     0551  0879               	movf	Lcd_Set_Cursor@temp,w
  2043     0552  390F               	andlw	15
  2044     0553  00F8               	movwf	Lcd_Set_Cursor@y
  2045     0554                     l1208:
  2046                           
  2047                           ;LCD.c: 54:         Lcd_Cmd(z);
  2048     0554  0877               	movf	Lcd_Set_Cursor@z,w
  2049     0555  120A  118A  2421  120A  118A  	fcall	_Lcd_Cmd
  2050     055A                     l1210:
  2051                           
  2052                           ;LCD.c: 55:         Lcd_Cmd(y);
  2053     055A  0878               	movf	Lcd_Set_Cursor@y,w
  2054     055B  120A  118A  2421  120A  118A  	fcall	_Lcd_Cmd
  2055                           
  2056                           ;LCD.c: 56:     } else if (a == 2) {
  2057     0560  2D83               	goto	l170
  2058     0561                     l1212:
  2059     0561  3002               	movlw	2
  2060     0562  0676               	xorwf	Lcd_Set_Cursor@a,w
  2061     0563  1D03               	btfss	3,2
  2062     0564  2D66               	goto	u591
  2063     0565  2D67               	goto	u590
  2064     0566                     u591:
  2065     0566  2D83               	goto	l170
  2066     0567                     u590:
  2067     0567                     l1214:
  2068                           
  2069                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2070     0567  0874               	movf	Lcd_Set_Cursor@b,w
  2071     0568  3EBF               	addlw	191
  2072     0569  00F9               	movwf	Lcd_Set_Cursor@temp
  2073                           
  2074                           ;LCD.c: 58:         z = temp >> 4;
  2075     056A  0879               	movf	Lcd_Set_Cursor@temp,w
  2076     056B  00F5               	movwf	??_Lcd_Set_Cursor
  2077     056C  3004               	movlw	4
  2078     056D                     u605:
  2079     056D  1003               	clrc
  2080     056E  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2081     056F  3EFF               	addlw	-1
  2082     0570  1D03               	skipz
  2083     0571  2D6D               	goto	u605
  2084     0572  0875               	movf	??_Lcd_Set_Cursor,w
  2085     0573  00F7               	movwf	Lcd_Set_Cursor@z
  2086     0574                     l1216:
  2087                           
  2088                           ;LCD.c: 59:         y = temp & 0x0F;
  2089     0574  0879               	movf	Lcd_Set_Cursor@temp,w
  2090     0575  390F               	andlw	15
  2091     0576  00F8               	movwf	Lcd_Set_Cursor@y
  2092     0577                     l1218:
  2093                           
  2094                           ;LCD.c: 60:         Lcd_Cmd(z);
  2095     0577  0877               	movf	Lcd_Set_Cursor@z,w
  2096     0578  120A  118A  2421  120A  118A  	fcall	_Lcd_Cmd
  2097     057D                     l1220:
  2098                           
  2099                           ;LCD.c: 61:         Lcd_Cmd(y);
  2100     057D  0878               	movf	Lcd_Set_Cursor@y,w
  2101     057E  120A  118A  2421  120A  118A  	fcall	_Lcd_Cmd
  2102     0583                     l170:
  2103     0583  0008               	return
  2104     0584                     __end_of_Lcd_Set_Cursor:
  2105                           
  2106                           	psect	text9
  2107     05DF                     __ptext9:	
  2108 ;; *************** function _Lcd_Init *****************
  2109 ;; Defined at:
  2110 ;;		line 65 in file "LCD.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0, pclath, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2124 ;;      Params:         0       0       0       0       0
  2125 ;;      Locals:         0       0       0       0       0
  2126 ;;      Temps:          2       0       0       0       0
  2127 ;;      Totals:         2       0       0       0       0
  2128 ;;Total ram usage:        2 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; Hardware stack levels required when called: 2
  2131 ;; This function calls:
  2132 ;;		_Lcd_Cmd
  2133 ;;		_Lcd_Port
  2134 ;; This function is called by:
  2135 ;;		_main
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139     05DF                     _Lcd_Init:	
  2140                           ;psect for function _Lcd_Init
  2141                           
  2142     05DF                     l1190:	
  2143                           ;incstack = 0
  2144                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2145                           
  2146                           
  2147                           ;LCD.c: 66:     Lcd_Port(0x00);
  2148     05DF  3000               	movlw	0
  2149     05E0  120A  118A  245C  120A  118A  	fcall	_Lcd_Port
  2150     05E5                     l1192:
  2151                           
  2152                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2153     05E5  3034               	movlw	52
  2154     05E6  00F5               	movwf	??_Lcd_Init+1
  2155     05E7  30F1               	movlw	241
  2156     05E8  00F4               	movwf	??_Lcd_Init
  2157     05E9                     u867:
  2158     05E9  0BF4               	decfsz	??_Lcd_Init,f
  2159     05EA  2DE9               	goto	u867
  2160     05EB  0BF5               	decfsz	??_Lcd_Init+1,f
  2161     05EC  2DE9               	goto	u867
  2162     05ED  2DEE               	nop2
  2163     05EE                     l1194:
  2164                           
  2165                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2166     05EE  3003               	movlw	3
  2167     05EF  120A  118A  2421  120A  118A  	fcall	_Lcd_Cmd
  2168                           
  2169                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2170     05F4  300D               	movlw	13
  2171     05F5  00F5               	movwf	??_Lcd_Init+1
  2172     05F6  30FB               	movlw	251
  2173     05F7  00F4               	movwf	??_Lcd_Init
  2174     05F8                     u877:
  2175     05F8  0BF4               	decfsz	??_Lcd_Init,f
  2176     05F9  2DF8               	goto	u877
  2177     05FA  0BF5               	decfsz	??_Lcd_Init+1,f
  2178     05FB  2DF8               	goto	u877
  2179     05FC  2DFD               	nop2
  2180     05FD                     l1196:
  2181                           
  2182                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2183     05FD  3003               	movlw	3
  2184     05FE  120A  118A  2421  120A  118A  	fcall	_Lcd_Cmd
  2185     0603                     l1198:
  2186                           
  2187                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2188     0603  301D               	movlw	29
  2189     0604  00F5               	movwf	??_Lcd_Init+1
  2190     0605  3091               	movlw	145
  2191     0606  00F4               	movwf	??_Lcd_Init
  2192     0607                     u887:
  2193     0607  0BF4               	decfsz	??_Lcd_Init,f
  2194     0608  2E07               	goto	u887
  2195     0609  0BF5               	decfsz	??_Lcd_Init+1,f
  2196     060A  2E07               	goto	u887
  2197                           
  2198                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2199     060B  3003               	movlw	3
  2200     060C  120A  118A  2421  120A  118A  	fcall	_Lcd_Cmd
  2201                           
  2202                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2203     0611  3002               	movlw	2
  2204     0612  120A  118A  2421  120A  118A  	fcall	_Lcd_Cmd
  2205                           
  2206                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2207     0617  3002               	movlw	2
  2208     0618  120A  118A  2421  120A  118A  	fcall	_Lcd_Cmd
  2209                           
  2210                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2211     061D  3008               	movlw	8
  2212     061E  120A  118A  2421  120A  118A  	fcall	_Lcd_Cmd
  2213                           
  2214                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2215     0623  3000               	movlw	0
  2216     0624  120A  118A  2421  120A  118A  	fcall	_Lcd_Cmd
  2217                           
  2218                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2219     0629  300C               	movlw	12
  2220     062A  120A  118A  2421  120A  118A  	fcall	_Lcd_Cmd
  2221                           
  2222                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2223     062F  3000               	movlw	0
  2224     0630  120A  118A  2421  120A  118A  	fcall	_Lcd_Cmd
  2225                           
  2226                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2227     0635  3006               	movlw	6
  2228     0636  120A  118A  2421  120A  118A  	fcall	_Lcd_Cmd
  2229     063B                     l173:
  2230     063B  0008               	return
  2231     063C                     __end_of_Lcd_Init:
  2232                           
  2233                           	psect	text10
  2234     0414                     __ptext10:	
  2235 ;; *************** function _Lcd_Clear *****************
  2236 ;; Defined at:
  2237 ;;		line 43 in file "LCD.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0, pclath, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2251 ;;      Params:         0       0       0       0       0
  2252 ;;      Locals:         0       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0
  2254 ;;      Totals:         0       0       0       0       0
  2255 ;;Total ram usage:        0 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; Hardware stack levels required when called: 2
  2258 ;; This function calls:
  2259 ;;		_Lcd_Cmd
  2260 ;; This function is called by:
  2261 ;;		_main
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265     0414                     _Lcd_Clear:	
  2266                           ;psect for function _Lcd_Clear
  2267                           
  2268     0414                     l1200:	
  2269                           ;incstack = 0
  2270                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2271                           
  2272                           
  2273                           ;LCD.c: 44:     Lcd_Cmd(0);
  2274     0414  3000               	movlw	0
  2275     0415  120A  118A  2421  120A  118A  	fcall	_Lcd_Cmd
  2276                           
  2277                           ;LCD.c: 45:     Lcd_Cmd(1);
  2278     041A  3001               	movlw	1
  2279     041B  120A  118A  2421  120A  118A  	fcall	_Lcd_Cmd
  2280     0420                     l164:
  2281     0420  0008               	return
  2282     0421                     __end_of_Lcd_Clear:
  2283                           
  2284                           	psect	text11
  2285     0421                     __ptext11:	
  2286 ;; *************** function _Lcd_Cmd *****************
  2287 ;; Defined at:
  2288 ;;		line 35 in file "LCD.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  a               1    wreg     unsigned char 
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;  a               1    3[COMMON] unsigned char 
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		wreg, status,2, status,0, pclath, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2302 ;;      Params:         0       0       0       0       0
  2303 ;;      Locals:         1       0       0       0       0
  2304 ;;      Temps:          2       0       0       0       0
  2305 ;;      Totals:         3       0       0       0       0
  2306 ;;Total ram usage:        3 bytes
  2307 ;; Hardware stack levels used: 1
  2308 ;; Hardware stack levels required when called: 1
  2309 ;; This function calls:
  2310 ;;		_Lcd_Port
  2311 ;; This function is called by:
  2312 ;;		_Lcd_Clear
  2313 ;;		_Lcd_Set_Cursor
  2314 ;;		_Lcd_Init
  2315 ;;		_Lcd_Shift_Right
  2316 ;;		_Lcd_Shift_Left
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320     0421                     _Lcd_Cmd:	
  2321                           ;psect for function _Lcd_Cmd
  2322                           
  2323                           
  2324                           ;incstack = 0
  2325                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2326                           ;Lcd_Cmd@a stored from wreg
  2327     0421  00F3               	movwf	Lcd_Cmd@a
  2328     0422                     l1172:
  2329                           
  2330                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2331     0422  1283               	bcf	3,5	;RP0=0, select bank0
  2332     0423  1303               	bcf	3,6	;RP1=0, select bank0
  2333     0424  1108               	bcf	8,2	;volatile
  2334     0425                     l1174:
  2335                           
  2336                           ;LCD.c: 37:     Lcd_Port(a);
  2337     0425  0873               	movf	Lcd_Cmd@a,w
  2338     0426  120A  118A  245C  120A  118A  	fcall	_Lcd_Port
  2339     042B                     l1176:
  2340                           
  2341                           ;LCD.c: 38:     RD3 = 1;
  2342     042B  1283               	bcf	3,5	;RP0=0, select bank0
  2343     042C  1303               	bcf	3,6	;RP1=0, select bank0
  2344     042D  1588               	bsf	8,3	;volatile
  2345     042E                     l1178:
  2346                           
  2347                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2348     042E  300B               	movlw	11
  2349     042F  00F2               	movwf	??_Lcd_Cmd+1
  2350     0430  3062               	movlw	98
  2351     0431  00F1               	movwf	??_Lcd_Cmd
  2352     0432                     u897:
  2353     0432  0BF1               	decfsz	??_Lcd_Cmd,f
  2354     0433  2C32               	goto	u897
  2355     0434  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2356     0435  2C32               	goto	u897
  2357     0436  0000               	nop
  2358     0437                     l1180:
  2359                           
  2360                           ;LCD.c: 40:     RD3 = 0;
  2361     0437  1283               	bcf	3,5	;RP0=0, select bank0
  2362     0438  1303               	bcf	3,6	;RP1=0, select bank0
  2363     0439  1188               	bcf	8,3	;volatile
  2364     043A                     l161:
  2365     043A  0008               	return
  2366     043B                     __end_of_Lcd_Cmd:
  2367                           
  2368                           	psect	text12
  2369     045C                     __ptext12:	
  2370 ;; *************** function _Lcd_Port *****************
  2371 ;; Defined at:
  2372 ;;		line 13 in file "LCD.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  a               1    wreg     unsigned char 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  a               1    0[COMMON] unsigned char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		wreg
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2386 ;;      Params:         0       0       0       0       0
  2387 ;;      Locals:         1       0       0       0       0
  2388 ;;      Temps:          0       0       0       0       0
  2389 ;;      Totals:         1       0       0       0       0
  2390 ;;Total ram usage:        1 bytes
  2391 ;; Hardware stack levels used: 1
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_Lcd_Cmd
  2396 ;;		_Lcd_Init
  2397 ;;		_Lcd_Write_Char
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401     045C                     _Lcd_Port:	
  2402                           ;psect for function _Lcd_Port
  2403                           
  2404                           
  2405                           ;incstack = 0
  2406                           ; Regs used in _Lcd_Port: [wreg]
  2407                           ;Lcd_Port@a stored from wreg
  2408     045C  00F0               	movwf	Lcd_Port@a
  2409     045D                     l1102:
  2410                           
  2411                           ;LCD.c: 14:     if (a & 1)
  2412     045D  1C70               	btfss	Lcd_Port@a,0
  2413     045E  2C60               	goto	u421
  2414     045F  2C61               	goto	u420
  2415     0460                     u421:
  2416     0460  2C65               	goto	l150
  2417     0461                     u420:
  2418     0461                     l1104:
  2419                           
  2420                           ;LCD.c: 15:         RD4 = 1;
  2421     0461  1283               	bcf	3,5	;RP0=0, select bank0
  2422     0462  1303               	bcf	3,6	;RP1=0, select bank0
  2423     0463  1608               	bsf	8,4	;volatile
  2424     0464  2C68               	goto	l151
  2425     0465                     l150:	
  2426                           ;LCD.c: 16:     else
  2427                           
  2428                           
  2429                           ;LCD.c: 17:         RD4 = 0;
  2430     0465  1283               	bcf	3,5	;RP0=0, select bank0
  2431     0466  1303               	bcf	3,6	;RP1=0, select bank0
  2432     0467  1208               	bcf	8,4	;volatile
  2433     0468                     l151:
  2434                           
  2435                           ;LCD.c: 19:     if (a & 2)
  2436     0468  1CF0               	btfss	Lcd_Port@a,1
  2437     0469  2C6B               	goto	u431
  2438     046A  2C6C               	goto	u430
  2439     046B                     u431:
  2440     046B  2C6E               	goto	l152
  2441     046C                     u430:
  2442     046C                     l1106:
  2443                           
  2444                           ;LCD.c: 20:         RD5 = 1;
  2445     046C  1688               	bsf	8,5	;volatile
  2446     046D  2C6F               	goto	l153
  2447     046E                     l152:	
  2448                           ;LCD.c: 21:     else
  2449                           
  2450                           
  2451                           ;LCD.c: 22:         RD5 = 0;
  2452     046E  1288               	bcf	8,5	;volatile
  2453     046F                     l153:
  2454                           
  2455                           ;LCD.c: 24:     if (a & 4)
  2456     046F  1D70               	btfss	Lcd_Port@a,2
  2457     0470  2C72               	goto	u441
  2458     0471  2C73               	goto	u440
  2459     0472                     u441:
  2460     0472  2C75               	goto	l154
  2461     0473                     u440:
  2462     0473                     l1108:
  2463                           
  2464                           ;LCD.c: 25:         RD6 = 1;
  2465     0473  1708               	bsf	8,6	;volatile
  2466     0474  2C76               	goto	l155
  2467     0475                     l154:	
  2468                           ;LCD.c: 26:     else
  2469                           
  2470                           
  2471                           ;LCD.c: 27:         RD6 = 0;
  2472     0475  1308               	bcf	8,6	;volatile
  2473     0476                     l155:
  2474                           
  2475                           ;LCD.c: 29:     if (a & 8)
  2476     0476  1DF0               	btfss	Lcd_Port@a,3
  2477     0477  2C79               	goto	u451
  2478     0478  2C7A               	goto	u450
  2479     0479                     u451:
  2480     0479  2C7C               	goto	l156
  2481     047A                     u450:
  2482     047A                     l1110:
  2483                           
  2484                           ;LCD.c: 30:         RD7 = 1;
  2485     047A  1788               	bsf	8,7	;volatile
  2486     047B  2C7D               	goto	l158
  2487     047C                     l156:	
  2488                           ;LCD.c: 31:     else
  2489                           
  2490                           
  2491                           ;LCD.c: 32:         RD7 = 0;
  2492     047C  1388               	bcf	8,7	;volatile
  2493     047D                     l158:
  2494     047D  0008               	return
  2495     047E                     __end_of_Lcd_Port:
  2496                           
  2497                           	psect	text13
  2498     03FD                     __ptext13:	
  2499 ;; *************** function _I2C_Master_Write *****************
  2500 ;; Defined at:
  2501 ;;		line 65 in file "I2C.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  d               2    0[COMMON] unsigned int 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0, pclath, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2515 ;;      Params:         2       0       0       0       0
  2516 ;;      Locals:         0       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0
  2518 ;;      Totals:         2       0       0       0       0
  2519 ;;Total ram usage:        2 bytes
  2520 ;; Hardware stack levels used: 1
  2521 ;; Hardware stack levels required when called: 1
  2522 ;; This function calls:
  2523 ;;		_I2C_Master_Wait
  2524 ;; This function is called by:
  2525 ;;		_main
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529     03FD                     _I2C_Master_Write:	
  2530                           ;psect for function _I2C_Master_Write
  2531                           
  2532     03FD                     l1234:	
  2533                           ;incstack = 0
  2534                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2535                           
  2536                           
  2537                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2538     03FD  120A  118A  2407  120A  118A  	fcall	_I2C_Master_Wait
  2539     0402                     l1236:
  2540                           
  2541                           ;I2C.c: 68:     SSPBUF = d;
  2542     0402  0870               	movf	I2C_Master_Write@d,w
  2543     0403  1283               	bcf	3,5	;RP0=0, select bank0
  2544     0404  1303               	bcf	3,6	;RP1=0, select bank0
  2545     0405  0093               	movwf	19	;volatile
  2546     0406                     l104:
  2547     0406  0008               	return
  2548     0407                     __end_of_I2C_Master_Write:
  2549                           
  2550                           	psect	text14
  2551     03F4                     __ptext14:	
  2552 ;; *************** function _I2C_Master_Stop *****************
  2553 ;; Defined at:
  2554 ;;		line 55 in file "I2C.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;		None
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;		None
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, status,0, pclath, cstack
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2568 ;;      Params:         0       0       0       0       0
  2569 ;;      Locals:         0       0       0       0       0
  2570 ;;      Temps:          0       0       0       0       0
  2571 ;;      Totals:         0       0       0       0       0
  2572 ;;Total ram usage:        0 bytes
  2573 ;; Hardware stack levels used: 1
  2574 ;; Hardware stack levels required when called: 1
  2575 ;; This function calls:
  2576 ;;		_I2C_Master_Wait
  2577 ;; This function is called by:
  2578 ;;		_main
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582     03F4                     _I2C_Master_Stop:	
  2583                           ;psect for function _I2C_Master_Stop
  2584                           
  2585     03F4                     l1238:	
  2586                           ;incstack = 0
  2587                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2588                           
  2589                           
  2590                           ;I2C.c: 57:     I2C_Master_Wait();
  2591     03F4  120A  118A  2407  120A  118A  	fcall	_I2C_Master_Wait
  2592     03F9                     l1240:
  2593                           
  2594                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2595     03F9  1683               	bsf	3,5	;RP0=1, select bank1
  2596     03FA  1303               	bcf	3,6	;RP1=0, select bank1
  2597     03FB  1511               	bsf	17,2	;volatile
  2598     03FC                     l101:
  2599     03FC  0008               	return
  2600     03FD                     __end_of_I2C_Master_Stop:
  2601                           
  2602                           	psect	text15
  2603     03EB                     __ptext15:	
  2604 ;; *************** function _I2C_Master_Start *****************
  2605 ;; Defined at:
  2606 ;;		line 39 in file "I2C.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		wreg, status,2, status,0, pclath, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2620 ;;      Params:         0       0       0       0       0
  2621 ;;      Locals:         0       0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0
  2623 ;;      Totals:         0       0       0       0       0
  2624 ;;Total ram usage:        0 bytes
  2625 ;; Hardware stack levels used: 1
  2626 ;; Hardware stack levels required when called: 1
  2627 ;; This function calls:
  2628 ;;		_I2C_Master_Wait
  2629 ;; This function is called by:
  2630 ;;		_main
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634     03EB                     _I2C_Master_Start:	
  2635                           ;psect for function _I2C_Master_Start
  2636                           
  2637     03EB                     l1230:	
  2638                           ;incstack = 0
  2639                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2640                           
  2641                           
  2642                           ;I2C.c: 41:     I2C_Master_Wait();
  2643     03EB  120A  118A  2407  120A  118A  	fcall	_I2C_Master_Wait
  2644     03F0                     l1232:
  2645                           
  2646                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2647     03F0  1683               	bsf	3,5	;RP0=1, select bank1
  2648     03F1  1303               	bcf	3,6	;RP1=0, select bank1
  2649     03F2  1411               	bsf	17,0	;volatile
  2650     03F3                     l95:
  2651     03F3  0008               	return
  2652     03F4                     __end_of_I2C_Master_Start:
  2653                           
  2654                           	psect	text16
  2655     04A3                     __ptext16:	
  2656 ;; *************** function _I2C_Master_Read *****************
  2657 ;; Defined at:
  2658 ;;		line 74 in file "I2C.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  a               2    0[COMMON] unsigned short 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  temp            2    4[COMMON] unsigned short 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  2    0[COMMON] unsigned short 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2, status,0, pclath, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2672 ;;      Params:         2       0       0       0       0
  2673 ;;      Locals:         2       0       0       0       0
  2674 ;;      Temps:          2       0       0       0       0
  2675 ;;      Totals:         6       0       0       0       0
  2676 ;;Total ram usage:        6 bytes
  2677 ;; Hardware stack levels used: 1
  2678 ;; Hardware stack levels required when called: 1
  2679 ;; This function calls:
  2680 ;;		_I2C_Master_Wait
  2681 ;; This function is called by:
  2682 ;;		_main
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686     04A3                     _I2C_Master_Read:	
  2687                           ;psect for function _I2C_Master_Read
  2688                           
  2689     04A3                     l1242:	
  2690                           ;incstack = 0
  2691                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2692                           
  2693                           
  2694                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2695     04A3  120A  118A  2407  120A  118A  	fcall	_I2C_Master_Wait
  2696     04A8                     l1244:
  2697                           
  2698                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2699     04A8  1683               	bsf	3,5	;RP0=1, select bank1
  2700     04A9  1303               	bcf	3,6	;RP1=0, select bank1
  2701     04AA  1591               	bsf	17,3	;volatile
  2702                           
  2703                           ;I2C.c: 79:     I2C_Master_Wait();
  2704     04AB  120A  118A  2407  120A  118A  	fcall	_I2C_Master_Wait
  2705     04B0                     l1246:
  2706                           
  2707                           ;I2C.c: 80:     temp = SSPBUF;
  2708     04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2709     04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2710     04B2  0813               	movf	19,w	;volatile
  2711     04B3  00F2               	movwf	??_I2C_Master_Read
  2712     04B4  01F3               	clrf	??_I2C_Master_Read+1
  2713     04B5  0872               	movf	??_I2C_Master_Read,w
  2714     04B6  00F4               	movwf	I2C_Master_Read@temp
  2715     04B7  0873               	movf	??_I2C_Master_Read+1,w
  2716     04B8  00F5               	movwf	I2C_Master_Read@temp+1
  2717     04B9                     l1248:
  2718                           
  2719                           ;I2C.c: 81:     I2C_Master_Wait();
  2720     04B9  120A  118A  2407  120A  118A  	fcall	_I2C_Master_Wait
  2721     04BE                     l1250:
  2722                           
  2723                           ;I2C.c: 82:     if(a == 1){
  2724     04BE  0370               	decf	I2C_Master_Read@a,w
  2725     04BF  0471               	iorwf	I2C_Master_Read@a+1,w
  2726     04C0  1D03               	btfss	3,2
  2727     04C1  2CC3               	goto	u621
  2728     04C2  2CC4               	goto	u620
  2729     04C3                     u621:
  2730     04C3  2CC8               	goto	l107
  2731     04C4                     u620:
  2732     04C4                     l1252:
  2733                           
  2734                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2735     04C4  1683               	bsf	3,5	;RP0=1, select bank1
  2736     04C5  1303               	bcf	3,6	;RP1=0, select bank1
  2737     04C6  1291               	bcf	17,5	;volatile
  2738                           
  2739                           ;I2C.c: 84:     }else{
  2740     04C7  2CCB               	goto	l108
  2741     04C8                     l107:
  2742                           
  2743                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2744     04C8  1683               	bsf	3,5	;RP0=1, select bank1
  2745     04C9  1303               	bcf	3,6	;RP1=0, select bank1
  2746     04CA  1691               	bsf	17,5	;volatile
  2747     04CB                     l108:	
  2748                           ;I2C.c: 86:     }
  2749                           
  2750                           
  2751                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2752     04CB  1611               	bsf	17,4	;volatile
  2753     04CC                     l1254:
  2754                           
  2755                           ;I2C.c: 88:     return temp;
  2756     04CC  0875               	movf	I2C_Master_Read@temp+1,w
  2757     04CD  00F1               	movwf	?_I2C_Master_Read+1
  2758     04CE  0874               	movf	I2C_Master_Read@temp,w
  2759     04CF  00F0               	movwf	?_I2C_Master_Read
  2760     04D0                     l109:
  2761     04D0  0008               	return
  2762     04D1                     __end_of_I2C_Master_Read:
  2763                           
  2764                           	psect	text17
  2765     0407                     __ptext17:	
  2766 ;; *************** function _I2C_Master_Wait *****************
  2767 ;; Defined at:
  2768 ;;		line 32 in file "I2C.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      void 
  2775 ;; Registers used:
  2776 ;;		wreg, status,2
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2782 ;;      Params:         0       0       0       0       0
  2783 ;;      Locals:         0       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0
  2785 ;;      Totals:         0       0       0       0       0
  2786 ;;Total ram usage:        0 bytes
  2787 ;; Hardware stack levels used: 1
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_I2C_Master_Start
  2792 ;;		_I2C_Master_Stop
  2793 ;;		_I2C_Master_Write
  2794 ;;		_I2C_Master_Read
  2795 ;;		_I2C_Master_RepeatedStart
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799     0407                     _I2C_Master_Wait:	
  2800                           ;psect for function _I2C_Master_Wait
  2801                           
  2802     0407                     l1168:	
  2803                           ;incstack = 0
  2804                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2805                           
  2806     0407                     l89:	
  2807                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2808                           
  2809     0407  1683               	bsf	3,5	;RP0=1, select bank1
  2810     0408  1303               	bcf	3,6	;RP1=0, select bank1
  2811     0409  1914               	btfsc	20,2	;volatile
  2812     040A  2C0C               	goto	u551
  2813     040B  2C0D               	goto	u550
  2814     040C                     u551:
  2815     040C  2C07               	goto	l89
  2816     040D                     u550:
  2817     040D                     l1170:
  2818     040D  0811               	movf	17,w	;volatile
  2819     040E  391F               	andlw	31
  2820     040F  1D03               	btfss	3,2
  2821     0410  2C12               	goto	u561
  2822     0411  2C13               	goto	u560
  2823     0412                     u561:
  2824     0412  2C07               	goto	l89
  2825     0413                     u560:
  2826     0413                     l92:
  2827     0413  0008               	return
  2828     0414                     __end_of_I2C_Master_Wait:
  2829     007E                     btemp	set	126	;btemp
  2830     007E                     wtemp0	set	126
  2831                           
  2832                           	psect	idloc
  2833                           
  2834                           ;Config register IDLOC0 @ 0x2000
  2835                           ;	unspecified, using default values
  2836     2000                     	org	8192
  2837     2000  3FFF               	dw	16383
  2838                           
  2839                           ;Config register IDLOC1 @ 0x2001
  2840                           ;	unspecified, using default values
  2841     2001                     	org	8193
  2842     2001  3FFF               	dw	16383
  2843                           
  2844                           ;Config register IDLOC2 @ 0x2002
  2845                           ;	unspecified, using default values
  2846     2002                     	org	8194
  2847     2002  3FFF               	dw	16383
  2848                           
  2849                           ;Config register IDLOC3 @ 0x2003
  2850                           ;	unspecified, using default values
  2851     2003                     	org	8195
  2852     2003  3FFF               	dw	16383
  2853                           
  2854                           	psect	config
  2855                           
  2856                           ;Config register CONFIG1 @ 0x2007
  2857                           ;	Oscillator Selection bits
  2858                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2859                           ;	Watchdog Timer Enable bit
  2860                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2861                           ;	Power-up Timer Enable bit
  2862                           ;	PWRTE = OFF, PWRT disabled
  2863                           ;	RE3/MCLR pin function select bit
  2864                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2865                           ;	Code Protection bit
  2866                           ;	CP = OFF, Program memory code protection is disabled
  2867                           ;	Data Code Protection bit
  2868                           ;	CPD = OFF, Data memory code protection is disabled
  2869                           ;	Brown Out Reset Selection bits
  2870                           ;	BOREN = OFF, BOR disabled
  2871                           ;	Internal External Switchover bit
  2872                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2873                           ;	Fail-Safe Clock Monitor Enabled bit
  2874                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2875                           ;	Low Voltage Programming Enable bit
  2876                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2877                           ;	In-Circuit Debugger Mode bit
  2878                           ;	DEBUG = 0x1, unprogramme  2879     2007                     	org	8199
  2880     2007  20D4               	dw	8404
  2881                           
  2882                           ;Config register CONFIG2 @ 0x2008
  2883                           ;	Brown-out Reset Selection bit
  2884                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2885                           ;	Flash Program Memory Self Write Enable bits
  2886                           ;	WRT = OFF, Write protection off
  2887     2008                     	org	8200
  2888     2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      15
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _I2C_Master_Init->___lldiv
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3306
                                              8 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     301
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     532
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B       F       5       18.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1D      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 10 11:32:08 2023

                       pc 0002                        l57 045B                        l92 0413  
                      l86 053D                        l95 03F3                        l89 0407  
            ___awdiv@sign 0076                        fsr 0004                       l101 03FC  
                     l104 0406                       l107 04C8                       l108 04CB  
                     l109 04D0                       l150 0465                       l310 06A1  
                     l151 0468                       l152 046E                       l153 046F  
                     l161 043A                       l154 0475                       l170 0583  
                     l155 0476                       l156 047C                       l164 0420  
                     l173 063B                       l158 047D                       l182 04A2  
                     _ADC 002E                       l176 0505                       l440 05DE  
                     l427 0708                       _GIE 005F                       _RD3 0043  
                     _RD4 0044                       _RD5 0045                       _RD6 0046  
                     _RD7 0047                       u420 0461                       u500 067B  
                     u421 0460                       u501 067A                       u430 046C  
                     u431 046B                       u440 0473                       u520 0699  
                     u441 0472                       u521 0698                       u505 0677  
                     u450 047A                       u610 04A2                       u451 0479  
                     u611 04A1                       u515 068B                       u620 04C4  
                     u460 064C                       u540 051D                       u621 04C3  
                     u605 056D                       u461 064B                       u550 040D  
                     u710 06FA                       u630 06A7                       u551 040C  
                     u535 04DE                       u711 06F9                       u631 06A6  
                     u560 0413                       u720 06FF                       u640 06B2  
                     u800 05D0                       u480 0660                       u561 0412  
                     u721 06FE                       u705 06EE                       u641 06B1  
                     u801 05CF                       u481 065F                       u545 0518  
                     u570 0544                       u650 06C3                       u810 05D5  
                     u730 058B                       u571 0543                       u651 06C2  
                     u811 05D4                       u731 058A                       u475 0651  
                     u740 0596                       u741 0595                       u590 0567  
                     u670 06D5                       u750 05A1                       u591 0566  
                     u671 06D4                       u751 05A0                       u495 0662  
                     u585 054A                       u665 06C7                       u690 06E6  
                     u770 05B3                       u691 06E5                       u771 05B2  
                     u827 074F                       u780 05BD                       u685 06D6  
                     u781 05BC                       u765 05A5                       u837 077D  
                     u847 04EE                       u695 06E2                       u857 04FF  
                     u785 05B9                       u867 05E9                       u795 05C4  
                     u877 05F8                       u887 0607                       u897 0432  
                     fsr0 0004              ___awmod@sign 0021                      l1110 047A  
                    l1102 045D                      l1104 0461                      l1200 0414  
                    l1120 0660                      l1112 063C                      l1106 046C  
                    l1210 055A                      l1202 053F                      l1130 0693  
                    l1122 0669                      l1114 064C                      l1108 0473  
                    l1220 057D                      l1204 0544                      l1212 0561  
                    l1140 04DB                      l1124 067B                      l1116 064F  
                    l1132 0699                      l1230 03EB                      l1214 0567  
                    l1206 0551                      l1150 04FA                      l1142 04E9  
                    l1222 047F                      l1310 0592                      l1302 0584  
                    l1126 0689                      l1118 065C                      l1232 03F0  
                    l1240 03F9                      l1216 0574                      l1208 0554  
                    l1152 04FD                      l1144 04EC                      l1136 04D2  
                    l1224 0482                      l1320 05AB                      l1312 0596  
                    l1304 0587                      l1128 068A                      l1160 050D  
                    l1170 040D                      l1250 04BE                      l1242 04A3  
                    l1234 03FD                      l1218 0577                      l1154 0502  
                    l1146 04F1                      l1138 04D8                      l1226 048F  
                    l1330 05CA                      l1322 05AF                      l1314 059B  
                    l1306 058B                      l1162 053A                      l1252 04C4  
                    l1244 04A8                      l1236 0402                      l1180 0437  
                    l1172 0422                      l1148 04F4                      l1228 0495  
                    l1260 06A3                      l1324 05B3                      l1316 05A1  
                    l1332 05D0                      l1308 0590                      l1164 053B  
                    l1156 0506                      l1340 0709                      l1254 04CC  
                    l1246 04B0                      l1238 03F4                      l1174 0425  
                    l1190 05DF                      l1270 06B7                      l1262 06A7  
                    l1334 05D5                      l1326 05BD                      l1318 05A4  
                    l1166 053C                      l1158 050A                      l1182 043B  
                    l1350 0742                      l1342 0720                      l1168 0407  
                    l1248 04B9                      l1176 042B                      l1192 05E5  
                    l1280 06CD                      l1272 06BB                      l1264 06AC  
                    l1336 05DA                      l1328 05C3                      l1184 0447  
                    l1360 0770                      l1352 0747                      l1344 0726  
                    l1178 042E                      l1194 05EE                      l1290 06ED  
                    l1282 06D1                      l1274 06BD                      l1266 06AE  
                    l1258 06A2                      l1186 044B                      l1370 07CF  
                    l1362 0775                      l1354 0756                      l1346 072B  
                    l1196 05FD                      l1292 06F4                      l1284 06D5  
                    l1276 06C3                      l1268 06B2                      l1188 044C  
                    l1372 07D7                      l1364 0784                      l1356 075B  
                    l1348 0734                      l1198 0603                      l1286 06E6  
                    l1278 06C6                      l1294 06FA                      l1374 07E0  
                    l1366 079A                      l1358 0764                      l1296 06FF  
                    l1288 06EC                      l1376 07E9                      l1368 07BB  
                    l1298 0704                      STR_1 0009                      _PEIE 005E  
       ?_Lcd_Write_String 0070                      _main 0709                      btemp 007E  
                    start 0000        ??_Lcd_Write_String 0075           __end_of_Lcd_Cmd 043B  
        ?_I2C_Master_Init 0020          ?_I2C_Master_Read 0070          ?_I2C_Master_Wait 0070  
        ?_I2C_Master_Stop 0070                     ?_main 0070           __end_of___awdiv 0709  
         __end_of___awmod 05DF                     _ANSEL 0188           __end_of___lldiv 06A2  
         ___awdiv@divisor 0070           ___awdiv@counter 0075                     _PORTB 0006  
                   _PORTD 0008                     _TRISB 0086                     _TRISD 0088  
                   _SSPIE 0463                     _SSPIF 0063                     _setup 043B  
                   pclath 000A                     status 0003                     wtemp0 007E  
        __end_of_Lcd_Init 063C          __end_of_Lcd_Port 047E           __initialization 07F6  
            __end_of_main 07F6                    ??_main 0028         ?_I2C_Master_Start 0070  
       ?_I2C_Master_Write 0070        ??_I2C_Master_Start 0070                    _ADCON0 001F  
      ??_I2C_Master_Write 0072                    _ADRESH 001E          ___awdiv@dividend 0072  
                  ?_setup 0070                    _ANSELH 0189                 ??_Lcd_Cmd 0071  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPCON 0014                    _SSPBUF 0013                 ??___awdiv 0074  
               ??___awmod 007D                 ??___lldiv 0078          ___awdiv@quotient 0077  
         ___awmod@divisor 0079           ___awmod@counter 0020                    _unidad 002B  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC         __end_of_Lcd_Clear 0421  
          __pcstackCOMMON 0070             __end_of_setup 045C            _Lcd_Set_Cursor 053E  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                   ??_setup 007E  
              __pbssBANK0 002B                __pmaintext 0709    __end_of_Lcd_Set_Cursor 0584  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 0003            _Lcd_Write_Char 04D1  
                 _Lcd_Cmd 0421                   ___awdiv 06A2                   ___awmod 0584  
                 ___lldiv 063C                   _decenas 002C           ?_Lcd_Set_Cursor 0074  
                 __ptext1 043B                   __ptext2 0506                   __ptext3 063C  
                 __ptext4 0584                   __ptext5 06A2                   __ptext6 047E  
                 __ptext7 04D1                   __ptext8 053E                   __ptext9 05DF  
        ___awmod@dividend 007B    __end_of_Lcd_Write_Char 0506      end_of_initialization 07FC  
         ___lldiv@divisor 0070           ___lldiv@counter 007D          I2C_Master_Init@c 0020  
        I2C_Master_Read@a 0070                 Lcd_Port@a 0070                 _PORTDbits 0008  
               _TRISCbits 0087           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0077  
       Lcd_Write_String@i 0075                 _Lcd_Clear 0414          _Lcd_Write_String 047E  
     start_initialization 07F6         ??_I2C_Master_Init 0024         ??_I2C_Master_Read 0072  
       ??_I2C_Master_Wait 0070         ??_I2C_Master_Stop 0070                ?_Lcd_Clear 0070  
         Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073                 ___latbits 0002  
           __pcstackBANK0 0020                  ?_Lcd_Cmd 0070          _I2C_Master_Start 03EB  
        _I2C_Master_Write 03FD          ??_Lcd_Set_Cursor 0075                  ?___awdiv 0070  
                ?___awmod 0079                  ?___lldiv 0070                 __pstrings 0003  
                Lcd_Cmd@a 0073               ??_Lcd_Clear 0074                _ADCON0bits 001F  
             __stringbase 0008                _ADCON1bits 009F          ??_Lcd_Write_Char 0071  
                _Lcd_Init 05DF                  _Lcd_Port 045C       I2C_Master_Read@temp 0074  
__end_of_Lcd_Write_String 04A3        __end_of__stringtab 0009           _I2C_Master_Init 0506  
         _I2C_Master_Read 04A3           _I2C_Master_Wait 0407           _I2C_Master_Stop 03F4  
                _centenas 002D                  __ptext10 0414                  __ptext11 0421  
                __ptext12 045C                  __ptext13 03FD                  __ptext14 03F4  
                __ptext15 03EB                  __ptext16 04A3                  __ptext17 0407  
__end_of_I2C_Master_Start 03F4  __end_of_I2C_Master_Write 0407        Lcd_Write_Char@temp 0072  
        ___lldiv@dividend 0074                 stringcode 0003                _OSCCONbits 008F  
 __end_of_I2C_Master_Init 053E   __end_of_I2C_Master_Read 04D1   __end_of_I2C_Master_Wait 0414  
 __end_of_I2C_Master_Stop 03FD        Lcd_Set_Cursor@temp 0079          ___lldiv@quotient 0079  
       I2C_Master_Write@d 0070                  stringdir 0003                  stringtab 0003  
             _SSPCON2bits 0091  
