

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 15 23:27:50 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43     0000                     
    44                           ; Version 2.40
    45                           ; Generated 04/07/2022 GMT
    46                           ; 
    47                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F887 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79     0000                     	;# 
    80     0001                     	;# 
    81     0002                     	;# 
    82     0003                     	;# 
    83     0004                     	;# 
    84     0005                     	;# 
    85     0006                     	;# 
    86     0007                     	;# 
    87     0008                     	;# 
    88     0009                     	;# 
    89     000A                     	;# 
    90     000B                     	;# 
    91     000C                     	;# 
    92     000D                     	;# 
    93     000E                     	;# 
    94     000E                     	;# 
    95     000F                     	;# 
    96     0010                     	;# 
    97     0011                     	;# 
    98     0012                     	;# 
    99     0013                     	;# 
   100     0014                     	;# 
   101     0015                     	;# 
   102     0015                     	;# 
   103     0016                     	;# 
   104     0017                     	;# 
   105     0018                     	;# 
   106     0019                     	;# 
   107     001A                     	;# 
   108     001B                     	;# 
   109     001B                     	;# 
   110     001C                     	;# 
   111     001D                     	;# 
   112     001E                     	;# 
   113     001F                     	;# 
   114     0081                     	;# 
   115     0085                     	;# 
   116     0086                     	;# 
   117     0087                     	;# 
   118     0088                     	;# 
   119     0089                     	;# 
   120     008C                     	;# 
   121     008D                     	;# 
   122     008E                     	;# 
   123     008F                     	;# 
   124     0090                     	;# 
   125     0091                     	;# 
   126     0092                     	;# 
   127     0093                     	;# 
   128     0093                     	;# 
   129     0093                     	;# 
   130     0094                     	;# 
   131     0095                     	;# 
   132     0096                     	;# 
   133     0097                     	;# 
   134     0098                     	;# 
   135     0099                     	;# 
   136     009A                     	;# 
   137     009B                     	;# 
   138     009C                     	;# 
   139     009D                     	;# 
   140     009E                     	;# 
   141     009F                     	;# 
   142     0105                     	;# 
   143     0107                     	;# 
   144     0108                     	;# 
   145     0109                     	;# 
   146     010C                     	;# 
   147     010C                     	;# 
   148     010D                     	;# 
   149     010E                     	;# 
   150     010F                     	;# 
   151     0185                     	;# 
   152     0187                     	;# 
   153     0188                     	;# 
   154     0189                     	;# 
   155     018C                     	;# 
   156     018D                     	;# 
   157     0000                     	;# 
   158     0001                     	;# 
   159     0002                     	;# 
   160     0003                     	;# 
   161     0004                     	;# 
   162     0005                     	;# 
   163     0006                     	;# 
   164     0007                     	;# 
   165     0008                     	;# 
   166     0009                     	;# 
   167     000A                     	;# 
   168     000B                     	;# 
   169     000C                     	;# 
   170     000D                     	;# 
   171     000E                     	;# 
   172     000E                     	;# 
   173     000F                     	;# 
   174     0010                     	;# 
   175     0011                     	;# 
   176     0012                     	;# 
   177     0013                     	;# 
   178     0014                     	;# 
   179     0015                     	;# 
   180     0015                     	;# 
   181     0016                     	;# 
   182     0017                     	;# 
   183     0018                     	;# 
   184     0019                     	;# 
   185     001A                     	;# 
   186     001B                     	;# 
   187     001B                     	;# 
   188     001C                     	;# 
   189     001D                     	;# 
   190     001E                     	;# 
   191     001F                     	;# 
   192     0081                     	;# 
   193     0085                     	;# 
   194     0086                     	;# 
   195     0087                     	;# 
   196     0088                     	;# 
   197     0089                     	;# 
   198     008C                     	;# 
   199     008D                     	;# 
   200     008E                     	;# 
   201     008F                     	;# 
   202     0090                     	;# 
   203     0091                     	;# 
   204     0092                     	;# 
   205     0093                     	;# 
   206     0093                     	;# 
   207     0093                     	;# 
   208     0094                     	;# 
   209     0095                     	;# 
   210     0096                     	;# 
   211     0097                     	;# 
   212     0098                     	;# 
   213     0099                     	;# 
   214     009A                     	;# 
   215     009B                     	;# 
   216     009C                     	;# 
   217     009D                     	;# 
   218     009E                     	;# 
   219     009F                     	;# 
   220     0105                     	;# 
   221     0107                     	;# 
   222     0108                     	;# 
   223     0109                     	;# 
   224     010C                     	;# 
   225     010C                     	;# 
   226     010D                     	;# 
   227     010E                     	;# 
   228     010F                     	;# 
   229     0185                     	;# 
   230     0187                     	;# 
   231     0188                     	;# 
   232     0189                     	;# 
   233     018C                     	;# 
   234     018D                     	;# 
   235     0000                     	;# 
   236     0001                     	;# 
   237     0002                     	;# 
   238     0003                     	;# 
   239     0004                     	;# 
   240     0005                     	;# 
   241     0006                     	;# 
   242     0007                     	;# 
   243     0008                     	;# 
   244     0009                     	;# 
   245     000A                     	;# 
   246     000B                     	;# 
   247     000C                     	;# 
   248     000D                     	;# 
   249     000E                     	;# 
   250     000E                     	;# 
   251     000F                     	;# 
   252     0010                     	;# 
   253     0011                     	;# 
   254     0012                     	;# 
   255     0013                     	;# 
   256     0014                     	;# 
   257     0015                     	;# 
   258     0015                     	;# 
   259     0016                     	;# 
   260     0017                     	;# 
   261     0018                     	;# 
   262     0019                     	;# 
   263     001A                     	;# 
   264     001B                     	;# 
   265     001B                     	;# 
   266     001C                     	;# 
   267     001D                     	;# 
   268     001E                     	;# 
   269     001F                     	;# 
   270     0081                     	;# 
   271     0085                     	;# 
   272     0086                     	;# 
   273     0087                     	;# 
   274     0088                     	;# 
   275     0089                     	;# 
   276     008C                     	;# 
   277     008D                     	;# 
   278     008E                     	;# 
   279     008F                     	;# 
   280     0090                     	;# 
   281     0091                     	;# 
   282     0092                     	;# 
   283     0093                     	;# 
   284     0093                     	;# 
   285     0093                     	;# 
   286     0094                     	;# 
   287     0095                     	;# 
   288     0096                     	;# 
   289     0097                     	;# 
   290     0098                     	;# 
   291     0099                     	;# 
   292     009A                     	;# 
   293     009B                     	;# 
   294     009C                     	;# 
   295     009D                     	;# 
   296     009E                     	;# 
   297     009F                     	;# 
   298     0105                     	;# 
   299     0107                     	;# 
   300     0108                     	;# 
   301     0109                     	;# 
   302     010C                     	;# 
   303     010C                     	;# 
   304     010D                     	;# 
   305     010E                     	;# 
   306     010F                     	;# 
   307     0185                     	;# 
   308     0187                     	;# 
   309     0188                     	;# 
   310     0189                     	;# 
   311     018C                     	;# 
   312     018D                     	;# 
   313     0000                     	;# 
   314     0001                     	;# 
   315     0002                     	;# 
   316     0003                     	;# 
   317     0004                     	;# 
   318     0005                     	;# 
   319     0006                     	;# 
   320     0007                     	;# 
   321     0008                     	;# 
   322     0009                     	;# 
   323     000A                     	;# 
   324     000B                     	;# 
   325     000C                     	;# 
   326     000D                     	;# 
   327     000E                     	;# 
   328     000E                     	;# 
   329     000F                     	;# 
   330     0010                     	;# 
   331     0011                     	;# 
   332     0012                     	;# 
   333     0013                     	;# 
   334     0014                     	;# 
   335     0015                     	;# 
   336     0015                     	;# 
   337     0016                     	;# 
   338     0017                     	;# 
   339     0018                     	;# 
   340     0019                     	;# 
   341     001A                     	;# 
   342     001B                     	;# 
   343     001B                     	;# 
   344     001C                     	;# 
   345     001D                     	;# 
   346     001E                     	;# 
   347     001F                     	;# 
   348     0081                     	;# 
   349     0085                     	;# 
   350     0086                     	;# 
   351     0087                     	;# 
   352     0088                     	;# 
   353     0089                     	;# 
   354     008C                     	;# 
   355     008D                     	;# 
   356     008E                     	;# 
   357     008F                     	;# 
   358     0090                     	;# 
   359     0091                     	;# 
   360     0092                     	;# 
   361     0093                     	;# 
   362     0093                     	;# 
   363     0093                     	;# 
   364     0094                     	;# 
   365     0095                     	;# 
   366     0096                     	;# 
   367     0097                     	;# 
   368     0098                     	;# 
   369     0099                     	;# 
   370     009A                     	;# 
   371     009B                     	;# 
   372     009C                     	;# 
   373     009D                     	;# 
   374     009E                     	;# 
   375     009F                     	;# 
   376     0105                     	;# 
   377     0107                     	;# 
   378     0108                     	;# 
   379     0109                     	;# 
   380     010C                     	;# 
   381     010C                     	;# 
   382     010D                     	;# 
   383     010E                     	;# 
   384     010F                     	;# 
   385     0185                     	;# 
   386     0187                     	;# 
   387     0188                     	;# 
   388     0189                     	;# 
   389     018C                     	;# 
   390     018D                     	;# 
   391     0000                     	;# 
   392     0001                     	;# 
   393     0002                     	;# 
   394     0003                     	;# 
   395     0004                     	;# 
   396     0005                     	;# 
   397     0006                     	;# 
   398     0007                     	;# 
   399     0008                     	;# 
   400     0009                     	;# 
   401     000A                     	;# 
   402     000B                     	;# 
   403     000C                     	;# 
   404     000D                     	;# 
   405     000E                     	;# 
   406     000E                     	;# 
   407     000F                     	;# 
   408     0010                     	;# 
   409     0011                     	;# 
   410     0012                     	;# 
   411     0013                     	;# 
   412     0014                     	;# 
   413     0015                     	;# 
   414     0015                     	;# 
   415     0016                     	;# 
   416     0017                     	;# 
   417     0018                     	;# 
   418     0019                     	;# 
   419     001A                     	;# 
   420     001B                     	;# 
   421     001B                     	;# 
   422     001C                     	;# 
   423     001D                     	;# 
   424     001E                     	;# 
   425     001F                     	;# 
   426     0081                     	;# 
   427     0085                     	;# 
   428     0086                     	;# 
   429     0087                     	;# 
   430     0088                     	;# 
   431     0089                     	;# 
   432     008C                     	;# 
   433     008D                     	;# 
   434     008E                     	;# 
   435     008F                     	;# 
   436     0090                     	;# 
   437     0091                     	;# 
   438     0092                     	;# 
   439     0093                     	;# 
   440     0093                     	;# 
   441     0093                     	;# 
   442     0094                     	;# 
   443     0095                     	;# 
   444     0096                     	;# 
   445     0097                     	;# 
   446     0098                     	;# 
   447     0099                     	;# 
   448     009A                     	;# 
   449     009B                     	;# 
   450     009C                     	;# 
   451     009D                     	;# 
   452     009E                     	;# 
   453     009F                     	;# 
   454     0105                     	;# 
   455     0107                     	;# 
   456     0108                     	;# 
   457     0109                     	;# 
   458     010C                     	;# 
   459     010C                     	;# 
   460     010D                     	;# 
   461     010E                     	;# 
   462     010F                     	;# 
   463     0185                     	;# 
   464     0187                     	;# 
   465     0188                     	;# 
   466     0189                     	;# 
   467     018C                     	;# 
   468     018D                     	;# 
   469     0000                     	;# 
   470     0001                     	;# 
   471     0002                     	;# 
   472     0003                     	;# 
   473     0004                     	;# 
   474     0005                     	;# 
   475     0006                     	;# 
   476     0007                     	;# 
   477     0008                     	;# 
   478     0009                     	;# 
   479     000A                     	;# 
   480     000B                     	;# 
   481     000C                     	;# 
   482     000D                     	;# 
   483     000E                     	;# 
   484     000E                     	;# 
   485     000F                     	;# 
   486     0010                     	;# 
   487     0011                     	;# 
   488     0012                     	;# 
   489     0013                     	;# 
   490     0014                     	;# 
   491     0015                     	;# 
   492     0015                     	;# 
   493     0016                     	;# 
   494     0017                     	;# 
   495     0018                     	;# 
   496     0019                     	;# 
   497     001A                     	;# 
   498     001B                     	;# 
   499     001B                     	;# 
   500     001C                     	;# 
   501     001D                     	;# 
   502     001E                     	;# 
   503     001F                     	;# 
   504     0081                     	;# 
   505     0085                     	;# 
   506     0086                     	;# 
   507     0087                     	;# 
   508     0088                     	;# 
   509     0089                     	;# 
   510     008C                     	;# 
   511     008D                     	;# 
   512     008E                     	;# 
   513     008F                     	;# 
   514     0090                     	;# 
   515     0091                     	;# 
   516     0092                     	;# 
   517     0093                     	;# 
   518     0093                     	;# 
   519     0093                     	;# 
   520     0094                     	;# 
   521     0095                     	;# 
   522     0096                     	;# 
   523     0097                     	;# 
   524     0098                     	;# 
   525     0099                     	;# 
   526     009A                     	;# 
   527     009B                     	;# 
   528     009C                     	;# 
   529     009D                     	;# 
   530     009E                     	;# 
   531     009F                     	;# 
   532     0105                     	;# 
   533     0107                     	;# 
   534     0108                     	;# 
   535     0109                     	;# 
   536     010C                     	;# 
   537     010C                     	;# 
   538     010D                     	;# 
   539     010E                     	;# 
   540     010F                     	;# 
   541     0185                     	;# 
   542     0187                     	;# 
   543     0188                     	;# 
   544     0189                     	;# 
   545     018C                     	;# 
   546     018D                     	;# 
   547     0008                     _PORTDbits	set	8
   548     001F                     _ADCON0	set	31
   549     001E                     _ADRESH	set	30
   550     001F                     _ADCON0bits	set	31
   551     0013                     _SSPBUF	set	19
   552     0014                     _SSPCON	set	20
   553     0005                     _PORTA	set	5
   554     0008                     _PORTD	set	8
   555     0006                     _PORTB	set	6
   556     0005                     _PORTAbits	set	5
   557     0006                     _PORTBbits	set	6
   558     000B                     _INTCONbits	set	11
   559     0043                     _RD3	set	67
   560     0047                     _RD7	set	71
   561     0046                     _RD6	set	70
   562     0045                     _RD5	set	69
   563     0044                     _RD4	set	68
   564     0063                     _SSPIF	set	99
   565     005E                     _PEIE	set	94
   566     005F                     _GIE	set	95
   567     009F                     _ADCON1bits	set	159
   568     0091                     _SSPCON2bits	set	145
   569     0087                     _TRISCbits	set	135
   570     0094                     _SSPSTAT	set	148
   571     0093                     _SSPADD	set	147
   572     0091                     _SSPCON2	set	145
   573     008F                     _OSCCONbits	set	143
   574     0096                     _IOCB	set	150
   575     0095                     _WPUBbits	set	149
   576     0081                     _OPTION_REGbits	set	129
   577     0085                     _TRISA	set	133
   578     0088                     _TRISD	set	136
   579     0086                     _TRISB	set	134
   580     0463                     _SSPIE	set	1123
   581     043C                     _TRISC4	set	1084
   582     043B                     _TRISC3	set	1083
   583     0189                     _ANSELH	set	393
   584     0188                     _ANSEL	set	392
   585                           
   586                           	psect	strings
   587     0800                     __pstrings:
   588     0800                     stringtab:
   589     0800                     __stringtab:
   590     0800                     stringcode:	
   591                           ;	String table - string pointers are 1 byte each
   592                           
   593     0800                     stringdir:
   594     0800  3008               	movlw	high stringdir
   595     0801  008A               	movwf	10
   596     0802  0804               	movf	4,w
   597     0803  0A84               	incf	4,f
   598     0804  0782               	addwf	2,f
   599     0805                     __stringbase:
   600     0805  3400               	retlw	0
   601     0806                     __end_of__stringtab:
   602     0806                     STR_1:
   603     0806  3441               	retlw	65	;'A'
   604     0807  3444               	retlw	68	;'D'
   605     0808  3443               	retlw	67	;'C'
   606     0809  3400               	retlw	0
   607     080A                     STR_2:
   608     080A  3432               	retlw	50	;'2'
   609     080B  3430               	retlw	48	;'0'
   610     080C  3400               	retlw	0
   611     080A                     
   612                           	psect	cinit
   613     000F                     start_initialization:	
   614                           ; #config settings
   615                           
   616     000F                     __initialization:
   617                           
   618                           ; Clear objects allocated to COMMON
   619     000F  01FA               	clrf	__pbssCOMMON& (0+127)
   620     0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   621                           
   622                           ; Clear objects allocated to BANK0
   623     0011  1383               	bcf	3,7	;select IRP bank0
   624     0012  3020               	movlw	low __pbssBANK0
   625     0013  0084               	movwf	4
   626     0014  303F               	movlw	low (__pbssBANK0+31)
   627     0015  120A  158A  24E9  120A  118A  	fcall	clear_ram0
   628     001A                     end_of_initialization:	
   629                           ;End of C runtime variable initialization code
   630                           
   631     001A                     __end_of__initialization:
   632     001A  0183               	clrf	3
   633     001B  120A  118A  281E   	ljmp	_main	;jump to C main() function
   634                           
   635                           	psect	bssCOMMON
   636     007A                     __pbssCOMMON:
   637     007A                     _contador:
   638     007A                     	ds	2
   639                           
   640                           	psect	bssBANK0
   641     0020                     __pbssBANK0:
   642     0020                     _flag:
   643     0020                     	ds	2
   644     0022                     _anio:
   645     0022                     	ds	2
   646     0024                     _mes:
   647     0024                     	ds	2
   648     0026                     _dia:
   649     0026                     	ds	2
   650     0028                     _hora:
   651     0028                     	ds	2
   652     002A                     _min:
   653     002A                     	ds	2
   654     002C                     _sec:
   655     002C                     	ds	2
   656     002E                     _Fecha:
   657     002E                     	ds	1
   658     002F                     _d_anio:
   659     002F                     	ds	1
   660     0030                     _u_anio:
   661     0030                     	ds	1
   662     0031                     _d_mes:
   663     0031                     	ds	1
   664     0032                     _u_mes:
   665     0032                     	ds	1
   666     0033                     _d_dia:
   667     0033                     	ds	1
   668     0034                     _u_dia:
   669     0034                     	ds	1
   670     0035                     _d_hora:
   671     0035                     	ds	1
   672     0036                     _u_hora:
   673     0036                     	ds	1
   674     0037                     _d_min:
   675     0037                     	ds	1
   676     0038                     _u_min:
   677     0038                     	ds	1
   678     0039                     _d_sec:
   679     0039                     	ds	1
   680     003A                     _u_sec:
   681     003A                     	ds	1
   682     003B                     _unidad:
   683     003B                     	ds	1
   684     003C                     _decenas:
   685     003C                     	ds	1
   686     003D                     _centenas:
   687     003D                     	ds	1
   688     003E                     _ADC:
   689     003E                     	ds	1
   690                           
   691                           	psect	clrtext
   692     0CE9                     clear_ram0:	
   693                           ;	Called with FSR containing the base address, and
   694                           ;	W with the last address+1
   695                           
   696     0CE9  0064               	clrwdt	;clear the watchdog before getting into this loop
   697     0CEA                     clrloop0:
   698     0CEA  0180               	clrf	0	;clear RAM location pointed to by FSR
   699     0CEB  0A84               	incf	4,f	;increment pointer
   700     0CEC  0604               	xorwf	4,w	;XOR with final address
   701     0CED  1903               	btfsc	3,2	;have we reached the end yet?
   702     0CEE  3400               	retlw	0	;all done for this memory range, return
   703     0CEF  0604               	xorwf	4,w	;XOR again to restore value
   704     0CF0  2CEA               	goto	clrloop0	;do the next byte
   705                           
   706                           	psect	cstackCOMMON
   707     0070                     __pcstackCOMMON:
   708     0070                     ?_setup:
   709     0070                     ?_Lcd_Init:	
   710                           ; 1 bytes @ 0x0
   711                           
   712     0070                     ?_Lcd_Clear:	
   713                           ; 1 bytes @ 0x0
   714                           
   715     0070                     ?_Lcd_Write_String:	
   716                           ; 1 bytes @ 0x0
   717                           
   718     0070                     ?_I2C_Master_Start:	
   719                           ; 1 bytes @ 0x0
   720                           
   721     0070                     ?_I2C_Master_Stop:	
   722                           ; 1 bytes @ 0x0
   723                           
   724     0070                     ?_Lcd_Write_Char:	
   725                           ; 1 bytes @ 0x0
   726                           
   727     0070                     ?_enviar_fecha:	
   728                           ; 1 bytes @ 0x0
   729                           
   730     0070                     ?_isr:	
   731                           ; 1 bytes @ 0x0
   732                           
   733     0070                     ??_isr:	
   734                           ; 1 bytes @ 0x0
   735                           
   736     0070                     ?_main:	
   737                           ; 1 bytes @ 0x0
   738                           
   739     0070                     ?_I2C_Master_Wait:	
   740                           ; 1 bytes @ 0x0
   741                           
   742     0070                     ?_I2C_Master_RepeatedStart:	
   743                           ; 1 bytes @ 0x0
   744                           
   745     0070                     ?_Lcd_Port:	
   746                           ; 1 bytes @ 0x0
   747                           
   748     0070                     ?_Lcd_Cmd:	
   749                           ; 1 bytes @ 0x0
   750                           
   751                           
   752                           ; 1 bytes @ 0x0
   753     0070                     	ds	2
   754     0072                     ??_I2C_Master_Start:
   755     0072                     ?_I2C_Master_Write:	
   756                           ; 1 bytes @ 0x2
   757                           
   758     0072                     ??_I2C_Master_Stop:	
   759                           ; 1 bytes @ 0x2
   760                           
   761     0072                     ??_I2C_Master_Wait:	
   762                           ; 1 bytes @ 0x2
   763                           
   764     0072                     ??_I2C_Master_RepeatedStart:	
   765                           ; 1 bytes @ 0x2
   766                           
   767     0072                     ??_Lcd_Port:	
   768                           ; 1 bytes @ 0x2
   769                           
   770     0072                     ?_I2C_Master_Read:	
   771                           ; 1 bytes @ 0x2
   772                           
   773     0072                     ?___wmul:	
   774                           ; 2 bytes @ 0x2
   775                           
   776     0072                     ?___awdiv:	
   777                           ; 2 bytes @ 0x2
   778                           
   779     0072                     ?___lldiv:	
   780                           ; 2 bytes @ 0x2
   781                           
   782     0072                     Lcd_Port@a:	
   783                           ; 4 bytes @ 0x2
   784                           
   785     0072                     I2C_Master_Write@d:	
   786                           ; 1 bytes @ 0x2
   787                           
   788     0072                     I2C_Master_Read@a:	
   789                           ; 2 bytes @ 0x2
   790                           
   791     0072                     ___wmul@multiplier:	
   792                           ; 2 bytes @ 0x2
   793                           
   794     0072                     ___awdiv@divisor:	
   795                           ; 2 bytes @ 0x2
   796                           
   797     0072                     ___lldiv@divisor:	
   798                           ; 2 bytes @ 0x2
   799                           
   800                           
   801                           ; 4 bytes @ 0x2
   802     0072                     	ds	1
   803     0073                     ??_Lcd_Write_Char:
   804     0073                     ??_Lcd_Cmd:	
   805                           ; 1 bytes @ 0x3
   806                           
   807                           
   808                           ; 1 bytes @ 0x3
   809     0073                     	ds	1
   810     0074                     ??_I2C_Master_Write:
   811     0074                     ??_I2C_Master_Read:	
   812                           ; 1 bytes @ 0x4
   813                           
   814     0074                     ??_enviar_fecha:	
   815                           ; 1 bytes @ 0x4
   816                           
   817     0074                     Lcd_Write_Char@temp:	
   818                           ; 1 bytes @ 0x4
   819                           
   820     0074                     ___wmul@multiplicand:	
   821                           ; 1 bytes @ 0x4
   822                           
   823     0074                     ___awdiv@dividend:	
   824                           ; 2 bytes @ 0x4
   825                           
   826                           
   827                           ; 2 bytes @ 0x4
   828     0074                     	ds	1
   829     0075                     Lcd_Cmd@a:
   830     0075                     Lcd_Write_Char@y:	
   831                           ; 1 bytes @ 0x5
   832                           
   833                           
   834                           ; 1 bytes @ 0x5
   835     0075                     	ds	1
   836     0076                     ??_Lcd_Init:
   837     0076                     ??_Lcd_Clear:	
   838                           ; 1 bytes @ 0x6
   839                           
   840     0076                     ?_Lcd_Set_Cursor:	
   841                           ; 1 bytes @ 0x6
   842                           
   843     0076                     ??___wmul:	
   844                           ; 1 bytes @ 0x6
   845                           
   846     0076                     ??___awdiv:	
   847                           ; 1 bytes @ 0x6
   848                           
   849     0076                     Lcd_Set_Cursor@b:	
   850                           ; 1 bytes @ 0x6
   851                           
   852     0076                     Lcd_Write_Char@a:	
   853                           ; 1 bytes @ 0x6
   854                           
   855     0076                     I2C_Master_Read@temp:	
   856                           ; 1 bytes @ 0x6
   857                           
   858     0076                     ___wmul@product:	
   859                           ; 2 bytes @ 0x6
   860                           
   861     0076                     ___lldiv@dividend:	
   862                           ; 2 bytes @ 0x6
   863                           
   864                           
   865                           ; 4 bytes @ 0x6
   866     0076                     	ds	1
   867     0077                     ??_Lcd_Set_Cursor:
   868     0077                     ??_Lcd_Write_String:	
   869                           ; 1 bytes @ 0x7
   870                           
   871     0077                     ??___awmod:	
   872                           ; 1 bytes @ 0x7
   873                           
   874     0077                     Lcd_Write_String@i:	
   875                           ; 1 bytes @ 0x7
   876                           
   877                           
   878                           ; 2 bytes @ 0x7
   879     0077                     	ds	1
   880     0078                     ?_leer_seg:
   881     0078                     ?_leer_min:	
   882                           ; 2 bytes @ 0x8
   883                           
   884     0078                     ?_leer_hora:	
   885                           ; 2 bytes @ 0x8
   886                           
   887     0078                     ?_leer_dia:	
   888                           ; 2 bytes @ 0x8
   889                           
   890     0078                     ?_leer_mes:	
   891                           ; 2 bytes @ 0x8
   892                           
   893     0078                     ?_leer_anio:	
   894                           ; 2 bytes @ 0x8
   895                           
   896     0078                     ___awmod@counter:	
   897                           ; 2 bytes @ 0x8
   898                           
   899                           
   900                           ; 1 bytes @ 0x8
   901     0078                     	ds	1
   902     0079                     Lcd_Write_String@a:
   903     0079                     ___awmod@sign:	
   904                           ; 1 bytes @ 0x9
   905                           
   906                           
   907                           ; 1 bytes @ 0x9
   908     0079                     	ds	1
   909     007A                     ??_setup:
   910                           
   911                           	psect	cstackBANK0
   912     003F                     __pcstackBANK0:	
   913                           ; 1 bytes @ 0xA
   914                           
   915     003F                     ??_leer_seg:
   916     003F                     ??_leer_min:	
   917                           ; 1 bytes @ 0x0
   918                           
   919     003F                     ??_leer_hora:	
   920                           ; 1 bytes @ 0x0
   921                           
   922     003F                     ??_leer_dia:	
   923                           ; 1 bytes @ 0x0
   924                           
   925     003F                     ??_leer_mes:	
   926                           ; 1 bytes @ 0x0
   927                           
   928     003F                     ??_leer_anio:	
   929                           ; 1 bytes @ 0x0
   930                           
   931     003F                     ??___lldiv:	
   932                           ; 1 bytes @ 0x0
   933                           
   934     003F                     Lcd_Set_Cursor@a:	
   935                           ; 1 bytes @ 0x0
   936                           
   937     003F                     ___awdiv@counter:	
   938                           ; 1 bytes @ 0x0
   939                           
   940                           
   941                           ; 1 bytes @ 0x0
   942     003F                     	ds	1
   943     0040                     Lcd_Set_Cursor@z:
   944     0040                     ___awdiv@sign:	
   945                           ; 1 bytes @ 0x1
   946                           
   947     0040                     ___lldiv@quotient:	
   948                           ; 1 bytes @ 0x1
   949                           
   950                           
   951                           ; 4 bytes @ 0x1
   952     0040                     	ds	1
   953     0041                     Lcd_Set_Cursor@y:
   954     0041                     ___awdiv@quotient:	
   955                           ; 1 bytes @ 0x2
   956                           
   957                           
   958                           ; 2 bytes @ 0x2
   959     0041                     	ds	1
   960     0042                     Lcd_Set_Cursor@temp:
   961                           
   962                           ; 1 bytes @ 0x3
   963     0042                     	ds	1
   964     0043                     ?___awmod:
   965     0043                     ___awmod@divisor:	
   966                           ; 2 bytes @ 0x4
   967                           
   968                           
   969                           ; 2 bytes @ 0x4
   970     0043                     	ds	1
   971     0044                     ___lldiv@counter:
   972                           
   973                           ; 1 bytes @ 0x5
   974     0044                     	ds	1
   975     0045                     ?_I2C_Master_Init:
   976     0045                     ___awmod@dividend:	
   977                           ; 1 bytes @ 0x6
   978                           
   979     0045                     I2C_Master_Init@c:	
   980                           ; 2 bytes @ 0x6
   981                           
   982                           
   983                           ; 4 bytes @ 0x6
   984     0045                     	ds	4
   985     0049                     ??_I2C_Master_Init:
   986                           
   987                           ; 1 bytes @ 0xA
   988     0049                     	ds	4
   989     004D                     ??_main:
   990                           
   991                           ; 1 bytes @ 0xE
   992     004D                     	ds	2
   993                           
   994                           	psect	maintext
   995     001E                     __pmaintext:	
   996 ;;
   997 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   998 ;;
   999 ;; *************** function _main *****************
  1000 ;; Defined at:
  1001 ;;		line 123 in file "main.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;		None
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;		None
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : B00/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1015 ;;      Params:         0       0       0       0       0
  1016 ;;      Locals:         0       0       0       0       0
  1017 ;;      Temps:          0       2       0       0       0
  1018 ;;      Totals:         0       2       0       0       0
  1019 ;;Total ram usage:        2 bytes
  1020 ;; Hardware stack levels required when called: 4
  1021 ;; This function calls:
  1022 ;;		_I2C_Master_Read
  1023 ;;		_I2C_Master_Start
  1024 ;;		_I2C_Master_Stop
  1025 ;;		_I2C_Master_Write
  1026 ;;		_Lcd_Clear
  1027 ;;		_Lcd_Init
  1028 ;;		_Lcd_Set_Cursor
  1029 ;;		_Lcd_Write_Char
  1030 ;;		_Lcd_Write_String
  1031 ;;		___awdiv
  1032 ;;		___awmod
  1033 ;;		_enviar_fecha
  1034 ;;		_leer_anio
  1035 ;;		_leer_dia
  1036 ;;		_leer_hora
  1037 ;;		_leer_mes
  1038 ;;		_leer_min
  1039 ;;		_leer_seg
  1040 ;;		_setup
  1041 ;; This function is called by:
  1042 ;;		Startup code after reset
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046     001E                     _main:	
  1047                           ;psect for function _main
  1048                           
  1049     001E                     l2318:	
  1050                           ;incstack = 0
  1051                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1052                           
  1053                           
  1054                           ;main.c: 124:     setup();
  1055     001E  120A  158A  25BF  120A  118A  	fcall	_setup
  1056                           
  1057                           ;main.c: 125:     Lcd_Init();
  1058     0023  120A  158A  273F  120A  118A  	fcall	_Lcd_Init
  1059                           
  1060                           ;main.c: 126:     Lcd_Clear();
  1061     0028  120A  158A  2516  120A  118A  	fcall	_Lcd_Clear
  1062                           
  1063                           ;main.c: 127:     Lcd_Set_Cursor(1,1);
  1064     002D  01F6               	clrf	Lcd_Set_Cursor@b
  1065     002E  0AF6               	incf	Lcd_Set_Cursor@b,f
  1066     002F  3001               	movlw	1
  1067     0030  120A  158A  2698  120A  118A  	fcall	_Lcd_Set_Cursor
  1068     0035                     l2320:
  1069                           
  1070                           ;main.c: 128:     Lcd_Write_String("ADC");
  1071     0035  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1072     0036  120A  158A  256C  120A  118A  	fcall	_Lcd_Write_String
  1073     003B                     l2322:
  1074                           
  1075                           ;main.c: 132:         sec = leer_seg();
  1076     003B  120A  158A  279C  120A  118A  	fcall	_leer_seg
  1077     0040  0879               	movf	?_leer_seg+1,w
  1078     0041  1283               	bcf	3,5	;RP0=0, select bank0
  1079     0042  1303               	bcf	3,6	;RP1=0, select bank0
  1080     0043  00AD               	movwf	_sec+1
  1081     0044  0878               	movf	?_leer_seg,w
  1082     0045  00AC               	movwf	_sec
  1083     0046                     l2324:
  1084                           
  1085                           ;main.c: 133:         min = leer_min();
  1086     0046  120A  118A  25DB  120A  118A  	fcall	_leer_min
  1087     004B  0879               	movf	?_leer_min+1,w
  1088     004C  1283               	bcf	3,5	;RP0=0, select bank0
  1089     004D  1303               	bcf	3,6	;RP1=0, select bank0
  1090     004E  00AB               	movwf	_min+1
  1091     004F  0878               	movf	?_leer_min,w
  1092     0050  00AA               	movwf	_min
  1093     0051                     l2326:
  1094                           
  1095                           ;main.c: 134:         hora = leer_hora();
  1096     0051  120A  118A  26A5  120A  118A  	fcall	_leer_hora
  1097     0056  0879               	movf	?_leer_hora+1,w
  1098     0057  1283               	bcf	3,5	;RP0=0, select bank0
  1099     0058  1303               	bcf	3,6	;RP1=0, select bank0
  1100     0059  00A9               	movwf	_hora+1
  1101     005A  0878               	movf	?_leer_hora,w
  1102     005B  00A8               	movwf	_hora
  1103     005C                     l2328:
  1104                           
  1105                           ;main.c: 135:         dia = leer_dia();
  1106     005C  120A  118A  270A  120A  118A  	fcall	_leer_dia
  1107     0061  0879               	movf	?_leer_dia+1,w
  1108     0062  1283               	bcf	3,5	;RP0=0, select bank0
  1109     0063  1303               	bcf	3,6	;RP1=0, select bank0
  1110     0064  00A7               	movwf	_dia+1
  1111     0065  0878               	movf	?_leer_dia,w
  1112     0066  00A6               	movwf	_dia
  1113     0067                     l2330:
  1114                           
  1115                           ;main.c: 136:         mes = leer_mes();
  1116     0067  120A  118A  2640  120A  118A  	fcall	_leer_mes
  1117     006C  0879               	movf	?_leer_mes+1,w
  1118     006D  1283               	bcf	3,5	;RP0=0, select bank0
  1119     006E  1303               	bcf	3,6	;RP1=0, select bank0
  1120     006F  00A5               	movwf	_mes+1
  1121     0070  0878               	movf	?_leer_mes,w
  1122     0071  00A4               	movwf	_mes
  1123     0072                     l2332:
  1124                           
  1125                           ;main.c: 137:         anio = leer_anio();
  1126     0072  120A  118A  276F  120A  118A  	fcall	_leer_anio
  1127     0077  0879               	movf	?_leer_anio+1,w
  1128     0078  1283               	bcf	3,5	;RP0=0, select bank0
  1129     0079  1303               	bcf	3,6	;RP1=0, select bank0
  1130     007A  00A3               	movwf	_anio+1
  1131     007B  0878               	movf	?_leer_anio,w
  1132     007C  00A2               	movwf	_anio
  1133     007D                     l2334:
  1134                           
  1135                           ;main.c: 139:         I2C_Master_Start();
  1136     007D  120A  158A  24F1  120A  118A  	fcall	_I2C_Master_Start
  1137     0082                     l2336:
  1138                           
  1139                           ;main.c: 140:         I2C_Master_Write(0x51);
  1140     0082  3051               	movlw	81
  1141     0083  00F2               	movwf	I2C_Master_Write@d
  1142     0084  3000               	movlw	0
  1143     0085  00F3               	movwf	I2C_Master_Write@d+1
  1144     0086  120A  158A  250C  120A  118A  	fcall	_I2C_Master_Write
  1145     008B                     l2338:
  1146                           
  1147                           ;main.c: 141:         ADC = I2C_Master_Read(0);
  1148     008B  3000               	movlw	0
  1149     008C  00F2               	movwf	I2C_Master_Read@a
  1150     008D  00F3               	movwf	I2C_Master_Read@a+1
  1151     008E  120A  158A  2591  120A  118A  	fcall	_I2C_Master_Read
  1152     0093  0872               	movf	?_I2C_Master_Read,w
  1153     0094  1283               	bcf	3,5	;RP0=0, select bank0
  1154     0095  1303               	bcf	3,6	;RP1=0, select bank0
  1155     0096  00BE               	movwf	_ADC
  1156     0097                     l2340:
  1157                           
  1158                           ;main.c: 142:         I2C_Master_Stop();
  1159     0097  120A  158A  24FA  120A  118A  	fcall	_I2C_Master_Stop
  1160     009C                     l2342:
  1161                           
  1162                           ;main.c: 143:         _delay((unsigned long)((250)*(8000000/4000000.0)));
  1163     009C  30A5               	movlw	165
  1164     009D  1283               	bcf	3,5	;RP0=0, select bank0
  1165     009E  1303               	bcf	3,6	;RP1=0, select bank0
  1166     009F  00CD               	movwf	??_main
  1167     00A0                     u1627:
  1168     00A0  0BCD               	decfsz	??_main,f
  1169     00A1  28A0               	goto	u1627
  1170     00A2  28A3               	nop2
  1171     00A3                     l2344:
  1172                           
  1173                           ;main.c: 145:         centenas = (ADC/100);
  1174     00A3  3064               	movlw	100
  1175     00A4  00F2               	movwf	___awdiv@divisor
  1176     00A5  3000               	movlw	0
  1177     00A6  00F3               	movwf	___awdiv@divisor+1
  1178     00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1179     00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1180     00A9  083E               	movf	_ADC,w
  1181     00AA  00CD               	movwf	??_main
  1182     00AB  01CE               	clrf	??_main+1
  1183     00AC  084D               	movf	??_main,w
  1184     00AD  00F4               	movwf	___awdiv@dividend
  1185     00AE  084E               	movf	??_main+1,w
  1186     00AF  00F5               	movwf	___awdiv@dividend+1
  1187     00B0  120A  118A  250A  120A  118A  	fcall	___awdiv
  1188     00B5  0872               	movf	?___awdiv,w
  1189     00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1190     00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1191     00B8  00BD               	movwf	_centenas
  1192     00B9                     l2346:
  1193                           
  1194                           ;main.c: 146:         decenas = (ADC/10)%10;
  1195     00B9  300A               	movlw	10
  1196     00BA  00C3               	movwf	___awmod@divisor
  1197     00BB  3000               	movlw	0
  1198     00BC  00C4               	movwf	___awmod@divisor+1
  1199     00BD  300A               	movlw	10
  1200     00BE  00F2               	movwf	___awdiv@divisor
  1201     00BF  3000               	movlw	0
  1202     00C0  00F3               	movwf	___awdiv@divisor+1
  1203     00C1  083E               	movf	_ADC,w
  1204     00C2  00CD               	movwf	??_main
  1205     00C3  01CE               	clrf	??_main+1
  1206     00C4  084D               	movf	??_main,w
  1207     00C5  00F4               	movwf	___awdiv@dividend
  1208     00C6  084E               	movf	??_main+1,w
  1209     00C7  00F5               	movwf	___awdiv@dividend+1
  1210     00C8  120A  118A  250A  120A  118A  	fcall	___awdiv
  1211     00CD  0873               	movf	?___awdiv+1,w
  1212     00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1213     00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1214     00D0  00C6               	movwf	___awmod@dividend+1
  1215     00D1  0872               	movf	?___awdiv,w
  1216     00D2  00C5               	movwf	___awmod@dividend
  1217     00D3  120A  158A  26E4  120A  118A  	fcall	___awmod
  1218     00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1219     00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1220     00DA  0843               	movf	?___awmod,w
  1221     00DB  00BC               	movwf	_decenas
  1222     00DC                     l2348:
  1223                           
  1224                           ;main.c: 147:         unidad = ADC%10;
  1225     00DC  300A               	movlw	10
  1226     00DD  00C3               	movwf	___awmod@divisor
  1227     00DE  3000               	movlw	0
  1228     00DF  00C4               	movwf	___awmod@divisor+1
  1229     00E0  083E               	movf	_ADC,w
  1230     00E1  00CD               	movwf	??_main
  1231     00E2  01CE               	clrf	??_main+1
  1232     00E3  084D               	movf	??_main,w
  1233     00E4  00C5               	movwf	___awmod@dividend
  1234     00E5  084E               	movf	??_main+1,w
  1235     00E6  00C6               	movwf	___awmod@dividend+1
  1236     00E7  120A  158A  26E4  120A  118A  	fcall	___awmod
  1237     00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1238     00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1239     00EE  0843               	movf	?___awmod,w
  1240     00EF  00BB               	movwf	_unidad
  1241     00F0                     l2350:
  1242                           
  1243                           ;main.c: 149:         Lcd_Set_Cursor(2,1);
  1244     00F0  01F6               	clrf	Lcd_Set_Cursor@b
  1245     00F1  0AF6               	incf	Lcd_Set_Cursor@b,f
  1246     00F2  3002               	movlw	2
  1247     00F3  120A  158A  2698  120A  118A  	fcall	_Lcd_Set_Cursor
  1248     00F8                     l2352:
  1249                           
  1250                           ;main.c: 150:         Lcd_Write_Char(centenas + 48);
  1251     00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1252     00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1253     00FA  083D               	movf	_centenas,w
  1254     00FB  3E30               	addlw	48
  1255     00FC  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1256     0101                     l2354:
  1257                           
  1258                           ;main.c: 151:         Lcd_Write_Char(decenas + 48);
  1259     0101  1283               	bcf	3,5	;RP0=0, select bank0
  1260     0102  1303               	bcf	3,6	;RP1=0, select bank0
  1261     0103  083C               	movf	_decenas,w
  1262     0104  3E30               	addlw	48
  1263     0105  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1264     010A                     l2356:
  1265                           
  1266                           ;main.c: 152:         Lcd_Write_Char(unidad + 48);
  1267     010A  1283               	bcf	3,5	;RP0=0, select bank0
  1268     010B  1303               	bcf	3,6	;RP1=0, select bank0
  1269     010C  083B               	movf	_unidad,w
  1270     010D  3E30               	addlw	48
  1271     010E  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1272     0113                     l2358:
  1273                           
  1274                           ;main.c: 155:         u_hora = hora%10;
  1275     0113  300A               	movlw	10
  1276     0114  1283               	bcf	3,5	;RP0=0, select bank0
  1277     0115  1303               	bcf	3,6	;RP1=0, select bank0
  1278     0116  00C3               	movwf	___awmod@divisor
  1279     0117  3000               	movlw	0
  1280     0118  00C4               	movwf	___awmod@divisor+1
  1281     0119  0829               	movf	_hora+1,w
  1282     011A  00C6               	movwf	___awmod@dividend+1
  1283     011B  0828               	movf	_hora,w
  1284     011C  00C5               	movwf	___awmod@dividend
  1285     011D  120A  158A  26E4  120A  118A  	fcall	___awmod
  1286     0122  1283               	bcf	3,5	;RP0=0, select bank0
  1287     0123  1303               	bcf	3,6	;RP1=0, select bank0
  1288     0124  0843               	movf	?___awmod,w
  1289     0125  00B6               	movwf	_u_hora
  1290     0126                     l2360:
  1291                           
  1292                           ;main.c: 156:         d_hora = (hora/10)%10;
  1293     0126  300A               	movlw	10
  1294     0127  00C3               	movwf	___awmod@divisor
  1295     0128  3000               	movlw	0
  1296     0129  00C4               	movwf	___awmod@divisor+1
  1297     012A  300A               	movlw	10
  1298     012B  00F2               	movwf	___awdiv@divisor
  1299     012C  3000               	movlw	0
  1300     012D  00F3               	movwf	___awdiv@divisor+1
  1301     012E  0829               	movf	_hora+1,w
  1302     012F  00F5               	movwf	___awdiv@dividend+1
  1303     0130  0828               	movf	_hora,w
  1304     0131  00F4               	movwf	___awdiv@dividend
  1305     0132  120A  118A  250A  120A  118A  	fcall	___awdiv
  1306     0137  0873               	movf	?___awdiv+1,w
  1307     0138  1283               	bcf	3,5	;RP0=0, select bank0
  1308     0139  1303               	bcf	3,6	;RP1=0, select bank0
  1309     013A  00C6               	movwf	___awmod@dividend+1
  1310     013B  0872               	movf	?___awdiv,w
  1311     013C  00C5               	movwf	___awmod@dividend
  1312     013D  120A  158A  26E4  120A  118A  	fcall	___awmod
  1313     0142  1283               	bcf	3,5	;RP0=0, select bank0
  1314     0143  1303               	bcf	3,6	;RP1=0, select bank0
  1315     0144  0843               	movf	?___awmod,w
  1316     0145  00B5               	movwf	_d_hora
  1317     0146                     l2362:
  1318                           
  1319                           ;main.c: 158:         Lcd_Set_Cursor(1,7);
  1320     0146  3007               	movlw	7
  1321     0147  00F6               	movwf	Lcd_Set_Cursor@b
  1322     0148  3001               	movlw	1
  1323     0149  120A  158A  2698  120A  118A  	fcall	_Lcd_Set_Cursor
  1324     014E                     l2364:
  1325                           
  1326                           ;main.c: 159:         Lcd_Write_Char(d_hora+48);
  1327     014E  1283               	bcf	3,5	;RP0=0, select bank0
  1328     014F  1303               	bcf	3,6	;RP1=0, select bank0
  1329     0150  0835               	movf	_d_hora,w
  1330     0151  3E30               	addlw	48
  1331     0152  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1332     0157                     l2366:
  1333                           
  1334                           ;main.c: 160:         Lcd_Write_Char(u_hora+48);
  1335     0157  1283               	bcf	3,5	;RP0=0, select bank0
  1336     0158  1303               	bcf	3,6	;RP1=0, select bank0
  1337     0159  0836               	movf	_u_hora,w
  1338     015A  3E30               	addlw	48
  1339     015B  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1340     0160                     l2368:
  1341                           
  1342                           ;main.c: 161:         Lcd_Write_Char(':');
  1343     0160  303A               	movlw	58
  1344     0161  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1345     0166                     l2370:
  1346                           
  1347                           ;main.c: 164:         u_min = min%10;
  1348     0166  300A               	movlw	10
  1349     0167  1283               	bcf	3,5	;RP0=0, select bank0
  1350     0168  1303               	bcf	3,6	;RP1=0, select bank0
  1351     0169  00C3               	movwf	___awmod@divisor
  1352     016A  3000               	movlw	0
  1353     016B  00C4               	movwf	___awmod@divisor+1
  1354     016C  082B               	movf	_min+1,w
  1355     016D  00C6               	movwf	___awmod@dividend+1
  1356     016E  082A               	movf	_min,w
  1357     016F  00C5               	movwf	___awmod@dividend
  1358     0170  120A  158A  26E4  120A  118A  	fcall	___awmod
  1359     0175  1283               	bcf	3,5	;RP0=0, select bank0
  1360     0176  1303               	bcf	3,6	;RP1=0, select bank0
  1361     0177  0843               	movf	?___awmod,w
  1362     0178  00B8               	movwf	_u_min
  1363     0179                     l2372:
  1364                           
  1365                           ;main.c: 165:         d_min = (min/10)%10;
  1366     0179  300A               	movlw	10
  1367     017A  00C3               	movwf	___awmod@divisor
  1368     017B  3000               	movlw	0
  1369     017C  00C4               	movwf	___awmod@divisor+1
  1370     017D  300A               	movlw	10
  1371     017E  00F2               	movwf	___awdiv@divisor
  1372     017F  3000               	movlw	0
  1373     0180  00F3               	movwf	___awdiv@divisor+1
  1374     0181  082B               	movf	_min+1,w
  1375     0182  00F5               	movwf	___awdiv@dividend+1
  1376     0183  082A               	movf	_min,w
  1377     0184  00F4               	movwf	___awdiv@dividend
  1378     0185  120A  118A  250A  120A  118A  	fcall	___awdiv
  1379     018A  0873               	movf	?___awdiv+1,w
  1380     018B  1283               	bcf	3,5	;RP0=0, select bank0
  1381     018C  1303               	bcf	3,6	;RP1=0, select bank0
  1382     018D  00C6               	movwf	___awmod@dividend+1
  1383     018E  0872               	movf	?___awdiv,w
  1384     018F  00C5               	movwf	___awmod@dividend
  1385     0190  120A  158A  26E4  120A  118A  	fcall	___awmod
  1386     0195  1283               	bcf	3,5	;RP0=0, select bank0
  1387     0196  1303               	bcf	3,6	;RP1=0, select bank0
  1388     0197  0843               	movf	?___awmod,w
  1389     0198  00B7               	movwf	_d_min
  1390     0199                     l2374:
  1391                           
  1392                           ;main.c: 167:         Lcd_Write_Char(d_min+48);
  1393     0199  0837               	movf	_d_min,w
  1394     019A  3E30               	addlw	48
  1395     019B  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1396     01A0                     l2376:
  1397                           
  1398                           ;main.c: 168:         Lcd_Write_Char(u_min+48);
  1399     01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1400     01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1401     01A2  0838               	movf	_u_min,w
  1402     01A3  3E30               	addlw	48
  1403     01A4  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1404     01A9                     l2378:
  1405                           
  1406                           ;main.c: 169:         Lcd_Write_Char(':');
  1407     01A9  303A               	movlw	58
  1408     01AA  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1409     01AF                     l2380:
  1410                           
  1411                           ;main.c: 172:         u_sec = sec%10;
  1412     01AF  300A               	movlw	10
  1413     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1414     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1415     01B2  00C3               	movwf	___awmod@divisor
  1416     01B3  3000               	movlw	0
  1417     01B4  00C4               	movwf	___awmod@divisor+1
  1418     01B5  082D               	movf	_sec+1,w
  1419     01B6  00C6               	movwf	___awmod@dividend+1
  1420     01B7  082C               	movf	_sec,w
  1421     01B8  00C5               	movwf	___awmod@dividend
  1422     01B9  120A  158A  26E4  120A  118A  	fcall	___awmod
  1423     01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1424     01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1425     01C0  0843               	movf	?___awmod,w
  1426     01C1  00BA               	movwf	_u_sec
  1427     01C2                     l2382:
  1428                           
  1429                           ;main.c: 173:         d_sec = (sec/10)%10;
  1430     01C2  300A               	movlw	10
  1431     01C3  00C3               	movwf	___awmod@divisor
  1432     01C4  3000               	movlw	0
  1433     01C5  00C4               	movwf	___awmod@divisor+1
  1434     01C6  300A               	movlw	10
  1435     01C7  00F2               	movwf	___awdiv@divisor
  1436     01C8  3000               	movlw	0
  1437     01C9  00F3               	movwf	___awdiv@divisor+1
  1438     01CA  082D               	movf	_sec+1,w
  1439     01CB  00F5               	movwf	___awdiv@dividend+1
  1440     01CC  082C               	movf	_sec,w
  1441     01CD  00F4               	movwf	___awdiv@dividend
  1442     01CE  120A  118A  250A  120A  118A  	fcall	___awdiv
  1443     01D3  0873               	movf	?___awdiv+1,w
  1444     01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1445     01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1446     01D6  00C6               	movwf	___awmod@dividend+1
  1447     01D7  0872               	movf	?___awdiv,w
  1448     01D8  00C5               	movwf	___awmod@dividend
  1449     01D9  120A  158A  26E4  120A  118A  	fcall	___awmod
  1450     01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1451     01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1452     01E0  0843               	movf	?___awmod,w
  1453     01E1  00B9               	movwf	_d_sec
  1454     01E2                     l2384:
  1455                           
  1456                           ;main.c: 175:         Lcd_Write_Char(d_sec+48);
  1457     01E2  0839               	movf	_d_sec,w
  1458     01E3  3E30               	addlw	48
  1459     01E4  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1460     01E9                     l2386:
  1461                           
  1462                           ;main.c: 176:         Lcd_Write_Char(u_sec+48);
  1463     01E9  1283               	bcf	3,5	;RP0=0, select bank0
  1464     01EA  1303               	bcf	3,6	;RP1=0, select bank0
  1465     01EB  083A               	movf	_u_sec,w
  1466     01EC  3E30               	addlw	48
  1467     01ED  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1468     01F2                     l2388:
  1469                           
  1470                           ;main.c: 179:         u_dia = dia%10;
  1471     01F2  300A               	movlw	10
  1472     01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1473     01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1474     01F5  00C3               	movwf	___awmod@divisor
  1475     01F6  3000               	movlw	0
  1476     01F7  00C4               	movwf	___awmod@divisor+1
  1477     01F8  0827               	movf	_dia+1,w
  1478     01F9  00C6               	movwf	___awmod@dividend+1
  1479     01FA  0826               	movf	_dia,w
  1480     01FB  00C5               	movwf	___awmod@dividend
  1481     01FC  120A  158A  26E4  120A  118A  	fcall	___awmod
  1482     0201  1283               	bcf	3,5	;RP0=0, select bank0
  1483     0202  1303               	bcf	3,6	;RP1=0, select bank0
  1484     0203  0843               	movf	?___awmod,w
  1485     0204  00B4               	movwf	_u_dia
  1486     0205                     l2390:
  1487                           
  1488                           ;main.c: 180:         d_dia = (dia/10)%10;
  1489     0205  300A               	movlw	10
  1490     0206  00C3               	movwf	___awmod@divisor
  1491     0207  3000               	movlw	0
  1492     0208  00C4               	movwf	___awmod@divisor+1
  1493     0209  300A               	movlw	10
  1494     020A  00F2               	movwf	___awdiv@divisor
  1495     020B  3000               	movlw	0
  1496     020C  00F3               	movwf	___awdiv@divisor+1
  1497     020D  0827               	movf	_dia+1,w
  1498     020E  00F5               	movwf	___awdiv@dividend+1
  1499     020F  0826               	movf	_dia,w
  1500     0210  00F4               	movwf	___awdiv@dividend
  1501     0211  120A  118A  250A  120A  118A  	fcall	___awdiv
  1502     0216  0873               	movf	?___awdiv+1,w
  1503     0217  1283               	bcf	3,5	;RP0=0, select bank0
  1504     0218  1303               	bcf	3,6	;RP1=0, select bank0
  1505     0219  00C6               	movwf	___awmod@dividend+1
  1506     021A  0872               	movf	?___awdiv,w
  1507     021B  00C5               	movwf	___awmod@dividend
  1508     021C  120A  158A  26E4  120A  118A  	fcall	___awmod
  1509     0221  1283               	bcf	3,5	;RP0=0, select bank0
  1510     0222  1303               	bcf	3,6	;RP1=0, select bank0
  1511     0223  0843               	movf	?___awmod,w
  1512     0224  00B3               	movwf	_d_dia
  1513     0225                     l2392:
  1514                           
  1515                           ;main.c: 182:         Lcd_Set_Cursor(2,7);
  1516     0225  3007               	movlw	7
  1517     0226  00F6               	movwf	Lcd_Set_Cursor@b
  1518     0227  3002               	movlw	2
  1519     0228  120A  158A  2698  120A  118A  	fcall	_Lcd_Set_Cursor
  1520     022D                     l2394:
  1521                           
  1522                           ;main.c: 183:         Lcd_Write_Char(d_dia+48);
  1523     022D  1283               	bcf	3,5	;RP0=0, select bank0
  1524     022E  1303               	bcf	3,6	;RP1=0, select bank0
  1525     022F  0833               	movf	_d_dia,w
  1526     0230  3E30               	addlw	48
  1527     0231  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1528     0236                     l2396:
  1529                           
  1530                           ;main.c: 184:         Lcd_Write_Char(u_dia+48);
  1531     0236  1283               	bcf	3,5	;RP0=0, select bank0
  1532     0237  1303               	bcf	3,6	;RP1=0, select bank0
  1533     0238  0834               	movf	_u_dia,w
  1534     0239  3E30               	addlw	48
  1535     023A  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1536     023F                     l2398:
  1537                           
  1538                           ;main.c: 185:         Lcd_Write_Char('/');
  1539     023F  302F               	movlw	47
  1540     0240  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1541     0245                     l2400:
  1542                           
  1543                           ;main.c: 187:         u_mes = mes%10;
  1544     0245  300A               	movlw	10
  1545     0246  1283               	bcf	3,5	;RP0=0, select bank0
  1546     0247  1303               	bcf	3,6	;RP1=0, select bank0
  1547     0248  00C3               	movwf	___awmod@divisor
  1548     0249  3000               	movlw	0
  1549     024A  00C4               	movwf	___awmod@divisor+1
  1550     024B  0825               	movf	_mes+1,w
  1551     024C  00C6               	movwf	___awmod@dividend+1
  1552     024D  0824               	movf	_mes,w
  1553     024E  00C5               	movwf	___awmod@dividend
  1554     024F  120A  158A  26E4  120A  118A  	fcall	___awmod
  1555     0254  1283               	bcf	3,5	;RP0=0, select bank0
  1556     0255  1303               	bcf	3,6	;RP1=0, select bank0
  1557     0256  0843               	movf	?___awmod,w
  1558     0257  00B2               	movwf	_u_mes
  1559     0258                     l2402:
  1560                           
  1561                           ;main.c: 188:         d_mes = (mes/10)%10;
  1562     0258  300A               	movlw	10
  1563     0259  00C3               	movwf	___awmod@divisor
  1564     025A  3000               	movlw	0
  1565     025B  00C4               	movwf	___awmod@divisor+1
  1566     025C  300A               	movlw	10
  1567     025D  00F2               	movwf	___awdiv@divisor
  1568     025E  3000               	movlw	0
  1569     025F  00F3               	movwf	___awdiv@divisor+1
  1570     0260  0825               	movf	_mes+1,w
  1571     0261  00F5               	movwf	___awdiv@dividend+1
  1572     0262  0824               	movf	_mes,w
  1573     0263  00F4               	movwf	___awdiv@dividend
  1574     0264  120A  118A  250A  120A  118A  	fcall	___awdiv
  1575     0269  0873               	movf	?___awdiv+1,w
  1576     026A  1283               	bcf	3,5	;RP0=0, select bank0
  1577     026B  1303               	bcf	3,6	;RP1=0, select bank0
  1578     026C  00C6               	movwf	___awmod@dividend+1
  1579     026D  0872               	movf	?___awdiv,w
  1580     026E  00C5               	movwf	___awmod@dividend
  1581     026F  120A  158A  26E4  120A  118A  	fcall	___awmod
  1582     0274  1283               	bcf	3,5	;RP0=0, select bank0
  1583     0275  1303               	bcf	3,6	;RP1=0, select bank0
  1584     0276  0843               	movf	?___awmod,w
  1585     0277  00B1               	movwf	_d_mes
  1586     0278                     l2404:
  1587                           
  1588                           ;main.c: 190:         Lcd_Write_Char(d_mes+48);
  1589     0278  0831               	movf	_d_mes,w
  1590     0279  3E30               	addlw	48
  1591     027A  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1592     027F                     l2406:
  1593                           
  1594                           ;main.c: 191:         Lcd_Write_Char(u_mes+48);
  1595     027F  1283               	bcf	3,5	;RP0=0, select bank0
  1596     0280  1303               	bcf	3,6	;RP1=0, select bank0
  1597     0281  0832               	movf	_u_mes,w
  1598     0282  3E30               	addlw	48
  1599     0283  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1600     0288                     l2408:
  1601                           
  1602                           ;main.c: 192:         Lcd_Write_Char('/');
  1603     0288  302F               	movlw	47
  1604     0289  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1605     028E                     l2410:
  1606                           
  1607                           ;main.c: 194:         u_anio = anio%10;
  1608     028E  300A               	movlw	10
  1609     028F  1283               	bcf	3,5	;RP0=0, select bank0
  1610     0290  1303               	bcf	3,6	;RP1=0, select bank0
  1611     0291  00C3               	movwf	___awmod@divisor
  1612     0292  3000               	movlw	0
  1613     0293  00C4               	movwf	___awmod@divisor+1
  1614     0294  0823               	movf	_anio+1,w
  1615     0295  00C6               	movwf	___awmod@dividend+1
  1616     0296  0822               	movf	_anio,w
  1617     0297  00C5               	movwf	___awmod@dividend
  1618     0298  120A  158A  26E4  120A  118A  	fcall	___awmod
  1619     029D  1283               	bcf	3,5	;RP0=0, select bank0
  1620     029E  1303               	bcf	3,6	;RP1=0, select bank0
  1621     029F  0843               	movf	?___awmod,w
  1622     02A0  00B0               	movwf	_u_anio
  1623     02A1                     l2412:
  1624                           
  1625                           ;main.c: 195:         d_anio = (anio/10)%10;
  1626     02A1  300A               	movlw	10
  1627     02A2  00C3               	movwf	___awmod@divisor
  1628     02A3  3000               	movlw	0
  1629     02A4  00C4               	movwf	___awmod@divisor+1
  1630     02A5  300A               	movlw	10
  1631     02A6  00F2               	movwf	___awdiv@divisor
  1632     02A7  3000               	movlw	0
  1633     02A8  00F3               	movwf	___awdiv@divisor+1
  1634     02A9  0823               	movf	_anio+1,w
  1635     02AA  00F5               	movwf	___awdiv@dividend+1
  1636     02AB  0822               	movf	_anio,w
  1637     02AC  00F4               	movwf	___awdiv@dividend
  1638     02AD  120A  118A  250A  120A  118A  	fcall	___awdiv
  1639     02B2  0873               	movf	?___awdiv+1,w
  1640     02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1641     02B4  1303               	bcf	3,6	;RP1=0, select bank0
  1642     02B5  00C6               	movwf	___awmod@dividend+1
  1643     02B6  0872               	movf	?___awdiv,w
  1644     02B7  00C5               	movwf	___awmod@dividend
  1645     02B8  120A  158A  26E4  120A  118A  	fcall	___awmod
  1646     02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1647     02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1648     02BF  0843               	movf	?___awmod,w
  1649     02C0  00AF               	movwf	_d_anio
  1650     02C1                     l2414:
  1651                           
  1652                           ;main.c: 197:         Lcd_Write_String("20");
  1653     02C1  3005               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1654     02C2  120A  158A  256C  120A  118A  	fcall	_Lcd_Write_String
  1655     02C7                     l2416:
  1656                           
  1657                           ;main.c: 198:         Lcd_Write_Char(d_anio+48);
  1658     02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1659     02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1660     02C9  082F               	movf	_d_anio,w
  1661     02CA  3E30               	addlw	48
  1662     02CB  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1663     02D0                     l2418:
  1664                           
  1665                           ;main.c: 199:         Lcd_Write_Char(u_anio+48);
  1666     02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1667     02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1668     02D2  0830               	movf	_u_anio,w
  1669     02D3  3E30               	addlw	48
  1670     02D4  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1671                           
  1672                           ;main.c: 201:         while (flag == 1){
  1673     02D9  2C5C               	goto	l2470
  1674     02DA                     l2420:
  1675                           
  1676                           ;main.c: 203:             enviar_fecha();
  1677     02DA  120A  158A  265A  120A  118A  	fcall	_enviar_fecha
  1678                           
  1679                           ;main.c: 205:             I2C_Master_Start();
  1680     02DF  120A  158A  24F1  120A  118A  	fcall	_I2C_Master_Start
  1681                           
  1682                           ;main.c: 206:             I2C_Master_Write(0x51);
  1683     02E4  3051               	movlw	81
  1684     02E5  00F2               	movwf	I2C_Master_Write@d
  1685     02E6  3000               	movlw	0
  1686     02E7  00F3               	movwf	I2C_Master_Write@d+1
  1687     02E8  120A  158A  250C  120A  118A  	fcall	_I2C_Master_Write
  1688                           
  1689                           ;main.c: 207:             ADC = I2C_Master_Read(0);
  1690     02ED  3000               	movlw	0
  1691     02EE  00F2               	movwf	I2C_Master_Read@a
  1692     02EF  00F3               	movwf	I2C_Master_Read@a+1
  1693     02F0  120A  158A  2591  120A  118A  	fcall	_I2C_Master_Read
  1694     02F5  0872               	movf	?_I2C_Master_Read,w
  1695     02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1696     02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1697     02F8  00BE               	movwf	_ADC
  1698                           
  1699                           ;main.c: 208:             I2C_Master_Stop();
  1700     02F9  120A  158A  24FA  120A  118A  	fcall	_I2C_Master_Stop
  1701     02FE                     l2422:
  1702                           
  1703                           ;main.c: 209:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1704     02FE  30A5               	movlw	165
  1705     02FF  1283               	bcf	3,5	;RP0=0, select bank0
  1706     0300  1303               	bcf	3,6	;RP1=0, select bank0
  1707     0301  00CD               	movwf	??_main
  1708     0302                     u1637:
  1709     0302  0BCD               	decfsz	??_main,f
  1710     0303  2B02               	goto	u1637
  1711     0304  2B05               	nop2
  1712     0305                     l2424:
  1713                           
  1714                           ;main.c: 211:             centenas = (ADC/100);
  1715     0305  3064               	movlw	100
  1716     0306  00F2               	movwf	___awdiv@divisor
  1717     0307  3000               	movlw	0
  1718     0308  00F3               	movwf	___awdiv@divisor+1
  1719     0309  1283               	bcf	3,5	;RP0=0, select bank0
  1720     030A  1303               	bcf	3,6	;RP1=0, select bank0
  1721     030B  083E               	movf	_ADC,w
  1722     030C  00CD               	movwf	??_main
  1723     030D  01CE               	clrf	??_main+1
  1724     030E  084D               	movf	??_main,w
  1725     030F  00F4               	movwf	___awdiv@dividend
  1726     0310  084E               	movf	??_main+1,w
  1727     0311  00F5               	movwf	___awdiv@dividend+1
  1728     0312  120A  118A  250A  120A  118A  	fcall	___awdiv
  1729     0317  0872               	movf	?___awdiv,w
  1730     0318  1283               	bcf	3,5	;RP0=0, select bank0
  1731     0319  1303               	bcf	3,6	;RP1=0, select bank0
  1732     031A  00BD               	movwf	_centenas
  1733     031B                     l2426:
  1734                           
  1735                           ;main.c: 212:             decenas = (ADC/10)%10;
  1736     031B  300A               	movlw	10
  1737     031C  00C3               	movwf	___awmod@divisor
  1738     031D  3000               	movlw	0
  1739     031E  00C4               	movwf	___awmod@divisor+1
  1740     031F  300A               	movlw	10
  1741     0320  00F2               	movwf	___awdiv@divisor
  1742     0321  3000               	movlw	0
  1743     0322  00F3               	movwf	___awdiv@divisor+1
  1744     0323  083E               	movf	_ADC,w
  1745     0324  00CD               	movwf	??_main
  1746     0325  01CE               	clrf	??_main+1
  1747     0326  084D               	movf	??_main,w
  1748     0327  00F4               	movwf	___awdiv@dividend
  1749     0328  084E               	movf	??_main+1,w
  1750     0329  00F5               	movwf	___awdiv@dividend+1
  1751     032A  120A  118A  250A  120A  118A  	fcall	___awdiv
  1752     032F  0873               	movf	?___awdiv+1,w
  1753     0330  1283               	bcf	3,5	;RP0=0, select bank0
  1754     0331  1303               	bcf	3,6	;RP1=0, select bank0
  1755     0332  00C6               	movwf	___awmod@dividend+1
  1756     0333  0872               	movf	?___awdiv,w
  1757     0334  00C5               	movwf	___awmod@dividend
  1758     0335  120A  158A  26E4  120A  118A  	fcall	___awmod
  1759     033A  1283               	bcf	3,5	;RP0=0, select bank0
  1760     033B  1303               	bcf	3,6	;RP1=0, select bank0
  1761     033C  0843               	movf	?___awmod,w
  1762     033D  00BC               	movwf	_decenas
  1763     033E                     l2428:
  1764                           
  1765                           ;main.c: 213:             unidad = ADC%10;
  1766     033E  300A               	movlw	10
  1767     033F  00C3               	movwf	___awmod@divisor
  1768     0340  3000               	movlw	0
  1769     0341  00C4               	movwf	___awmod@divisor+1
  1770     0342  083E               	movf	_ADC,w
  1771     0343  00CD               	movwf	??_main
  1772     0344  01CE               	clrf	??_main+1
  1773     0345  084D               	movf	??_main,w
  1774     0346  00C5               	movwf	___awmod@dividend
  1775     0347  084E               	movf	??_main+1,w
  1776     0348  00C6               	movwf	___awmod@dividend+1
  1777     0349  120A  158A  26E4  120A  118A  	fcall	___awmod
  1778     034E  1283               	bcf	3,5	;RP0=0, select bank0
  1779     034F  1303               	bcf	3,6	;RP1=0, select bank0
  1780     0350  0843               	movf	?___awmod,w
  1781     0351  00BB               	movwf	_unidad
  1782     0352                     l2430:
  1783                           
  1784                           ;main.c: 215:             Lcd_Set_Cursor(2,1);
  1785     0352  01F6               	clrf	Lcd_Set_Cursor@b
  1786     0353  0AF6               	incf	Lcd_Set_Cursor@b,f
  1787     0354  3002               	movlw	2
  1788     0355  120A  158A  2698  120A  118A  	fcall	_Lcd_Set_Cursor
  1789     035A                     l2432:
  1790                           
  1791                           ;main.c: 216:             Lcd_Write_Char(centenas + 48);
  1792     035A  1283               	bcf	3,5	;RP0=0, select bank0
  1793     035B  1303               	bcf	3,6	;RP1=0, select bank0
  1794     035C  083D               	movf	_centenas,w
  1795     035D  3E30               	addlw	48
  1796     035E  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1797     0363                     l2434:
  1798                           
  1799                           ;main.c: 217:             Lcd_Write_Char(decenas + 48);
  1800     0363  1283               	bcf	3,5	;RP0=0, select bank0
  1801     0364  1303               	bcf	3,6	;RP1=0, select bank0
  1802     0365  083C               	movf	_decenas,w
  1803     0366  3E30               	addlw	48
  1804     0367  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1805     036C                     l2436:
  1806                           
  1807                           ;main.c: 218:             Lcd_Write_Char(unidad + 48);
  1808     036C  1283               	bcf	3,5	;RP0=0, select bank0
  1809     036D  1303               	bcf	3,6	;RP1=0, select bank0
  1810     036E  083B               	movf	_unidad,w
  1811     036F  3E30               	addlw	48
  1812     0370  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1813     0375                     l2438:
  1814                           
  1815                           ;main.c: 220:             u_dia = dia%10;
  1816     0375  300A               	movlw	10
  1817     0376  1283               	bcf	3,5	;RP0=0, select bank0
  1818     0377  1303               	bcf	3,6	;RP1=0, select bank0
  1819     0378  00C3               	movwf	___awmod@divisor
  1820     0379  3000               	movlw	0
  1821     037A  00C4               	movwf	___awmod@divisor+1
  1822     037B  0827               	movf	_dia+1,w
  1823     037C  00C6               	movwf	___awmod@dividend+1
  1824     037D  0826               	movf	_dia,w
  1825     037E  00C5               	movwf	___awmod@dividend
  1826     037F  120A  158A  26E4  120A  118A  	fcall	___awmod
  1827     0384  1283               	bcf	3,5	;RP0=0, select bank0
  1828     0385  1303               	bcf	3,6	;RP1=0, select bank0
  1829     0386  0843               	movf	?___awmod,w
  1830     0387  00B4               	movwf	_u_dia
  1831     0388                     l2440:
  1832                           
  1833                           ;main.c: 221:             d_dia = (dia/10)%10;
  1834     0388  300A               	movlw	10
  1835     0389  00C3               	movwf	___awmod@divisor
  1836     038A  3000               	movlw	0
  1837     038B  00C4               	movwf	___awmod@divisor+1
  1838     038C  300A               	movlw	10
  1839     038D  00F2               	movwf	___awdiv@divisor
  1840     038E  3000               	movlw	0
  1841     038F  00F3               	movwf	___awdiv@divisor+1
  1842     0390  0827               	movf	_dia+1,w
  1843     0391  00F5               	movwf	___awdiv@dividend+1
  1844     0392  0826               	movf	_dia,w
  1845     0393  00F4               	movwf	___awdiv@dividend
  1846     0394  120A  118A  250A  120A  118A  	fcall	___awdiv
  1847     0399  0873               	movf	?___awdiv+1,w
  1848     039A  1283               	bcf	3,5	;RP0=0, select bank0
  1849     039B  1303               	bcf	3,6	;RP1=0, select bank0
  1850     039C  00C6               	movwf	___awmod@dividend+1
  1851     039D  0872               	movf	?___awdiv,w
  1852     039E  00C5               	movwf	___awmod@dividend
  1853     039F  120A  158A  26E4  120A  118A  	fcall	___awmod
  1854     03A4  1283               	bcf	3,5	;RP0=0, select bank0
  1855     03A5  1303               	bcf	3,6	;RP1=0, select bank0
  1856     03A6  0843               	movf	?___awmod,w
  1857     03A7  00B3               	movwf	_d_dia
  1858     03A8                     l2442:
  1859                           
  1860                           ;main.c: 223:             Lcd_Set_Cursor(2,7);
  1861     03A8  3007               	movlw	7
  1862     03A9  00F6               	movwf	Lcd_Set_Cursor@b
  1863     03AA  3002               	movlw	2
  1864     03AB  120A  158A  2698  120A  118A  	fcall	_Lcd_Set_Cursor
  1865     03B0                     l2444:
  1866                           
  1867                           ;main.c: 224:             Lcd_Write_Char(d_dia+48);
  1868     03B0  1283               	bcf	3,5	;RP0=0, select bank0
  1869     03B1  1303               	bcf	3,6	;RP1=0, select bank0
  1870     03B2  0833               	movf	_d_dia,w
  1871     03B3  3E30               	addlw	48
  1872     03B4  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1873     03B9                     l2446:
  1874                           
  1875                           ;main.c: 225:             Lcd_Write_Char(u_dia+48);
  1876     03B9  1283               	bcf	3,5	;RP0=0, select bank0
  1877     03BA  1303               	bcf	3,6	;RP1=0, select bank0
  1878     03BB  0834               	movf	_u_dia,w
  1879     03BC  3E30               	addlw	48
  1880     03BD  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1881     03C2                     l2448:
  1882                           
  1883                           ;main.c: 226:             Lcd_Write_Char('/');
  1884     03C2  302F               	movlw	47
  1885     03C3  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1886     03C8                     l2450:
  1887                           
  1888                           ;main.c: 228:             u_mes = mes%10;
  1889     03C8  300A               	movlw	10
  1890     03C9  1283               	bcf	3,5	;RP0=0, select bank0
  1891     03CA  1303               	bcf	3,6	;RP1=0, select bank0
  1892     03CB  00C3               	movwf	___awmod@divisor
  1893     03CC  3000               	movlw	0
  1894     03CD  00C4               	movwf	___awmod@divisor+1
  1895     03CE  0825               	movf	_mes+1,w
  1896     03CF  00C6               	movwf	___awmod@dividend+1
  1897     03D0  0824               	movf	_mes,w
  1898     03D1  00C5               	movwf	___awmod@dividend
  1899     03D2  120A  158A  26E4  120A  118A  	fcall	___awmod
  1900     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1901     03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1902     03D9  0843               	movf	?___awmod,w
  1903     03DA  00B2               	movwf	_u_mes
  1904     03DB                     l2452:
  1905                           
  1906                           ;main.c: 229:             d_mes = (mes/10)%10;
  1907     03DB  300A               	movlw	10
  1908     03DC  00C3               	movwf	___awmod@divisor
  1909     03DD  3000               	movlw	0
  1910     03DE  00C4               	movwf	___awmod@divisor+1
  1911     03DF  300A               	movlw	10
  1912     03E0  00F2               	movwf	___awdiv@divisor
  1913     03E1  3000               	movlw	0
  1914     03E2  00F3               	movwf	___awdiv@divisor+1
  1915     03E3  0825               	movf	_mes+1,w
  1916     03E4  00F5               	movwf	___awdiv@dividend+1
  1917     03E5  0824               	movf	_mes,w
  1918     03E6  00F4               	movwf	___awdiv@dividend
  1919     03E7  120A  118A  250A  120A  118A  	fcall	___awdiv
  1920     03EC  0873               	movf	?___awdiv+1,w
  1921     03ED  1283               	bcf	3,5	;RP0=0, select bank0
  1922     03EE  1303               	bcf	3,6	;RP1=0, select bank0
  1923     03EF  00C6               	movwf	___awmod@dividend+1
  1924     03F0  0872               	movf	?___awdiv,w
  1925     03F1  00C5               	movwf	___awmod@dividend
  1926     03F2  120A  158A  26E4  120A  118A  	fcall	___awmod
  1927     03F7  1283               	bcf	3,5	;RP0=0, select bank0
  1928     03F8  1303               	bcf	3,6	;RP1=0, select bank0
  1929     03F9  0843               	movf	?___awmod,w
  1930     03FA  00B1               	movwf	_d_mes
  1931     03FB                     l2454:
  1932                           
  1933                           ;main.c: 231:             Lcd_Write_Char(d_mes+48);
  1934     03FB  0831               	movf	_d_mes,w
  1935     03FC  3E30               	addlw	48
  1936     03FD  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1937     0402                     l2456:
  1938                           
  1939                           ;main.c: 232:             Lcd_Write_Char(u_mes+48);
  1940     0402  1283               	bcf	3,5	;RP0=0, select bank0
  1941     0403  1303               	bcf	3,6	;RP1=0, select bank0
  1942     0404  0832               	movf	_u_mes,w
  1943     0405  3E30               	addlw	48
  1944     0406  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1945     040B                     l2458:
  1946                           
  1947                           ;main.c: 233:             Lcd_Write_Char('/');
  1948     040B  302F               	movlw	47
  1949     040C  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  1950     0411                     l2460:
  1951                           
  1952                           ;main.c: 235:             u_anio = anio%10;
  1953     0411  300A               	movlw	10
  1954     0412  1283               	bcf	3,5	;RP0=0, select bank0
  1955     0413  1303               	bcf	3,6	;RP1=0, select bank0
  1956     0414  00C3               	movwf	___awmod@divisor
  1957     0415  3000               	movlw	0
  1958     0416  00C4               	movwf	___awmod@divisor+1
  1959     0417  0823               	movf	_anio+1,w
  1960     0418  00C6               	movwf	___awmod@dividend+1
  1961     0419  0822               	movf	_anio,w
  1962     041A  00C5               	movwf	___awmod@dividend
  1963     041B  120A  158A  26E4  120A  118A  	fcall	___awmod
  1964     0420  1283               	bcf	3,5	;RP0=0, select bank0
  1965     0421  1303               	bcf	3,6	;RP1=0, select bank0
  1966     0422  0843               	movf	?___awmod,w
  1967     0423  00B0               	movwf	_u_anio
  1968     0424                     l2462:
  1969                           
  1970                           ;main.c: 236:             d_anio = (anio/10)%10;
  1971     0424  300A               	movlw	10
  1972     0425  00C3               	movwf	___awmod@divisor
  1973     0426  3000               	movlw	0
  1974     0427  00C4               	movwf	___awmod@divisor+1
  1975     0428  300A               	movlw	10
  1976     0429  00F2               	movwf	___awdiv@divisor
  1977     042A  3000               	movlw	0
  1978     042B  00F3               	movwf	___awdiv@divisor+1
  1979     042C  0823               	movf	_anio+1,w
  1980     042D  00F5               	movwf	___awdiv@dividend+1
  1981     042E  0822               	movf	_anio,w
  1982     042F  00F4               	movwf	___awdiv@dividend
  1983     0430  120A  118A  250A  120A  118A  	fcall	___awdiv
  1984     0435  0873               	movf	?___awdiv+1,w
  1985     0436  1283               	bcf	3,5	;RP0=0, select bank0
  1986     0437  1303               	bcf	3,6	;RP1=0, select bank0
  1987     0438  00C6               	movwf	___awmod@dividend+1
  1988     0439  0872               	movf	?___awdiv,w
  1989     043A  00C5               	movwf	___awmod@dividend
  1990     043B  120A  158A  26E4  120A  118A  	fcall	___awmod
  1991     0440  1283               	bcf	3,5	;RP0=0, select bank0
  1992     0441  1303               	bcf	3,6	;RP1=0, select bank0
  1993     0442  0843               	movf	?___awmod,w
  1994     0443  00AF               	movwf	_d_anio
  1995     0444                     l2464:
  1996                           
  1997                           ;main.c: 238:             Lcd_Write_String("20");
  1998     0444  3005               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1999     0445  120A  158A  256C  120A  118A  	fcall	_Lcd_Write_String
  2000     044A                     l2466:
  2001                           
  2002                           ;main.c: 239:             Lcd_Write_Char(d_anio+48);
  2003     044A  1283               	bcf	3,5	;RP0=0, select bank0
  2004     044B  1303               	bcf	3,6	;RP1=0, select bank0
  2005     044C  082F               	movf	_d_anio,w
  2006     044D  3E30               	addlw	48
  2007     044E  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  2008     0453                     l2468:
  2009                           
  2010                           ;main.c: 240:             Lcd_Write_Char(u_anio+48);
  2011     0453  1283               	bcf	3,5	;RP0=0, select bank0
  2012     0454  1303               	bcf	3,6	;RP1=0, select bank0
  2013     0455  0830               	movf	_u_anio,w
  2014     0456  3E30               	addlw	48
  2015     0457  120A  158A  25ED  120A  118A  	fcall	_Lcd_Write_Char
  2016     045C                     l2470:
  2017                           
  2018                           ;main.c: 201:         while (flag == 1){
  2019     045C  1283               	bcf	3,5	;RP0=0, select bank0
  2020     045D  1303               	bcf	3,6	;RP1=0, select bank0
  2021     045E  0320               	decf	_flag,w
  2022     045F  0421               	iorwf	_flag+1,w
  2023     0460  1903               	btfsc	3,2
  2024     0461  2C63               	goto	u1611
  2025     0462  2C64               	goto	u1610
  2026     0463                     u1611:
  2027     0463  2ADA               	goto	l2420
  2028     0464                     u1610:
  2029     0464  283B               	goto	l2322
  2030     0465  120A  118A  280C   	ljmp	start
  2031     0468                     __end_of_main:
  2032                           
  2033                           	psect	text1
  2034     0DBF                     __ptext1:	
  2035 ;; *************** function _setup *****************
  2036 ;; Defined at:
  2037 ;;		line 251 in file "main.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;		None
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;		None
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2, status,0, pclath, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2051 ;;      Params:         0       0       0       0       0
  2052 ;;      Locals:         0       0       0       0       0
  2053 ;;      Temps:          0       0       0       0       0
  2054 ;;      Totals:         0       0       0       0       0
  2055 ;;Total ram usage:        0 bytes
  2056 ;; Hardware stack levels used: 1
  2057 ;; Hardware stack levels required when called: 3
  2058 ;; This function calls:
  2059 ;;		_I2C_Master_Init
  2060 ;; This function is called by:
  2061 ;;		_main
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065     0DBF                     _setup:	
  2066                           ;psect for function _setup
  2067                           
  2068     0DBF                     l2124:	
  2069                           ;incstack = 0
  2070                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2071                           
  2072                           
  2073                           ;main.c: 252:     ANSEL = 0;
  2074     0DBF  1683               	bsf	3,5	;RP0=1, select bank3
  2075     0DC0  1703               	bsf	3,6	;RP1=1, select bank3
  2076     0DC1  0188               	clrf	8	;volatile
  2077                           
  2078                           ;main.c: 253:     ANSELH = 0;
  2079     0DC2  0189               	clrf	9	;volatile
  2080     0DC3                     l2126:
  2081                           
  2082                           ;main.c: 254:     TRISB = 0b00001111;
  2083     0DC3  300F               	movlw	15
  2084     0DC4  1683               	bsf	3,5	;RP0=1, select bank1
  2085     0DC5  1303               	bcf	3,6	;RP1=0, select bank1
  2086     0DC6  0086               	movwf	6	;volatile
  2087     0DC7                     l2128:
  2088                           
  2089                           ;main.c: 255:     TRISD = 0;
  2090     0DC7  0188               	clrf	8	;volatile
  2091     0DC8                     l2130:
  2092                           
  2093                           ;main.c: 256:     TRISA = 0;
  2094     0DC8  0185               	clrf	5	;volatile
  2095     0DC9                     l2132:
  2096                           
  2097                           ;main.c: 257:     PORTB = 0;
  2098     0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  2099     0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  2100     0DCB  0186               	clrf	6	;volatile
  2101     0DCC                     l2134:
  2102                           
  2103                           ;main.c: 258:     PORTD = 0;
  2104     0DCC  0188               	clrf	8	;volatile
  2105     0DCD                     l2136:
  2106                           
  2107                           ;main.c: 259:     PORTA = 0;
  2108     0DCD  0185               	clrf	5	;volatile
  2109     0DCE                     l2138:
  2110                           
  2111                           ;main.c: 260:     OPTION_REGbits.nRBPU = 0;
  2112     0DCE  1683               	bsf	3,5	;RP0=1, select bank1
  2113     0DCF  1303               	bcf	3,6	;RP1=0, select bank1
  2114     0DD0  1381               	bcf	1,7	;volatile
  2115     0DD1                     l2140:
  2116                           
  2117                           ;main.c: 261:     WPUBbits.WPUB0 = 1;
  2118     0DD1  1415               	bsf	21,0	;volatile
  2119     0DD2                     l2142:
  2120                           
  2121                           ;main.c: 262:     WPUBbits.WPUB1 = 1;
  2122     0DD2  1495               	bsf	21,1	;volatile
  2123     0DD3                     l2144:
  2124                           
  2125                           ;main.c: 263:     WPUBbits.WPUB2 = 1;
  2126     0DD3  1515               	bsf	21,2	;volatile
  2127     0DD4                     l2146:
  2128                           
  2129                           ;main.c: 264:     WPUBbits.WPUB3 = 1;
  2130     0DD4  1595               	bsf	21,3	;volatile
  2131                           
  2132                           ;main.c: 266:     IOCB = 0b00001111;
  2133     0DD5  300F               	movlw	15
  2134     0DD6  0096               	movwf	22	;volatile
  2135     0DD7                     l2148:
  2136                           
  2137                           ;main.c: 269:     INTCONbits.RBIF = 0;
  2138     0DD7  100B               	bcf	11,0	;volatile
  2139     0DD8                     l2150:
  2140                           
  2141                           ;main.c: 270:     INTCONbits.RBIE = 1;
  2142     0DD8  158B               	bsf	11,3	;volatile
  2143     0DD9                     l2152:
  2144                           
  2145                           ;main.c: 271:     INTCONbits.GIE = 1;
  2146     0DD9  178B               	bsf	11,7	;volatile
  2147     0DDA                     l2154:
  2148                           
  2149                           ;main.c: 273:     OSCCONbits.IRCF = 0b111;
  2150     0DDA  3070               	movlw	112
  2151     0DDB  048F               	iorwf	15,f	;volatile
  2152     0DDC                     l2156:
  2153                           
  2154                           ;main.c: 274:     OSCCONbits.SCS = 1;
  2155     0DDC  140F               	bsf	15,0	;volatile
  2156     0DDD                     l2158:
  2157                           
  2158                           ;main.c: 275:     I2C_Master_Init(100000);
  2159     0DDD  3000               	movlw	0
  2160     0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  2161     0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  2162     0DE0  00C8               	movwf	I2C_Master_Init@c+3
  2163     0DE1  3001               	movlw	1
  2164     0DE2  00C7               	movwf	I2C_Master_Init@c+2
  2165     0DE3  3086               	movlw	134
  2166     0DE4  00C6               	movwf	I2C_Master_Init@c+1
  2167     0DE5  30A0               	movlw	160
  2168     0DE6  00C5               	movwf	I2C_Master_Init@c
  2169     0DE7  120A  158A  2622  120A  158A  	fcall	_I2C_Master_Init
  2170     0DEC                     l169:
  2171     0DEC  0008               	return
  2172     0DED                     __end_of_setup:
  2173                           
  2174                           	psect	text2
  2175     0E22                     __ptext2:	
  2176 ;; *************** function _I2C_Master_Init *****************
  2177 ;; Defined at:
  2178 ;;		line 16 in file "I2C.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  c               4    6[BANK0 ] const unsigned long 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0, pclath, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2192 ;;      Params:         0       4       0       0       0
  2193 ;;      Locals:         0       0       0       0       0
  2194 ;;      Temps:          0       4       0       0       0
  2195 ;;      Totals:         0       8       0       0       0
  2196 ;;Total ram usage:        8 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 2
  2199 ;; This function calls:
  2200 ;;		___lldiv
  2201 ;; This function is called by:
  2202 ;;		_setup
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206     0E22                     _I2C_Master_Init:	
  2207                           ;psect for function _I2C_Master_Init
  2208                           
  2209     0E22                     l2102:	
  2210                           ;incstack = 0
  2211                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2212                           
  2213                           
  2214                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2215     0E22  3028               	movlw	40
  2216     0E23  1283               	bcf	3,5	;RP0=0, select bank0
  2217     0E24  1303               	bcf	3,6	;RP1=0, select bank0
  2218     0E25  0094               	movwf	20	;volatile
  2219     0E26                     l2104:
  2220                           
  2221                           ;I2C.c: 19:     SSPCON2 = 0;
  2222     0E26  1683               	bsf	3,5	;RP0=1, select bank1
  2223     0E27  1303               	bcf	3,6	;RP1=0, select bank1
  2224     0E28  0191               	clrf	17	;volatile
  2225     0E29                     l2106:
  2226                           
  2227                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2228     0E29  1283               	bcf	3,5	;RP0=0, select bank0
  2229     0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  2230     0E2B  0845               	movf	I2C_Master_Init@c,w
  2231     0E2C  00C9               	movwf	??_I2C_Master_Init
  2232     0E2D  0846               	movf	I2C_Master_Init@c+1,w
  2233     0E2E  00CA               	movwf	??_I2C_Master_Init+1
  2234     0E2F  0847               	movf	I2C_Master_Init@c+2,w
  2235     0E30  00CB               	movwf	??_I2C_Master_Init+2
  2236     0E31  0848               	movf	I2C_Master_Init@c+3,w
  2237     0E32  00CC               	movwf	??_I2C_Master_Init+3
  2238     0E33  3002               	movlw	2
  2239     0E34                     u1365:
  2240     0E34  1003               	clrc
  2241     0E35  0DC9               	rlf	??_I2C_Master_Init,f
  2242     0E36  0DCA               	rlf	??_I2C_Master_Init+1,f
  2243     0E37  0DCB               	rlf	??_I2C_Master_Init+2,f
  2244     0E38  0DCC               	rlf	??_I2C_Master_Init+3,f
  2245     0E39                     u1360:
  2246     0E39  3EFF               	addlw	-1
  2247     0E3A  1D03               	skipz
  2248     0E3B  2E34               	goto	u1365
  2249     0E3C  084C               	movf	??_I2C_Master_Init+3,w
  2250     0E3D  00F5               	movwf	___lldiv@divisor+3
  2251     0E3E  084B               	movf	??_I2C_Master_Init+2,w
  2252     0E3F  00F4               	movwf	___lldiv@divisor+2
  2253     0E40  084A               	movf	??_I2C_Master_Init+1,w
  2254     0E41  00F3               	movwf	___lldiv@divisor+1
  2255     0E42  0849               	movf	??_I2C_Master_Init,w
  2256     0E43  00F2               	movwf	___lldiv@divisor
  2257     0E44  3000               	movlw	0
  2258     0E45  00F9               	movwf	___lldiv@dividend+3
  2259     0E46  307A               	movlw	122
  2260     0E47  00F8               	movwf	___lldiv@dividend+2
  2261     0E48  3012               	movlw	18
  2262     0E49  00F7               	movwf	___lldiv@dividend+1
  2263     0E4A  3000               	movlw	0
  2264     0E4B  00F6               	movwf	___lldiv@dividend
  2265     0E4C  120A  118A  2573  120A  158A  	fcall	___lldiv
  2266     0E51  0872               	movf	?___lldiv,w
  2267     0E52  3EFF               	addlw	255
  2268     0E53  1683               	bsf	3,5	;RP0=1, select bank1
  2269     0E54  1303               	bcf	3,6	;RP1=0, select bank1
  2270     0E55  0093               	movwf	19	;volatile
  2271     0E56                     l2108:
  2272                           
  2273                           ;I2C.c: 21:     SSPSTAT = 0;
  2274     0E56  0194               	clrf	20	;volatile
  2275     0E57                     l2110:
  2276                           
  2277                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2278     0E57  1587               	bsf	7,3	;volatile
  2279     0E58                     l2112:
  2280                           
  2281                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2282     0E58  1607               	bsf	7,4	;volatile
  2283     0E59                     l198:
  2284     0E59  0008               	return
  2285     0E5A                     __end_of_I2C_Master_Init:
  2286                           
  2287                           	psect	text3
  2288     0573                     __ptext3:	
  2289 ;; *************** function ___lldiv *****************
  2290 ;; Defined at:
  2291 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  divisor         4    2[COMMON] unsigned long 
  2294 ;;  dividend        4    6[COMMON] unsigned long 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  quotient        4    1[BANK0 ] unsigned long 
  2297 ;;  counter         1    5[BANK0 ] unsigned char 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  4    2[COMMON] unsigned long 
  2300 ;; Registers used:
  2301 ;;		wreg, status,2, status,0
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2307 ;;      Params:         8       0       0       0       0
  2308 ;;      Locals:         0       5       0       0       0
  2309 ;;      Temps:          0       1       0       0       0
  2310 ;;      Totals:         8       6       0       0       0
  2311 ;;Total ram usage:       14 bytes
  2312 ;; Hardware stack levels used: 1
  2313 ;; Hardware stack levels required when called: 1
  2314 ;; This function calls:
  2315 ;;		Nothing
  2316 ;; This function is called by:
  2317 ;;		_I2C_Master_Init
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321     0573                     ___lldiv:	
  2322                           ;psect for function ___lldiv
  2323                           
  2324     0573                     l2058:	
  2325                           ;incstack = 0
  2326                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2327                           
  2328     0573  3000               	movlw	0
  2329     0574  1283               	bcf	3,5	;RP0=0, select bank0
  2330     0575  1303               	bcf	3,6	;RP1=0, select bank0
  2331     0576  00C3               	movwf	___lldiv@quotient+3
  2332     0577  3000               	movlw	0
  2333     0578  00C2               	movwf	___lldiv@quotient+2
  2334     0579  3000               	movlw	0
  2335     057A  00C1               	movwf	___lldiv@quotient+1
  2336     057B  3000               	movlw	0
  2337     057C  00C0               	movwf	___lldiv@quotient
  2338     057D  0875               	movf	___lldiv@divisor+3,w
  2339     057E  0474               	iorwf	___lldiv@divisor+2,w
  2340     057F  0473               	iorwf	___lldiv@divisor+1,w
  2341     0580  0472               	iorwf	___lldiv@divisor,w
  2342     0581  1903               	skipnz
  2343     0582  2D84               	goto	u1281
  2344     0583  2D85               	goto	u1280
  2345     0584                     u1281:
  2346     0584  2DD2               	goto	l2078
  2347     0585                     u1280:
  2348     0585                     l2060:
  2349     0585  01C4               	clrf	___lldiv@counter
  2350     0586  0AC4               	incf	___lldiv@counter,f
  2351     0587  2D95               	goto	l2064
  2352     0588                     l2062:
  2353     0588  3001               	movlw	1
  2354     0589  00BF               	movwf	??___lldiv
  2355     058A                     u1295:
  2356     058A  1003               	clrc
  2357     058B  0DF2               	rlf	___lldiv@divisor,f
  2358     058C  0DF3               	rlf	___lldiv@divisor+1,f
  2359     058D  0DF4               	rlf	___lldiv@divisor+2,f
  2360     058E  0DF5               	rlf	___lldiv@divisor+3,f
  2361     058F  0BBF               	decfsz	??___lldiv,f
  2362     0590  2D8A               	goto	u1295
  2363     0591  3001               	movlw	1
  2364     0592  00BF               	movwf	??___lldiv
  2365     0593  083F               	movf	??___lldiv,w
  2366     0594  07C4               	addwf	___lldiv@counter,f
  2367     0595                     l2064:
  2368     0595  1FF5               	btfss	___lldiv@divisor+3,7
  2369     0596  2D98               	goto	u1301
  2370     0597  2D99               	goto	u1300
  2371     0598                     u1301:
  2372     0598  2D88               	goto	l2062
  2373     0599                     u1300:
  2374     0599                     l2066:
  2375     0599  3001               	movlw	1
  2376     059A  00BF               	movwf	??___lldiv
  2377     059B                     u1315:
  2378     059B  1003               	clrc
  2379     059C  0DC0               	rlf	___lldiv@quotient,f
  2380     059D  0DC1               	rlf	___lldiv@quotient+1,f
  2381     059E  0DC2               	rlf	___lldiv@quotient+2,f
  2382     059F  0DC3               	rlf	___lldiv@quotient+3,f
  2383     05A0  0BBF               	decfsz	??___lldiv,f
  2384     05A1  2D9B               	goto	u1315
  2385     05A2                     l2068:
  2386     05A2  0875               	movf	___lldiv@divisor+3,w
  2387     05A3  0279               	subwf	___lldiv@dividend+3,w
  2388     05A4  1D03               	skipz
  2389     05A5  2DB0               	goto	u1325
  2390     05A6  0874               	movf	___lldiv@divisor+2,w
  2391     05A7  0278               	subwf	___lldiv@dividend+2,w
  2392     05A8  1D03               	skipz
  2393     05A9  2DB0               	goto	u1325
  2394     05AA  0873               	movf	___lldiv@divisor+1,w
  2395     05AB  0277               	subwf	___lldiv@dividend+1,w
  2396     05AC  1D03               	skipz
  2397     05AD  2DB0               	goto	u1325
  2398     05AE  0872               	movf	___lldiv@divisor,w
  2399     05AF  0276               	subwf	___lldiv@dividend,w
  2400     05B0                     u1325:
  2401     05B0  1C03               	skipc
  2402     05B1  2DB3               	goto	u1321
  2403     05B2  2DB4               	goto	u1320
  2404     05B3                     u1321:
  2405     05B3  2DC3               	goto	l2074
  2406     05B4                     u1320:
  2407     05B4                     l2070:
  2408     05B4  0872               	movf	___lldiv@divisor,w
  2409     05B5  02F6               	subwf	___lldiv@dividend,f
  2410     05B6  0873               	movf	___lldiv@divisor+1,w
  2411     05B7  1C03               	skipc
  2412     05B8  0F73               	incfsz	___lldiv@divisor+1,w
  2413     05B9  02F7               	subwf	___lldiv@dividend+1,f
  2414     05BA  0874               	movf	___lldiv@divisor+2,w
  2415     05BB  1C03               	skipc
  2416     05BC  0F74               	incfsz	___lldiv@divisor+2,w
  2417     05BD  02F8               	subwf	___lldiv@dividend+2,f
  2418     05BE  0875               	movf	___lldiv@divisor+3,w
  2419     05BF  1C03               	skipc
  2420     05C0  0F75               	incfsz	___lldiv@divisor+3,w
  2421     05C1  02F9               	subwf	___lldiv@dividend+3,f
  2422     05C2                     l2072:
  2423     05C2  1440               	bsf	___lldiv@quotient,0
  2424     05C3                     l2074:
  2425     05C3  3001               	movlw	1
  2426     05C4                     u1335:
  2427     05C4  1003               	clrc
  2428     05C5  0CF5               	rrf	___lldiv@divisor+3,f
  2429     05C6  0CF4               	rrf	___lldiv@divisor+2,f
  2430     05C7  0CF3               	rrf	___lldiv@divisor+1,f
  2431     05C8  0CF2               	rrf	___lldiv@divisor,f
  2432     05C9  3EFF               	addlw	-1
  2433     05CA  1D03               	skipz
  2434     05CB  2DC4               	goto	u1335
  2435     05CC                     l2076:
  2436     05CC  3001               	movlw	1
  2437     05CD  02C4               	subwf	___lldiv@counter,f
  2438     05CE  1D03               	btfss	3,2
  2439     05CF  2DD1               	goto	u1341
  2440     05D0  2DD2               	goto	u1340
  2441     05D1                     u1341:
  2442     05D1  2D99               	goto	l2066
  2443     05D2                     u1340:
  2444     05D2                     l2078:
  2445     05D2  0843               	movf	___lldiv@quotient+3,w
  2446     05D3  00F5               	movwf	?___lldiv+3
  2447     05D4  0842               	movf	___lldiv@quotient+2,w
  2448     05D5  00F4               	movwf	?___lldiv+2
  2449     05D6  0841               	movf	___lldiv@quotient+1,w
  2450     05D7  00F3               	movwf	?___lldiv+1
  2451     05D8  0840               	movf	___lldiv@quotient,w
  2452     05D9  00F2               	movwf	?___lldiv
  2453     05DA                     l468:
  2454     05DA  0008               	return
  2455     05DB                     __end_of___lldiv:
  2456                           
  2457                           	psect	text4
  2458     0F9C                     __ptext4:	
  2459 ;; *************** function _leer_seg *****************
  2460 ;; Defined at:
  2461 ;;		line 16 in file "DS3232.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  2    8[COMMON] int 
  2468 ;; Registers used:
  2469 ;;		wreg, status,2, status,0, pclath, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2475 ;;      Params:         2       0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0
  2477 ;;      Temps:          0       2       0       0       0
  2478 ;;      Totals:         2       2       0       0       0
  2479 ;;Total ram usage:        4 bytes
  2480 ;; Hardware stack levels used: 1
  2481 ;; Hardware stack levels required when called: 3
  2482 ;; This function calls:
  2483 ;;		_I2C_Master_Read
  2484 ;;		_I2C_Master_RepeatedStart
  2485 ;;		_I2C_Master_Start
  2486 ;;		_I2C_Master_Stop
  2487 ;;		_I2C_Master_Write
  2488 ;;		___wmul
  2489 ;; This function is called by:
  2490 ;;		_main
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494     0F9C                     _leer_seg:	
  2495                           ;psect for function _leer_seg
  2496                           
  2497     0F9C                     l2200:	
  2498                           ;incstack = 0
  2499                           ; Regs used in _leer_seg: [wreg+status,2+status,0+pclath+cstack]
  2500                           
  2501                           
  2502                           ;DS3232.c: 18:     I2C_Master_Start();
  2503     0F9C  120A  158A  24F1  120A  158A  	fcall	_I2C_Master_Start
  2504                           
  2505                           ;DS3232.c: 19:     I2C_Master_Write(0xD0);
  2506     0FA1  30D0               	movlw	208
  2507     0FA2  00F2               	movwf	I2C_Master_Write@d
  2508     0FA3  3000               	movlw	0
  2509     0FA4  00F3               	movwf	I2C_Master_Write@d+1
  2510     0FA5  120A  158A  250C  120A  158A  	fcall	_I2C_Master_Write
  2511                           
  2512                           ;DS3232.c: 20:     I2C_Master_Write(0x00);
  2513     0FAA  3000               	movlw	0
  2514     0FAB  00F2               	movwf	I2C_Master_Write@d
  2515     0FAC  00F3               	movwf	I2C_Master_Write@d+1
  2516     0FAD  120A  158A  250C  120A  158A  	fcall	_I2C_Master_Write
  2517                           
  2518                           ;DS3232.c: 21:     I2C_Master_RepeatedStart();
  2519     0FB2  120A  158A  2503  120A  158A  	fcall	_I2C_Master_RepeatedStart
  2520                           
  2521                           ;DS3232.c: 22:     I2C_Master_Write(0xD1);
  2522     0FB7  30D1               	movlw	209
  2523     0FB8  00F2               	movwf	I2C_Master_Write@d
  2524     0FB9  3000               	movlw	0
  2525     0FBA  00F3               	movwf	I2C_Master_Write@d+1
  2526     0FBB  120A  158A  250C  120A  158A  	fcall	_I2C_Master_Write
  2527                           
  2528                           ;DS3232.c: 23:     sec = I2C_Master_Read(0x00);
  2529     0FC0  3000               	movlw	0
  2530     0FC1  00F2               	movwf	I2C_Master_Read@a
  2531     0FC2  00F3               	movwf	I2C_Master_Read@a+1
  2532     0FC3  120A  158A  2591  120A  158A  	fcall	_I2C_Master_Read
  2533     0FC8  0873               	movf	?_I2C_Master_Read+1,w
  2534     0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  2535     0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  2536     0FCB  00AD               	movwf	_sec+1
  2537     0FCC  0872               	movf	?_I2C_Master_Read,w
  2538     0FCD  00AC               	movwf	_sec
  2539                           
  2540                           ;DS3232.c: 24:     I2C_Master_Stop();
  2541     0FCE  120A  158A  24FA  120A  158A  	fcall	_I2C_Master_Stop
  2542                           
  2543                           ;DS3232.c: 25:     sec = (sec>>4)*10 + (sec & 0x0F);
  2544     0FD3  300F               	movlw	15
  2545     0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  2546     0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  2547     0FD6  052C               	andwf	_sec,w
  2548     0FD7  00BF               	movwf	??_leer_seg
  2549     0FD8  3000               	movlw	0
  2550     0FD9  052D               	andwf	_sec+1,w
  2551     0FDA  00C0               	movwf	??_leer_seg+1
  2552     0FDB  0E2C               	swapf	_sec,w
  2553     0FDC  390F               	andlw	15
  2554     0FDD  00F2               	movwf	___wmul@multiplier
  2555     0FDE  0E2D               	swapf	_sec+1,w
  2556     0FDF  39F0               	andlw	240
  2557     0FE0  04F2               	iorwf	___wmul@multiplier,f
  2558     0FE1  0E2D               	swapf	_sec+1,w
  2559     0FE2  390F               	andlw	15
  2560     0FE3  00F3               	movwf	___wmul@multiplier+1
  2561     0FE4  30F0               	movlw	240
  2562     0FE5  1DF3               	btfss	___wmul@multiplier+1,3
  2563     0FE6  3000               	movlw	0
  2564     0FE7  04F3               	iorwf	___wmul@multiplier+1,f
  2565     0FE8  300A               	movlw	10
  2566     0FE9  00F4               	movwf	___wmul@multiplicand
  2567     0FEA  3000               	movlw	0
  2568     0FEB  00F5               	movwf	___wmul@multiplicand+1
  2569     0FEC  120A  118A  27D4  120A  158A  	fcall	___wmul
  2570     0FF1  1283               	bcf	3,5	;RP0=0, select bank0
  2571     0FF2  1303               	bcf	3,6	;RP1=0, select bank0
  2572     0FF3  083F               	movf	??_leer_seg,w
  2573     0FF4  0772               	addwf	?___wmul,w
  2574     0FF5  00AC               	movwf	_sec
  2575     0FF6  0840               	movf	??_leer_seg+1,w
  2576     0FF7  1803               	skipnc
  2577     0FF8  0A40               	incf	??_leer_seg+1,w
  2578     0FF9  0773               	addwf	?___wmul+1,w
  2579     0FFA  00AD               	movwf	_sec+1
  2580     0FFB                     l2202:
  2581                           
  2582                           ;DS3232.c: 26:     return sec;
  2583     0FFB  082D               	movf	_sec+1,w
  2584     0FFC  00F9               	movwf	?_leer_seg+1
  2585     0FFD  082C               	movf	_sec,w
  2586     0FFE  00F8               	movwf	?_leer_seg
  2587     0FFF                     l328:
  2588     0FFF  0008               	return
  2589     1000                     __end_of_leer_seg:
  2590                           
  2591                           	psect	text5
  2592     05DB                     __ptext5:	
  2593 ;; *************** function _leer_min *****************
  2594 ;; Defined at:
  2595 ;;		line 29 in file "DS3232.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  2    8[COMMON] int 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0, pclath, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2609 ;;      Params:         2       0       0       0       0
  2610 ;;      Locals:         0       0       0       0       0
  2611 ;;      Temps:          0       2       0       0       0
  2612 ;;      Totals:         2       2       0       0       0
  2613 ;;Total ram usage:        4 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; Hardware stack levels required when called: 3
  2616 ;; This function calls:
  2617 ;;		_I2C_Master_Read
  2618 ;;		_I2C_Master_RepeatedStart
  2619 ;;		_I2C_Master_Start
  2620 ;;		_I2C_Master_Stop
  2621 ;;		_I2C_Master_Write
  2622 ;;		___wmul
  2623 ;; This function is called by:
  2624 ;;		_main
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628     05DB                     _leer_min:	
  2629                           ;psect for function _leer_min
  2630                           
  2631     05DB                     l2206:	
  2632                           ;incstack = 0
  2633                           ; Regs used in _leer_min: [wreg+status,2+status,0+pclath+cstack]
  2634                           
  2635                           
  2636                           ;DS3232.c: 31:     I2C_Master_Start();
  2637     05DB  120A  158A  24F1  120A  118A  	fcall	_I2C_Master_Start
  2638                           
  2639                           ;DS3232.c: 32:     I2C_Master_Write(0xD0);
  2640     05E0  30D0               	movlw	208
  2641     05E1  00F2               	movwf	I2C_Master_Write@d
  2642     05E2  3000               	movlw	0
  2643     05E3  00F3               	movwf	I2C_Master_Write@d+1
  2644     05E4  120A  158A  250C  120A  118A  	fcall	_I2C_Master_Write
  2645                           
  2646                           ;DS3232.c: 33:     I2C_Master_Write(0x01);
  2647     05E9  3001               	movlw	1
  2648     05EA  00F2               	movwf	I2C_Master_Write@d
  2649     05EB  3000               	movlw	0
  2650     05EC  00F3               	movwf	I2C_Master_Write@d+1
  2651     05ED  120A  158A  250C  120A  118A  	fcall	_I2C_Master_Write
  2652                           
  2653                           ;DS3232.c: 34:     I2C_Master_RepeatedStart();
  2654     05F2  120A  158A  2503  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2655                           
  2656                           ;DS3232.c: 35:     I2C_Master_Write(0xD1);
  2657     05F7  30D1               	movlw	209
  2658     05F8  00F2               	movwf	I2C_Master_Write@d
  2659     05F9  3000               	movlw	0
  2660     05FA  00F3               	movwf	I2C_Master_Write@d+1
  2661     05FB  120A  158A  250C  120A  118A  	fcall	_I2C_Master_Write
  2662                           
  2663                           ;DS3232.c: 36:     min = I2C_Master_Read(0x00);
  2664     0600  3000               	movlw	0
  2665     0601  00F2               	movwf	I2C_Master_Read@a
  2666     0602  00F3               	movwf	I2C_Master_Read@a+1
  2667     0603  120A  158A  2591  120A  118A  	fcall	_I2C_Master_Read
  2668     0608  0873               	movf	?_I2C_Master_Read+1,w
  2669     0609  1283               	bcf	3,5	;RP0=0, select bank0
  2670     060A  1303               	bcf	3,6	;RP1=0, select bank0
  2671     060B  00AB               	movwf	_min+1
  2672     060C  0872               	movf	?_I2C_Master_Read,w
  2673     060D  00AA               	movwf	_min
  2674                           
  2675                           ;DS3232.c: 37:     I2C_Master_Stop();
  2676     060E  120A  158A  24FA  120A  118A  	fcall	_I2C_Master_Stop
  2677                           
  2678                           ;DS3232.c: 38:     min = (min>>4)*10 + (min & 0x0F);
  2679     0613  300F               	movlw	15
  2680     0614  1283               	bcf	3,5	;RP0=0, select bank0
  2681     0615  1303               	bcf	3,6	;RP1=0, select bank0
  2682     0616  052A               	andwf	_min,w
  2683     0617  00BF               	movwf	??_leer_min
  2684     0618  3000               	movlw	0
  2685     0619  052B               	andwf	_min+1,w
  2686     061A  00C0               	movwf	??_leer_min+1
  2687     061B  0E2A               	swapf	_min,w
  2688     061C  390F               	andlw	15
  2689     061D  00F2               	movwf	___wmul@multiplier
  2690     061E  0E2B               	swapf	_min+1,w
  2691     061F  39F0               	andlw	240
  2692     0620  04F2               	iorwf	___wmul@multiplier,f
  2693     0621  0E2B               	swapf	_min+1,w
  2694     0622  390F               	andlw	15
  2695     0623  00F3               	movwf	___wmul@multiplier+1
  2696     0624  30F0               	movlw	240
  2697     0625  1DF3               	btfss	___wmul@multiplier+1,3
  2698     0626  3000               	movlw	0
  2699     0627  04F3               	iorwf	___wmul@multiplier+1,f
  2700     0628  300A               	movlw	10
  2701     0629  00F4               	movwf	___wmul@multiplicand
  2702     062A  3000               	movlw	0
  2703     062B  00F5               	movwf	___wmul@multiplicand+1
  2704     062C  120A  118A  27D4  120A  118A  	fcall	___wmul
  2705     0631  1283               	bcf	3,5	;RP0=0, select bank0
  2706     0632  1303               	bcf	3,6	;RP1=0, select bank0
  2707     0633  083F               	movf	??_leer_min,w
  2708     0634  0772               	addwf	?___wmul,w
  2709     0635  00AA               	movwf	_min
  2710     0636  0840               	movf	??_leer_min+1,w
  2711     0637  1803               	skipnc
  2712     0638  0A40               	incf	??_leer_min+1,w
  2713     0639  0773               	addwf	?___wmul+1,w
  2714     063A  00AB               	movwf	_min+1
  2715     063B                     l2208:
  2716                           
  2717                           ;DS3232.c: 39:     return min;
  2718     063B  082B               	movf	_min+1,w
  2719     063C  00F9               	movwf	?_leer_min+1
  2720     063D  082A               	movf	_min,w
  2721     063E  00F8               	movwf	?_leer_min
  2722     063F                     l331:
  2723     063F  0008               	return
  2724     0640                     __end_of_leer_min:
  2725                           
  2726                           	psect	text6
  2727     0640                     __ptext6:	
  2728 ;; *************** function _leer_mes *****************
  2729 ;; Defined at:
  2730 ;;		line 68 in file "DS3232.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;		None
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;		None
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  2    8[COMMON] int 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2, status,0, pclath, cstack
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2744 ;;      Params:         2       0       0       0       0
  2745 ;;      Locals:         0       0       0       0       0
  2746 ;;      Temps:          0       2       0       0       0
  2747 ;;      Totals:         2       2       0       0       0
  2748 ;;Total ram usage:        4 bytes
  2749 ;; Hardware stack levels used: 1
  2750 ;; Hardware stack levels required when called: 3
  2751 ;; This function calls:
  2752 ;;		_I2C_Master_Read
  2753 ;;		_I2C_Master_RepeatedStart
  2754 ;;		_I2C_Master_Start
  2755 ;;		_I2C_Master_Stop
  2756 ;;		_I2C_Master_Write
  2757 ;;		___wmul
  2758 ;; This function is called by:
  2759 ;;		_main
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763     0640                     _leer_mes:	
  2764                           ;psect for function _leer_mes
  2765                           
  2766     0640                     l2224:	
  2767                           ;incstack = 0
  2768                           ; Regs used in _leer_mes: [wreg+status,2+status,0+pclath+cstack]
  2769                           
  2770                           
  2771                           ;DS3232.c: 70:     I2C_Master_Start();
  2772     0640  120A  158A  24F1  120A  118A  	fcall	_I2C_Master_Start
  2773                           
  2774                           ;DS3232.c: 71:     I2C_Master_Write(0xD0);
  2775     0645  30D0               	movlw	208
  2776     0646  00F2               	movwf	I2C_Master_Write@d
  2777     0647  3000               	movlw	0
  2778     0648  00F3               	movwf	I2C_Master_Write@d+1
  2779     0649  120A  158A  250C  120A  118A  	fcall	_I2C_Master_Write
  2780                           
  2781                           ;DS3232.c: 72:     I2C_Master_Write(0x05);
  2782     064E  3005               	movlw	5
  2783     064F  00F2               	movwf	I2C_Master_Write@d
  2784     0650  3000               	movlw	0
  2785     0651  00F3               	movwf	I2C_Master_Write@d+1
  2786     0652  120A  158A  250C  120A  118A  	fcall	_I2C_Master_Write
  2787                           
  2788                           ;DS3232.c: 73:     I2C_Master_RepeatedStart();
  2789     0657  120A  158A  2503  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2790                           
  2791                           ;DS3232.c: 74:     I2C_Master_Write(0xD1);
  2792     065C  30D1               	movlw	209
  2793     065D  00F2               	movwf	I2C_Master_Write@d
  2794     065E  3000               	movlw	0
  2795     065F  00F3               	movwf	I2C_Master_Write@d+1
  2796     0660  120A  158A  250C  120A  118A  	fcall	_I2C_Master_Write
  2797                           
  2798                           ;DS3232.c: 75:     mes = I2C_Master_Read(0x00);
  2799     0665  3000               	movlw	0
  2800     0666  00F2               	movwf	I2C_Master_Read@a
  2801     0667  00F3               	movwf	I2C_Master_Read@a+1
  2802     0668  120A  158A  2591  120A  118A  	fcall	_I2C_Master_Read
  2803     066D  0873               	movf	?_I2C_Master_Read+1,w
  2804     066E  1283               	bcf	3,5	;RP0=0, select bank0
  2805     066F  1303               	bcf	3,6	;RP1=0, select bank0
  2806     0670  00A5               	movwf	_mes+1
  2807     0671  0872               	movf	?_I2C_Master_Read,w
  2808     0672  00A4               	movwf	_mes
  2809                           
  2810                           ;DS3232.c: 76:     I2C_Master_Stop();
  2811     0673  120A  158A  24FA  120A  118A  	fcall	_I2C_Master_Stop
  2812                           
  2813                           ;DS3232.c: 77:     mes = (mes>>4)*10 + (mes & 0x0F);
  2814     0678  300F               	movlw	15
  2815     0679  1283               	bcf	3,5	;RP0=0, select bank0
  2816     067A  1303               	bcf	3,6	;RP1=0, select bank0
  2817     067B  0524               	andwf	_mes,w
  2818     067C  00BF               	movwf	??_leer_mes
  2819     067D  3000               	movlw	0
  2820     067E  0525               	andwf	_mes+1,w
  2821     067F  00C0               	movwf	??_leer_mes+1
  2822     0680  0E24               	swapf	_mes,w
  2823     0681  390F               	andlw	15
  2824     0682  00F2               	movwf	___wmul@multiplier
  2825     0683  0E25               	swapf	_mes+1,w
  2826     0684  39F0               	andlw	240
  2827     0685  04F2               	iorwf	___wmul@multiplier,f
  2828     0686  0E25               	swapf	_mes+1,w
  2829     0687  390F               	andlw	15
  2830     0688  00F3               	movwf	___wmul@multiplier+1
  2831     0689  30F0               	movlw	240
  2832     068A  1DF3               	btfss	___wmul@multiplier+1,3
  2833     068B  3000               	movlw	0
  2834     068C  04F3               	iorwf	___wmul@multiplier+1,f
  2835     068D  300A               	movlw	10
  2836     068E  00F4               	movwf	___wmul@multiplicand
  2837     068F  3000               	movlw	0
  2838     0690  00F5               	movwf	___wmul@multiplicand+1
  2839     0691  120A  118A  27D4  120A  118A  	fcall	___wmul
  2840     0696  1283               	bcf	3,5	;RP0=0, select bank0
  2841     0697  1303               	bcf	3,6	;RP1=0, select bank0
  2842     0698  083F               	movf	??_leer_mes,w
  2843     0699  0772               	addwf	?___wmul,w
  2844     069A  00A4               	movwf	_mes
  2845     069B  0840               	movf	??_leer_mes+1,w
  2846     069C  1803               	skipnc
  2847     069D  0A40               	incf	??_leer_mes+1,w
  2848     069E  0773               	addwf	?___wmul+1,w
  2849     069F  00A5               	movwf	_mes+1
  2850     06A0                     l2226:
  2851                           
  2852                           ;DS3232.c: 78:     return mes;
  2853     06A0  0825               	movf	_mes+1,w
  2854     06A1  00F9               	movwf	?_leer_mes+1
  2855     06A2  0824               	movf	_mes,w
  2856     06A3  00F8               	movwf	?_leer_mes
  2857     06A4                     l340:
  2858     06A4  0008               	return
  2859     06A5                     __end_of_leer_mes:
  2860                           
  2861                           	psect	text7
  2862     06A5                     __ptext7:	
  2863 ;; *************** function _leer_hora *****************
  2864 ;; Defined at:
  2865 ;;		line 42 in file "DS3232.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  2    8[COMMON] int 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0, pclath, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2879 ;;      Params:         2       0       0       0       0
  2880 ;;      Locals:         0       0       0       0       0
  2881 ;;      Temps:          0       2       0       0       0
  2882 ;;      Totals:         2       2       0       0       0
  2883 ;;Total ram usage:        4 bytes
  2884 ;; Hardware stack levels used: 1
  2885 ;; Hardware stack levels required when called: 3
  2886 ;; This function calls:
  2887 ;;		_I2C_Master_Read
  2888 ;;		_I2C_Master_RepeatedStart
  2889 ;;		_I2C_Master_Start
  2890 ;;		_I2C_Master_Stop
  2891 ;;		_I2C_Master_Write
  2892 ;;		___wmul
  2893 ;; This function is called by:
  2894 ;;		_main
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898     06A5                     _leer_hora:	
  2899                           ;psect for function _leer_hora
  2900                           
  2901     06A5                     l2212:	
  2902                           ;incstack = 0
  2903                           ; Regs used in _leer_hora: [wreg+status,2+status,0+pclath+cstack]
  2904                           
  2905                           
  2906                           ;DS3232.c: 44:     I2C_Master_Start();
  2907     06A5  120A  158A  24F1  120A  118A  	fcall	_I2C_Master_Start
  2908                           
  2909                           ;DS3232.c: 45:     I2C_Master_Write(0xD0);
  2910     06AA  30D0               	movlw	208
  2911     06AB  00F2               	movwf	I2C_Master_Write@d
  2912     06AC  3000               	movlw	0
  2913     06AD  00F3               	movwf	I2C_Master_Write@d+1
  2914     06AE  120A  158A  250C  120A  118A  	fcall	_I2C_Master_Write
  2915                           
  2916                           ;DS3232.c: 46:     I2C_Master_Write(0x02);
  2917     06B3  3002               	movlw	2
  2918     06B4  00F2               	movwf	I2C_Master_Write@d
  2919     06B5  3000               	movlw	0
  2920     06B6  00F3               	movwf	I2C_Master_Write@d+1
  2921     06B7  120A  158A  250C  120A  118A  	fcall	_I2C_Master_Write
  2922                           
  2923                           ;DS3232.c: 47:     I2C_Master_RepeatedStart();
  2924     06BC  120A  158A  2503  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2925                           
  2926                           ;DS3232.c: 48:     I2C_Master_Write(0xD1);
  2927     06C1  30D1               	movlw	209
  2928     06C2  00F2               	movwf	I2C_Master_Write@d
  2929     06C3  3000               	movlw	0
  2930     06C4  00F3               	movwf	I2C_Master_Write@d+1
  2931     06C5  120A  158A  250C  120A  118A  	fcall	_I2C_Master_Write
  2932                           
  2933                           ;DS3232.c: 49:     hora = I2C_Master_Read(0x00);
  2934     06CA  3000               	movlw	0
  2935     06CB  00F2               	movwf	I2C_Master_Read@a
  2936     06CC  00F3               	movwf	I2C_Master_Read@a+1
  2937     06CD  120A  158A  2591  120A  118A  	fcall	_I2C_Master_Read
  2938     06D2  0873               	movf	?_I2C_Master_Read+1,w
  2939     06D3  1283               	bcf	3,5	;RP0=0, select bank0
  2940     06D4  1303               	bcf	3,6	;RP1=0, select bank0
  2941     06D5  00A9               	movwf	_hora+1
  2942     06D6  0872               	movf	?_I2C_Master_Read,w
  2943     06D7  00A8               	movwf	_hora
  2944                           
  2945                           ;DS3232.c: 50:     I2C_Master_Stop();
  2946     06D8  120A  158A  24FA  120A  118A  	fcall	_I2C_Master_Stop
  2947                           
  2948                           ;DS3232.c: 51:     hora = (hora>>4)*10 + (hora & 0x0F);
  2949     06DD  300F               	movlw	15
  2950     06DE  1283               	bcf	3,5	;RP0=0, select bank0
  2951     06DF  1303               	bcf	3,6	;RP1=0, select bank0
  2952     06E0  0528               	andwf	_hora,w
  2953     06E1  00BF               	movwf	??_leer_hora
  2954     06E2  3000               	movlw	0
  2955     06E3  0529               	andwf	_hora+1,w
  2956     06E4  00C0               	movwf	??_leer_hora+1
  2957     06E5  0E28               	swapf	_hora,w
  2958     06E6  390F               	andlw	15
  2959     06E7  00F2               	movwf	___wmul@multiplier
  2960     06E8  0E29               	swapf	_hora+1,w
  2961     06E9  39F0               	andlw	240
  2962     06EA  04F2               	iorwf	___wmul@multiplier,f
  2963     06EB  0E29               	swapf	_hora+1,w
  2964     06EC  390F               	andlw	15
  2965     06ED  00F3               	movwf	___wmul@multiplier+1
  2966     06EE  30F0               	movlw	240
  2967     06EF  1DF3               	btfss	___wmul@multiplier+1,3
  2968     06F0  3000               	movlw	0
  2969     06F1  04F3               	iorwf	___wmul@multiplier+1,f
  2970     06F2  300A               	movlw	10
  2971     06F3  00F4               	movwf	___wmul@multiplicand
  2972     06F4  3000               	movlw	0
  2973     06F5  00F5               	movwf	___wmul@multiplicand+1
  2974     06F6  120A  118A  27D4  120A  118A  	fcall	___wmul
  2975     06FB  1283               	bcf	3,5	;RP0=0, select bank0
  2976     06FC  1303               	bcf	3,6	;RP1=0, select bank0
  2977     06FD  083F               	movf	??_leer_hora,w
  2978     06FE  0772               	addwf	?___wmul,w
  2979     06FF  00A8               	movwf	_hora
  2980     0700  0840               	movf	??_leer_hora+1,w
  2981     0701  1803               	skipnc
  2982     0702  0A40               	incf	??_leer_hora+1,w
  2983     0703  0773               	addwf	?___wmul+1,w
  2984     0704  00A9               	movwf	_hora+1
  2985     0705                     l2214:
  2986                           
  2987                           ;DS3232.c: 52:     return hora;
  2988     0705  0829               	movf	_hora+1,w
  2989     0706  00F9               	movwf	?_leer_hora+1
  2990     0707  0828               	movf	_hora,w
  2991     0708  00F8               	movwf	?_leer_hora
  2992     0709                     l334:
  2993     0709  0008               	return
  2994     070A                     __end_of_leer_hora:
  2995                           
  2996                           	psect	text8
  2997     070A                     __ptext8:	
  2998 ;; *************** function _leer_dia *****************
  2999 ;; Defined at:
  3000 ;;		line 55 in file "DS3232.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  2    8[COMMON] int 
  3007 ;; Registers used:
  3008 ;;		wreg, status,2, status,0, pclath, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3014 ;;      Params:         2       0       0       0       0
  3015 ;;      Locals:         0       0       0       0       0
  3016 ;;      Temps:          0       2       0       0       0
  3017 ;;      Totals:         2       2       0       0       0
  3018 ;;Total ram usage:        4 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 3
  3021 ;; This function calls:
  3022 ;;		_I2C_Master_Read
  3023 ;;		_I2C_Master_RepeatedStart
  3024 ;;		_I2C_Master_Start
  3025 ;;		_I2C_Master_Stop
  3026 ;;		_I2C_Master_Write
  3027 ;;		___wmul
  3028 ;; This function is called by:
  3029 ;;		_main
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033     070A                     _leer_dia:	
  3034                           ;psect for function _leer_dia
  3035                           
  3036     070A                     l2218:	
  3037                           ;incstack = 0
  3038                           ; Regs used in _leer_dia: [wreg+status,2+status,0+pclath+cstack]
  3039                           
  3040                           
  3041                           ;DS3232.c: 57:     I2C_Master_Start();
  3042     070A  120A  158A  24F1  120A  118A  	fcall	_I2C_Master_Start
  3043                           
  3044                           ;DS3232.c: 58:     I2C_Master_Write(0xD0);
  3045     070F  30D0               	movlw	208
  3046     0710  00F2               	movwf	I2C_Master_Write@d
  3047     0711  3000               	movlw	0
  3048     0712  00F3               	movwf	I2C_Master_Write@d+1
  3049     0713  120A  158A  250C  120A  118A  	fcall	_I2C_Master_Write
  3050                           
  3051                           ;DS3232.c: 59:     I2C_Master_Write(0x04);
  3052     0718  3004               	movlw	4
  3053     0719  00F2               	movwf	I2C_Master_Write@d
  3054     071A  3000               	movlw	0
  3055     071B  00F3               	movwf	I2C_Master_Write@d+1
  3056     071C  120A  158A  250C  120A  118A  	fcall	_I2C_Master_Write
  3057                           
  3058                           ;DS3232.c: 60:     I2C_Master_RepeatedStart();
  3059     0721  120A  158A  2503  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3060                           
  3061                           ;DS3232.c: 61:     I2C_Master_Write(0xD1);
  3062     0726  30D1               	movlw	209
  3063     0727  00F2               	movwf	I2C_Master_Write@d
  3064     0728  3000               	movlw	0
  3065     0729  00F3               	movwf	I2C_Master_Write@d+1
  3066     072A  120A  158A  250C  120A  118A  	fcall	_I2C_Master_Write
  3067                           
  3068                           ;DS3232.c: 62:     dia = I2C_Master_Read(0x00);
  3069     072F  3000               	movlw	0
  3070     0730  00F2               	movwf	I2C_Master_Read@a
  3071     0731  00F3               	movwf	I2C_Master_Read@a+1
  3072     0732  120A  158A  2591  120A  118A  	fcall	_I2C_Master_Read
  3073     0737  0873               	movf	?_I2C_Master_Read+1,w
  3074     0738  1283               	bcf	3,5	;RP0=0, select bank0
  3075     0739  1303               	bcf	3,6	;RP1=0, select bank0
  3076     073A  00A7               	movwf	_dia+1
  3077     073B  0872               	movf	?_I2C_Master_Read,w
  3078     073C  00A6               	movwf	_dia
  3079                           
  3080                           ;DS3232.c: 63:     I2C_Master_Stop();
  3081     073D  120A  158A  24FA  120A  118A  	fcall	_I2C_Master_Stop
  3082                           
  3083                           ;DS3232.c: 64:     dia = (dia>>4)*10 + (dia & 0x0F);
  3084     0742  300F               	movlw	15
  3085     0743  1283               	bcf	3,5	;RP0=0, select bank0
  3086     0744  1303               	bcf	3,6	;RP1=0, select bank0
  3087     0745  0526               	andwf	_dia,w
  3088     0746  00BF               	movwf	??_leer_dia
  3089     0747  3000               	movlw	0
  3090     0748  0527               	andwf	_dia+1,w
  3091     0749  00C0               	movwf	??_leer_dia+1
  3092     074A  0E26               	swapf	_dia,w
  3093     074B  390F               	andlw	15
  3094     074C  00F2               	movwf	___wmul@multiplier
  3095     074D  0E27               	swapf	_dia+1,w
  3096     074E  39F0               	andlw	240
  3097     074F  04F2               	iorwf	___wmul@multiplier,f
  3098     0750  0E27               	swapf	_dia+1,w
  3099     0751  390F               	andlw	15
  3100     0752  00F3               	movwf	___wmul@multiplier+1
  3101     0753  30F0               	movlw	240
  3102     0754  1DF3               	btfss	___wmul@multiplier+1,3
  3103     0755  3000               	movlw	0
  3104     0756  04F3               	iorwf	___wmul@multiplier+1,f
  3105     0757  300A               	movlw	10
  3106     0758  00F4               	movwf	___wmul@multiplicand
  3107     0759  3000               	movlw	0
  3108     075A  00F5               	movwf	___wmul@multiplicand+1
  3109     075B  120A  118A  27D4  120A  118A  	fcall	___wmul
  3110     0760  1283               	bcf	3,5	;RP0=0, select bank0
  3111     0761  1303               	bcf	3,6	;RP1=0, select bank0
  3112     0762  083F               	movf	??_leer_dia,w
  3113     0763  0772               	addwf	?___wmul,w
  3114     0764  00A6               	movwf	_dia
  3115     0765  0840               	movf	??_leer_dia+1,w
  3116     0766  1803               	skipnc
  3117     0767  0A40               	incf	??_leer_dia+1,w
  3118     0768  0773               	addwf	?___wmul+1,w
  3119     0769  00A7               	movwf	_dia+1
  3120     076A                     l2220:
  3121                           
  3122                           ;DS3232.c: 65:     return dia;
  3123     076A  0827               	movf	_dia+1,w
  3124     076B  00F9               	movwf	?_leer_dia+1
  3125     076C  0826               	movf	_dia,w
  3126     076D  00F8               	movwf	?_leer_dia
  3127     076E                     l337:
  3128     076E  0008               	return
  3129     076F                     __end_of_leer_dia:
  3130                           
  3131                           	psect	text9
  3132     076F                     __ptext9:	
  3133 ;; *************** function _leer_anio *****************
  3134 ;; Defined at:
  3135 ;;		line 81 in file "DS3232.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;		None
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;		None
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  2    8[COMMON] int 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0, pclath, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3149 ;;      Params:         2       0       0       0       0
  3150 ;;      Locals:         0       0       0       0       0
  3151 ;;      Temps:          0       2       0       0       0
  3152 ;;      Totals:         2       2       0       0       0
  3153 ;;Total ram usage:        4 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: 3
  3156 ;; This function calls:
  3157 ;;		_I2C_Master_Read
  3158 ;;		_I2C_Master_RepeatedStart
  3159 ;;		_I2C_Master_Start
  3160 ;;		_I2C_Master_Stop
  3161 ;;		_I2C_Master_Write
  3162 ;;		___wmul
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168     076F                     _leer_anio:	
  3169                           ;psect for function _leer_anio
  3170                           
  3171     076F                     l2230:	
  3172                           ;incstack = 0
  3173                           ; Regs used in _leer_anio: [wreg+status,2+status,0+pclath+cstack]
  3174                           
  3175                           
  3176                           ;DS3232.c: 83:     I2C_Master_Start();
  3177     076F  120A  158A  24F1  120A  118A  	fcall	_I2C_Master_Start
  3178                           
  3179                           ;DS3232.c: 84:     I2C_Master_Write(0xD0);
  3180     0774  30D0               	movlw	208
  3181     0775  00F2               	movwf	I2C_Master_Write@d
  3182     0776  3000               	movlw	0
  3183     0777  00F3               	movwf	I2C_Master_Write@d+1
  3184     0778  120A  158A  250C  120A  118A  	fcall	_I2C_Master_Write
  3185                           
  3186                           ;DS3232.c: 85:     I2C_Master_Write(0x06);
  3187     077D  3006               	movlw	6
  3188     077E  00F2               	movwf	I2C_Master_Write@d
  3189     077F  3000               	movlw	0
  3190     0780  00F3               	movwf	I2C_Master_Write@d+1
  3191     0781  120A  158A  250C  120A  118A  	fcall	_I2C_Master_Write
  3192                           
  3193                           ;DS3232.c: 86:     I2C_Master_RepeatedStart();
  3194     0786  120A  158A  2503  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3195                           
  3196                           ;DS3232.c: 87:     I2C_Master_Write(0xD1);
  3197     078B  30D1               	movlw	209
  3198     078C  00F2               	movwf	I2C_Master_Write@d
  3199     078D  3000               	movlw	0
  3200     078E  00F3               	movwf	I2C_Master_Write@d+1
  3201     078F  120A  158A  250C  120A  118A  	fcall	_I2C_Master_Write
  3202                           
  3203                           ;DS3232.c: 88:     anio = I2C_Master_Read(0x00);
  3204     0794  3000               	movlw	0
  3205     0795  00F2               	movwf	I2C_Master_Read@a
  3206     0796  00F3               	movwf	I2C_Master_Read@a+1
  3207     0797  120A  158A  2591  120A  118A  	fcall	_I2C_Master_Read
  3208     079C  0873               	movf	?_I2C_Master_Read+1,w
  3209     079D  1283               	bcf	3,5	;RP0=0, select bank0
  3210     079E  1303               	bcf	3,6	;RP1=0, select bank0
  3211     079F  00A3               	movwf	_anio+1
  3212     07A0  0872               	movf	?_I2C_Master_Read,w
  3213     07A1  00A2               	movwf	_anio
  3214                           
  3215                           ;DS3232.c: 89:     I2C_Master_Stop();
  3216     07A2  120A  158A  24FA  120A  118A  	fcall	_I2C_Master_Stop
  3217                           
  3218                           ;DS3232.c: 90:     anio = (anio>>4)*10 + (anio & 0x0F);
  3219     07A7  300F               	movlw	15
  3220     07A8  1283               	bcf	3,5	;RP0=0, select bank0
  3221     07A9  1303               	bcf	3,6	;RP1=0, select bank0
  3222     07AA  0522               	andwf	_anio,w
  3223     07AB  00BF               	movwf	??_leer_anio
  3224     07AC  3000               	movlw	0
  3225     07AD  0523               	andwf	_anio+1,w
  3226     07AE  00C0               	movwf	??_leer_anio+1
  3227     07AF  0E22               	swapf	_anio,w
  3228     07B0  390F               	andlw	15
  3229     07B1  00F2               	movwf	___wmul@multiplier
  3230     07B2  0E23               	swapf	_anio+1,w
  3231     07B3  39F0               	andlw	240
  3232     07B4  04F2               	iorwf	___wmul@multiplier,f
  3233     07B5  0E23               	swapf	_anio+1,w
  3234     07B6  390F               	andlw	15
  3235     07B7  00F3               	movwf	___wmul@multiplier+1
  3236     07B8  30F0               	movlw	240
  3237     07B9  1DF3               	btfss	___wmul@multiplier+1,3
  3238     07BA  3000               	movlw	0
  3239     07BB  04F3               	iorwf	___wmul@multiplier+1,f
  3240     07BC  300A               	movlw	10
  3241     07BD  00F4               	movwf	___wmul@multiplicand
  3242     07BE  3000               	movlw	0
  3243     07BF  00F5               	movwf	___wmul@multiplicand+1
  3244     07C0  120A  118A  27D4  120A  118A  	fcall	___wmul
  3245     07C5  1283               	bcf	3,5	;RP0=0, select bank0
  3246     07C6  1303               	bcf	3,6	;RP1=0, select bank0
  3247     07C7  083F               	movf	??_leer_anio,w
  3248     07C8  0772               	addwf	?___wmul,w
  3249     07C9  00A2               	movwf	_anio
  3250     07CA  0840               	movf	??_leer_anio+1,w
  3251     07CB  1803               	skipnc
  3252     07CC  0A40               	incf	??_leer_anio+1,w
  3253     07CD  0773               	addwf	?___wmul+1,w
  3254     07CE  00A3               	movwf	_anio+1
  3255     07CF                     l2232:
  3256                           
  3257                           ;DS3232.c: 91:     return hora;
  3258     07CF  0829               	movf	_hora+1,w
  3259     07D0  00F9               	movwf	?_leer_anio+1
  3260     07D1  0828               	movf	_hora,w
  3261     07D2  00F8               	movwf	?_leer_anio
  3262     07D3                     l343:
  3263     07D3  0008               	return
  3264     07D4                     __end_of_leer_anio:
  3265                           
  3266                           	psect	text10
  3267     07D4                     __ptext10:	
  3268 ;; *************** function ___wmul *****************
  3269 ;; Defined at:
  3270 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  multiplier      2    2[COMMON] unsigned int 
  3273 ;;  multiplicand    2    4[COMMON] unsigned int 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  product         2    6[COMMON] unsigned int 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  2    2[COMMON] unsigned int 
  3278 ;; Registers used:
  3279 ;;		wreg, status,2, status,0
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3285 ;;      Params:         4       0       0       0       0
  3286 ;;      Locals:         2       0       0       0       0
  3287 ;;      Temps:          0       0       0       0       0
  3288 ;;      Totals:         6       0       0       0       0
  3289 ;;Total ram usage:        6 bytes
  3290 ;; Hardware stack levels used: 1
  3291 ;; Hardware stack levels required when called: 1
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_leer_seg
  3296 ;;		_leer_min
  3297 ;;		_leer_hora
  3298 ;;		_leer_dia
  3299 ;;		_leer_mes
  3300 ;;		_leer_anio
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304     07D4                     ___wmul:	
  3305                           ;psect for function ___wmul
  3306                           
  3307     07D4                     l1624:	
  3308                           ;incstack = 0
  3309                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3310                           
  3311     07D4  01F6               	clrf	___wmul@product
  3312     07D5  01F7               	clrf	___wmul@product+1
  3313     07D6                     l1626:
  3314     07D6  1C72               	btfss	___wmul@multiplier,0
  3315     07D7  2FD9               	goto	u791
  3316     07D8  2FDA               	goto	u790
  3317     07D9                     u791:
  3318     07D9  2FE0               	goto	l432
  3319     07DA                     u790:
  3320     07DA                     l1628:
  3321     07DA  0874               	movf	___wmul@multiplicand,w
  3322     07DB  07F6               	addwf	___wmul@product,f
  3323     07DC  1803               	skipnc
  3324     07DD  0AF7               	incf	___wmul@product+1,f
  3325     07DE  0875               	movf	___wmul@multiplicand+1,w
  3326     07DF  07F7               	addwf	___wmul@product+1,f
  3327     07E0                     l432:
  3328     07E0  3001               	movlw	1
  3329     07E1                     u805:
  3330     07E1  1003               	clrc
  3331     07E2  0DF4               	rlf	___wmul@multiplicand,f
  3332     07E3  0DF5               	rlf	___wmul@multiplicand+1,f
  3333     07E4  3EFF               	addlw	-1
  3334     07E5  1D03               	skipz
  3335     07E6  2FE1               	goto	u805
  3336     07E7                     l1630:
  3337     07E7  3001               	movlw	1
  3338     07E8                     u815:
  3339     07E8  1003               	clrc
  3340     07E9  0CF3               	rrf	___wmul@multiplier+1,f
  3341     07EA  0CF2               	rrf	___wmul@multiplier,f
  3342     07EB  3EFF               	addlw	-1
  3343     07EC  1D03               	skipz
  3344     07ED  2FE8               	goto	u815
  3345     07EE                     l1632:
  3346     07EE  0872               	movf	___wmul@multiplier,w
  3347     07EF  0473               	iorwf	___wmul@multiplier+1,w
  3348     07F0  1D03               	btfss	3,2
  3349     07F1  2FF3               	goto	u821
  3350     07F2  2FF4               	goto	u820
  3351     07F3                     u821:
  3352     07F3  2FD6               	goto	l1626
  3353     07F4                     u820:
  3354     07F4                     l1634:
  3355     07F4  0877               	movf	___wmul@product+1,w
  3356     07F5  00F3               	movwf	?___wmul+1
  3357     07F6  0876               	movf	___wmul@product,w
  3358     07F7  00F2               	movwf	?___wmul
  3359     07F8                     l434:
  3360     07F8  0008               	return
  3361     07F9                     __end_of___wmul:
  3362                           
  3363                           	psect	text11
  3364     0D03                     __ptext11:	
  3365 ;; *************** function _I2C_Master_RepeatedStart *****************
  3366 ;; Defined at:
  3367 ;;		line 47 in file "I2C.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, status,0, pclath, cstack
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3381 ;;      Params:         0       0       0       0       0
  3382 ;;      Locals:         0       0       0       0       0
  3383 ;;      Temps:          0       0       0       0       0
  3384 ;;      Totals:         0       0       0       0       0
  3385 ;;Total ram usage:        0 bytes
  3386 ;; Hardware stack levels used: 1
  3387 ;; Hardware stack levels required when called: 2
  3388 ;; This function calls:
  3389 ;;		_I2C_Master_Wait
  3390 ;; This function is called by:
  3391 ;;		_leer_seg
  3392 ;;		_leer_min
  3393 ;;		_leer_hora
  3394 ;;		_leer_dia
  3395 ;;		_leer_mes
  3396 ;;		_leer_anio
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400     0D03                     _I2C_Master_RepeatedStart:	
  3401                           ;psect for function _I2C_Master_RepeatedStart
  3402                           
  3403     0D03                     l1610:	
  3404                           ;incstack = 0
  3405                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3406                           
  3407                           
  3408                           ;I2C.c: 49:     I2C_Master_Wait();
  3409     0D03  120A  158A  2523  120A  158A  	fcall	_I2C_Master_Wait
  3410     0D08                     l1612:
  3411                           
  3412                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  3413     0D08  1683               	bsf	3,5	;RP0=1, select bank1
  3414     0D09  1303               	bcf	3,6	;RP1=0, select bank1
  3415     0D0A  1491               	bsf	17,1	;volatile
  3416     0D0B                     l210:
  3417     0D0B  0008               	return
  3418     0D0C                     __end_of_I2C_Master_RepeatedStart:
  3419                           
  3420                           	psect	text12
  3421     0D91                     __ptext12:	
  3422 ;; *************** function _I2C_Master_Read *****************
  3423 ;; Defined at:
  3424 ;;		line 74 in file "I2C.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  a               2    2[COMMON] unsigned short 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  temp            2    6[COMMON] unsigned short 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  2    2[COMMON] unsigned short 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2, status,0, pclath, cstack
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3438 ;;      Params:         2       0       0       0       0
  3439 ;;      Locals:         2       0       0       0       0
  3440 ;;      Temps:          2       0       0       0       0
  3441 ;;      Totals:         6       0       0       0       0
  3442 ;;Total ram usage:        6 bytes
  3443 ;; Hardware stack levels used: 1
  3444 ;; Hardware stack levels required when called: 2
  3445 ;; This function calls:
  3446 ;;		_I2C_Master_Wait
  3447 ;; This function is called by:
  3448 ;;		_main
  3449 ;;		_leer_seg
  3450 ;;		_leer_min
  3451 ;;		_leer_hora
  3452 ;;		_leer_dia
  3453 ;;		_leer_mes
  3454 ;;		_leer_anio
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458     0D91                     _I2C_Master_Read:	
  3459                           ;psect for function _I2C_Master_Read
  3460                           
  3461     0D91                     l1558:	
  3462                           ;incstack = 0
  3463                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3464                           
  3465                           
  3466                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3467     0D91  120A  158A  2523  120A  158A  	fcall	_I2C_Master_Wait
  3468     0D96                     l1560:
  3469                           
  3470                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3471     0D96  1683               	bsf	3,5	;RP0=1, select bank1
  3472     0D97  1303               	bcf	3,6	;RP1=0, select bank1
  3473     0D98  1591               	bsf	17,3	;volatile
  3474                           
  3475                           ;I2C.c: 79:     I2C_Master_Wait();
  3476     0D99  120A  158A  2523  120A  158A  	fcall	_I2C_Master_Wait
  3477     0D9E                     l1562:
  3478                           
  3479                           ;I2C.c: 80:     temp = SSPBUF;
  3480     0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  3481     0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  3482     0DA0  0813               	movf	19,w	;volatile
  3483     0DA1  00F4               	movwf	??_I2C_Master_Read
  3484     0DA2  01F5               	clrf	??_I2C_Master_Read+1
  3485     0DA3  0874               	movf	??_I2C_Master_Read,w
  3486     0DA4  00F6               	movwf	I2C_Master_Read@temp
  3487     0DA5  0875               	movf	??_I2C_Master_Read+1,w
  3488     0DA6  00F7               	movwf	I2C_Master_Read@temp+1
  3489     0DA7                     l1564:
  3490                           
  3491                           ;I2C.c: 81:     I2C_Master_Wait();
  3492     0DA7  120A  158A  2523  120A  158A  	fcall	_I2C_Master_Wait
  3493     0DAC                     l1566:
  3494                           
  3495                           ;I2C.c: 82:     if(a == 1){
  3496     0DAC  0372               	decf	I2C_Master_Read@a,w
  3497     0DAD  0473               	iorwf	I2C_Master_Read@a+1,w
  3498     0DAE  1D03               	btfss	3,2
  3499     0DAF  2DB1               	goto	u761
  3500     0DB0  2DB2               	goto	u760
  3501     0DB1                     u761:
  3502     0DB1  2DB6               	goto	l219
  3503     0DB2                     u760:
  3504     0DB2                     l1568:
  3505                           
  3506                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3507     0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  3508     0DB3  1303               	bcf	3,6	;RP1=0, select bank1
  3509     0DB4  1291               	bcf	17,5	;volatile
  3510                           
  3511                           ;I2C.c: 84:     }else{
  3512     0DB5  2DB9               	goto	l220
  3513     0DB6                     l219:
  3514                           
  3515                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3516     0DB6  1683               	bsf	3,5	;RP0=1, select bank1
  3517     0DB7  1303               	bcf	3,6	;RP1=0, select bank1
  3518     0DB8  1691               	bsf	17,5	;volatile
  3519     0DB9                     l220:	
  3520                           ;I2C.c: 86:     }
  3521                           
  3522                           
  3523                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3524     0DB9  1611               	bsf	17,4	;volatile
  3525     0DBA                     l1570:
  3526                           
  3527                           ;I2C.c: 88:     return temp;
  3528     0DBA  0877               	movf	I2C_Master_Read@temp+1,w
  3529     0DBB  00F3               	movwf	?_I2C_Master_Read+1
  3530     0DBC  0876               	movf	I2C_Master_Read@temp,w
  3531     0DBD  00F2               	movwf	?_I2C_Master_Read
  3532     0DBE                     l221:
  3533     0DBE  0008               	return
  3534     0DBF                     __end_of_I2C_Master_Read:
  3535                           
  3536                           	psect	text13
  3537     0E5A                     __ptext13:	
  3538 ;; *************** function _enviar_fecha *****************
  3539 ;; Defined at:
  3540 ;;		line 94 in file "DS3232.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0, pclath, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3554 ;;      Params:         0       0       0       0       0
  3555 ;;      Locals:         0       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0
  3557 ;;      Totals:         0       0       0       0       0
  3558 ;;Total ram usage:        0 bytes
  3559 ;; Hardware stack levels used: 1
  3560 ;; Hardware stack levels required when called: 3
  3561 ;; This function calls:
  3562 ;;		_I2C_Master_Start
  3563 ;;		_I2C_Master_Stop
  3564 ;;		_I2C_Master_Write
  3565 ;; This function is called by:
  3566 ;;		_main
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570     0E5A                     _enviar_fecha:	
  3571                           ;psect for function _enviar_fecha
  3572                           
  3573     0E5A                     l1750:	
  3574                           ;incstack = 0
  3575                           ; Regs used in _enviar_fecha: [wreg+status,2+status,0+pclath+cstack]
  3576                           
  3577                           
  3578                           ;DS3232.c: 96:     I2C_Master_Start();
  3579     0E5A  120A  158A  24F1  120A  158A  	fcall	_I2C_Master_Start
  3580                           
  3581                           ;DS3232.c: 97:     I2C_Master_Write(0xD0);
  3582     0E5F  30D0               	movlw	208
  3583     0E60  00F2               	movwf	I2C_Master_Write@d
  3584     0E61  3000               	movlw	0
  3585     0E62  00F3               	movwf	I2C_Master_Write@d+1
  3586     0E63  120A  158A  250C  120A  158A  	fcall	_I2C_Master_Write
  3587                           
  3588                           ;DS3232.c: 98:     I2C_Master_Write(0x04);
  3589     0E68  3004               	movlw	4
  3590     0E69  00F2               	movwf	I2C_Master_Write@d
  3591     0E6A  3000               	movlw	0
  3592     0E6B  00F3               	movwf	I2C_Master_Write@d+1
  3593     0E6C  120A  158A  250C  120A  158A  	fcall	_I2C_Master_Write
  3594                           
  3595                           ;DS3232.c: 99:     I2C_Master_Write(dia);
  3596     0E71  1283               	bcf	3,5	;RP0=0, select bank0
  3597     0E72  1303               	bcf	3,6	;RP1=0, select bank0
  3598     0E73  0827               	movf	_dia+1,w
  3599     0E74  00F3               	movwf	I2C_Master_Write@d+1
  3600     0E75  0826               	movf	_dia,w
  3601     0E76  00F2               	movwf	I2C_Master_Write@d
  3602     0E77  120A  158A  250C  120A  158A  	fcall	_I2C_Master_Write
  3603                           
  3604                           ;DS3232.c: 100:     I2C_Master_Write(mes);
  3605     0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  3606     0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  3607     0E7E  0825               	movf	_mes+1,w
  3608     0E7F  00F3               	movwf	I2C_Master_Write@d+1
  3609     0E80  0824               	movf	_mes,w
  3610     0E81  00F2               	movwf	I2C_Master_Write@d
  3611     0E82  120A  158A  250C  120A  158A  	fcall	_I2C_Master_Write
  3612                           
  3613                           ;DS3232.c: 101:     I2C_Master_Write(anio);
  3614     0E87  1283               	bcf	3,5	;RP0=0, select bank0
  3615     0E88  1303               	bcf	3,6	;RP1=0, select bank0
  3616     0E89  0823               	movf	_anio+1,w
  3617     0E8A  00F3               	movwf	I2C_Master_Write@d+1
  3618     0E8B  0822               	movf	_anio,w
  3619     0E8C  00F2               	movwf	I2C_Master_Write@d
  3620     0E8D  120A  158A  250C  120A  158A  	fcall	_I2C_Master_Write
  3621                           
  3622                           ;DS3232.c: 102:     I2C_Master_Stop();
  3623     0E92  120A  158A  24FA  120A  158A  	fcall	_I2C_Master_Stop
  3624     0E97                     l346:
  3625     0E97  0008               	return
  3626     0E98                     __end_of_enviar_fecha:
  3627                           
  3628                           	psect	text14
  3629     0D0C                     __ptext14:	
  3630 ;; *************** function _I2C_Master_Write *****************
  3631 ;; Defined at:
  3632 ;;		line 65 in file "I2C.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;  d               2    2[COMMON] unsigned int 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;		None
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0, pclath, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3646 ;;      Params:         2       0       0       0       0
  3647 ;;      Locals:         0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0
  3649 ;;      Totals:         2       0       0       0       0
  3650 ;;Total ram usage:        2 bytes
  3651 ;; Hardware stack levels used: 1
  3652 ;; Hardware stack levels required when called: 2
  3653 ;; This function calls:
  3654 ;;		_I2C_Master_Wait
  3655 ;; This function is called by:
  3656 ;;		_main
  3657 ;;		_leer_seg
  3658 ;;		_leer_min
  3659 ;;		_leer_hora
  3660 ;;		_leer_dia
  3661 ;;		_leer_mes
  3662 ;;		_leer_anio
  3663 ;;		_enviar_fecha
  3664 ;;		_enviar_hora
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668     0D0C                     _I2C_Master_Write:	
  3669                           ;psect for function _I2C_Master_Write
  3670                           
  3671     0D0C                     l1554:	
  3672                           ;incstack = 0
  3673                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3674                           
  3675                           
  3676                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3677     0D0C  120A  158A  2523  120A  158A  	fcall	_I2C_Master_Wait
  3678     0D11                     l1556:
  3679                           
  3680                           ;I2C.c: 68:     SSPBUF = d;
  3681     0D11  0872               	movf	I2C_Master_Write@d,w
  3682     0D12  1283               	bcf	3,5	;RP0=0, select bank0
  3683     0D13  1303               	bcf	3,6	;RP1=0, select bank0
  3684     0D14  0093               	movwf	19	;volatile
  3685     0D15                     l216:
  3686     0D15  0008               	return
  3687     0D16                     __end_of_I2C_Master_Write:
  3688                           
  3689                           	psect	text15
  3690     0CFA                     __ptext15:	
  3691 ;; *************** function _I2C_Master_Stop *****************
  3692 ;; Defined at:
  3693 ;;		line 55 in file "I2C.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;		None
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;		None
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      void 
  3700 ;; Registers used:
  3701 ;;		wreg, status,2, status,0, pclath, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3707 ;;      Params:         0       0       0       0       0
  3708 ;;      Locals:         0       0       0       0       0
  3709 ;;      Temps:          0       0       0       0       0
  3710 ;;      Totals:         0       0       0       0       0
  3711 ;;Total ram usage:        0 bytes
  3712 ;; Hardware stack levels used: 1
  3713 ;; Hardware stack levels required when called: 2
  3714 ;; This function calls:
  3715 ;;		_I2C_Master_Wait
  3716 ;; This function is called by:
  3717 ;;		_main
  3718 ;;		_leer_seg
  3719 ;;		_leer_min
  3720 ;;		_leer_hora
  3721 ;;		_leer_dia
  3722 ;;		_leer_mes
  3723 ;;		_leer_anio
  3724 ;;		_enviar_fecha
  3725 ;;		_enviar_hora
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729     0CFA                     _I2C_Master_Stop:	
  3730                           ;psect for function _I2C_Master_Stop
  3731                           
  3732     0CFA                     l1574:	
  3733                           ;incstack = 0
  3734                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3735                           
  3736                           
  3737                           ;I2C.c: 57:     I2C_Master_Wait();
  3738     0CFA  120A  158A  2523  120A  158A  	fcall	_I2C_Master_Wait
  3739     0CFF                     l1576:
  3740                           
  3741                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3742     0CFF  1683               	bsf	3,5	;RP0=1, select bank1
  3743     0D00  1303               	bcf	3,6	;RP1=0, select bank1
  3744     0D01  1511               	bsf	17,2	;volatile
  3745     0D02                     l213:
  3746     0D02  0008               	return
  3747     0D03                     __end_of_I2C_Master_Stop:
  3748                           
  3749                           	psect	text16
  3750     0CF1                     __ptext16:	
  3751 ;; *************** function _I2C_Master_Start *****************
  3752 ;; Defined at:
  3753 ;;		line 39 in file "I2C.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;		None
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;		None
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg, status,2, status,0, pclath, cstack
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3767 ;;      Params:         0       0       0       0       0
  3768 ;;      Locals:         0       0       0       0       0
  3769 ;;      Temps:          0       0       0       0       0
  3770 ;;      Totals:         0       0       0       0       0
  3771 ;;Total ram usage:        0 bytes
  3772 ;; Hardware stack levels used: 1
  3773 ;; Hardware stack levels required when called: 2
  3774 ;; This function calls:
  3775 ;;		_I2C_Master_Wait
  3776 ;; This function is called by:
  3777 ;;		_main
  3778 ;;		_leer_seg
  3779 ;;		_leer_min
  3780 ;;		_leer_hora
  3781 ;;		_leer_dia
  3782 ;;		_leer_mes
  3783 ;;		_leer_anio
  3784 ;;		_enviar_fecha
  3785 ;;		_enviar_hora
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789     0CF1                     _I2C_Master_Start:	
  3790                           ;psect for function _I2C_Master_Start
  3791                           
  3792     0CF1                     l1550:	
  3793                           ;incstack = 0
  3794                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3795                           
  3796                           
  3797                           ;I2C.c: 41:     I2C_Master_Wait();
  3798     0CF1  120A  158A  2523  120A  158A  	fcall	_I2C_Master_Wait
  3799     0CF6                     l1552:
  3800                           
  3801                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3802     0CF6  1683               	bsf	3,5	;RP0=1, select bank1
  3803     0CF7  1303               	bcf	3,6	;RP1=0, select bank1
  3804     0CF8  1411               	bsf	17,0	;volatile
  3805     0CF9                     l207:
  3806     0CF9  0008               	return
  3807     0CFA                     __end_of_I2C_Master_Start:
  3808                           
  3809                           	psect	text17
  3810     0D23                     __ptext17:	
  3811 ;; *************** function _I2C_Master_Wait *****************
  3812 ;; Defined at:
  3813 ;;		line 32 in file "I2C.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;		None
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      void 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3827 ;;      Params:         0       0       0       0       0
  3828 ;;      Locals:         0       0       0       0       0
  3829 ;;      Temps:          0       0       0       0       0
  3830 ;;      Totals:         0       0       0       0       0
  3831 ;;Total ram usage:        0 bytes
  3832 ;; Hardware stack levels used: 1
  3833 ;; Hardware stack levels required when called: 1
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		_I2C_Master_Start
  3838 ;;		_I2C_Master_RepeatedStart
  3839 ;;		_I2C_Master_Stop
  3840 ;;		_I2C_Master_Write
  3841 ;;		_I2C_Master_Read
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845     0D23                     _I2C_Master_Wait:	
  3846                           ;psect for function _I2C_Master_Wait
  3847                           
  3848     0D23                     l1512:	
  3849                           ;incstack = 0
  3850                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3851                           
  3852     0D23                     l201:	
  3853                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3854                           
  3855     0D23  1683               	bsf	3,5	;RP0=1, select bank1
  3856     0D24  1303               	bcf	3,6	;RP1=0, select bank1
  3857     0D25  1914               	btfsc	20,2	;volatile
  3858     0D26  2D28               	goto	u631
  3859     0D27  2D29               	goto	u630
  3860     0D28                     u631:
  3861     0D28  2D23               	goto	l201
  3862     0D29                     u630:
  3863     0D29                     l1514:
  3864     0D29  0811               	movf	17,w	;volatile
  3865     0D2A  391F               	andlw	31
  3866     0D2B  1D03               	btfss	3,2
  3867     0D2C  2D2E               	goto	u641
  3868     0D2D  2D2F               	goto	u640
  3869     0D2E                     u641:
  3870     0D2E  2D23               	goto	l201
  3871     0D2F                     u640:
  3872     0D2F                     l204:
  3873     0D2F  0008               	return
  3874     0D30                     __end_of_I2C_Master_Wait:
  3875                           
  3876                           	psect	text18
  3877     0EE4                     __ptext18:	
  3878 ;; *************** function ___awmod *****************
  3879 ;; Defined at:
  3880 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  divisor         2    4[BANK0 ] int 
  3883 ;;  dividend        2    6[BANK0 ] int 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  sign            1    9[COMMON] unsigned char 
  3886 ;;  counter         1    8[COMMON] unsigned char 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  2    4[BANK0 ] int 
  3889 ;; Registers used:
  3890 ;;		wreg, status,2, status,0
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3896 ;;      Params:         0       4       0       0       0
  3897 ;;      Locals:         2       0       0       0       0
  3898 ;;      Temps:          1       0       0       0       0
  3899 ;;      Totals:         3       4       0       0       0
  3900 ;;Total ram usage:        7 bytes
  3901 ;; Hardware stack levels used: 1
  3902 ;; Hardware stack levels required when called: 1
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_main
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910     0EE4                     ___awmod:	
  3911                           ;psect for function ___awmod
  3912                           
  3913     0EE4                     l2280:	
  3914                           ;incstack = 0
  3915                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3916                           
  3917     0EE4  01F9               	clrf	___awmod@sign
  3918     0EE5                     l2282:
  3919     0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  3920     0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  3921     0EE7  1FC6               	btfss	___awmod@dividend+1,7
  3922     0EE8  2EEA               	goto	u1521
  3923     0EE9  2EEB               	goto	u1520
  3924     0EEA                     u1521:
  3925     0EEA  2EF2               	goto	l2288
  3926     0EEB                     u1520:
  3927     0EEB                     l2284:
  3928     0EEB  09C5               	comf	___awmod@dividend,f
  3929     0EEC  09C6               	comf	___awmod@dividend+1,f
  3930     0EED  0AC5               	incf	___awmod@dividend,f
  3931     0EEE  1903               	skipnz
  3932     0EEF  0AC6               	incf	___awmod@dividend+1,f
  3933     0EF0                     l2286:
  3934     0EF0  01F9               	clrf	___awmod@sign
  3935     0EF1  0AF9               	incf	___awmod@sign,f
  3936     0EF2                     l2288:
  3937     0EF2  1FC4               	btfss	___awmod@divisor+1,7
  3938     0EF3  2EF5               	goto	u1531
  3939     0EF4  2EF6               	goto	u1530
  3940     0EF5                     u1531:
  3941     0EF5  2EFB               	goto	l2292
  3942     0EF6                     u1530:
  3943     0EF6                     l2290:
  3944     0EF6  09C3               	comf	___awmod@divisor,f
  3945     0EF7  09C4               	comf	___awmod@divisor+1,f
  3946     0EF8  0AC3               	incf	___awmod@divisor,f
  3947     0EF9  1903               	skipnz
  3948     0EFA  0AC4               	incf	___awmod@divisor+1,f
  3949     0EFB                     l2292:
  3950     0EFB  0843               	movf	___awmod@divisor,w
  3951     0EFC  0444               	iorwf	___awmod@divisor+1,w
  3952     0EFD  1903               	btfsc	3,2
  3953     0EFE  2F00               	goto	u1541
  3954     0EFF  2F01               	goto	u1540
  3955     0F00                     u1541:
  3956     0F00  2F30               	goto	l2310
  3957     0F01                     u1540:
  3958     0F01                     l2294:
  3959     0F01  01F8               	clrf	___awmod@counter
  3960     0F02  0AF8               	incf	___awmod@counter,f
  3961     0F03  2F0F               	goto	l2300
  3962     0F04                     l2296:
  3963     0F04  3001               	movlw	1
  3964     0F05                     u1555:
  3965     0F05  1003               	clrc
  3966     0F06  0DC3               	rlf	___awmod@divisor,f
  3967     0F07  0DC4               	rlf	___awmod@divisor+1,f
  3968     0F08  3EFF               	addlw	-1
  3969     0F09  1D03               	skipz
  3970     0F0A  2F05               	goto	u1555
  3971     0F0B                     l2298:
  3972     0F0B  3001               	movlw	1
  3973     0F0C  00F7               	movwf	??___awmod
  3974     0F0D  0877               	movf	??___awmod,w
  3975     0F0E  07F8               	addwf	___awmod@counter,f
  3976     0F0F                     l2300:
  3977     0F0F  1FC4               	btfss	___awmod@divisor+1,7
  3978     0F10  2F12               	goto	u1561
  3979     0F11  2F13               	goto	u1560
  3980     0F12                     u1561:
  3981     0F12  2F04               	goto	l2296
  3982     0F13                     u1560:
  3983     0F13                     l2302:
  3984     0F13  0844               	movf	___awmod@divisor+1,w
  3985     0F14  0246               	subwf	___awmod@dividend+1,w
  3986     0F15  1D03               	skipz
  3987     0F16  2F19               	goto	u1575
  3988     0F17  0843               	movf	___awmod@divisor,w
  3989     0F18  0245               	subwf	___awmod@dividend,w
  3990     0F19                     u1575:
  3991     0F19  1C03               	skipc
  3992     0F1A  2F1C               	goto	u1571
  3993     0F1B  2F1D               	goto	u1570
  3994     0F1C                     u1571:
  3995     0F1C  2F23               	goto	l2306
  3996     0F1D                     u1570:
  3997     0F1D                     l2304:
  3998     0F1D  0843               	movf	___awmod@divisor,w
  3999     0F1E  02C5               	subwf	___awmod@dividend,f
  4000     0F1F  0844               	movf	___awmod@divisor+1,w
  4001     0F20  1C03               	skipc
  4002     0F21  03C6               	decf	___awmod@dividend+1,f
  4003     0F22  02C6               	subwf	___awmod@dividend+1,f
  4004     0F23                     l2306:
  4005     0F23  3001               	movlw	1
  4006     0F24                     u1585:
  4007     0F24  1003               	clrc
  4008     0F25  0CC4               	rrf	___awmod@divisor+1,f
  4009     0F26  0CC3               	rrf	___awmod@divisor,f
  4010     0F27  3EFF               	addlw	-1
  4011     0F28  1D03               	skipz
  4012     0F29  2F24               	goto	u1585
  4013     0F2A                     l2308:
  4014     0F2A  3001               	movlw	1
  4015     0F2B  02F8               	subwf	___awmod@counter,f
  4016     0F2C  1D03               	btfss	3,2
  4017     0F2D  2F2F               	goto	u1591
  4018     0F2E  2F30               	goto	u1590
  4019     0F2F                     u1591:
  4020     0F2F  2F13               	goto	l2302
  4021     0F30                     u1590:
  4022     0F30                     l2310:
  4023     0F30  0879               	movf	___awmod@sign,w
  4024     0F31  1903               	btfsc	3,2
  4025     0F32  2F34               	goto	u1601
  4026     0F33  2F35               	goto	u1600
  4027     0F34                     u1601:
  4028     0F34  2F3A               	goto	l2314
  4029     0F35                     u1600:
  4030     0F35                     l2312:
  4031     0F35  09C5               	comf	___awmod@dividend,f
  4032     0F36  09C6               	comf	___awmod@dividend+1,f
  4033     0F37  0AC5               	incf	___awmod@dividend,f
  4034     0F38  1903               	skipnz
  4035     0F39  0AC6               	incf	___awmod@dividend+1,f
  4036     0F3A                     l2314:
  4037     0F3A  0846               	movf	___awmod@dividend+1,w
  4038     0F3B  00C4               	movwf	?___awmod+1
  4039     0F3C  0845               	movf	___awmod@dividend,w
  4040     0F3D  00C3               	movwf	?___awmod
  4041     0F3E                     l598:
  4042     0F3E  0008               	return
  4043     0F3F                     __end_of___awmod:
  4044                           
  4045                           	psect	text19
  4046     050A                     __ptext19:	
  4047 ;; *************** function ___awdiv *****************
  4048 ;; Defined at:
  4049 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  divisor         2    2[COMMON] int 
  4052 ;;  dividend        2    4[COMMON] int 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  quotient        2    2[BANK0 ] int 
  4055 ;;  sign            1    1[BANK0 ] unsigned char 
  4056 ;;  counter         1    0[BANK0 ] unsigned char 
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  2    2[COMMON] int 
  4059 ;; Registers used:
  4060 ;;		wreg, status,2, status,0
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4066 ;;      Params:         4       0       0       0       0
  4067 ;;      Locals:         0       4       0       0       0
  4068 ;;      Temps:          1       0       0       0       0
  4069 ;;      Totals:         5       4       0       0       0
  4070 ;;Total ram usage:        9 bytes
  4071 ;; Hardware stack levels used: 1
  4072 ;; Hardware stack levels required when called: 1
  4073 ;; This function calls:
  4074 ;;		Nothing
  4075 ;; This function is called by:
  4076 ;;		_main
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080     050A                     ___awdiv:	
  4081                           ;psect for function ___awdiv
  4082                           
  4083     050A                     l2236:	
  4084                           ;incstack = 0
  4085                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4086                           
  4087     050A  1283               	bcf	3,5	;RP0=0, select bank0
  4088     050B  1303               	bcf	3,6	;RP1=0, select bank0
  4089     050C  01C0               	clrf	___awdiv@sign
  4090     050D                     l2238:
  4091     050D  1FF3               	btfss	___awdiv@divisor+1,7
  4092     050E  2D10               	goto	u1421
  4093     050F  2D11               	goto	u1420
  4094     0510                     u1421:
  4095     0510  2D18               	goto	l2244
  4096     0511                     u1420:
  4097     0511                     l2240:
  4098     0511  09F2               	comf	___awdiv@divisor,f
  4099     0512  09F3               	comf	___awdiv@divisor+1,f
  4100     0513  0AF2               	incf	___awdiv@divisor,f
  4101     0514  1903               	skipnz
  4102     0515  0AF3               	incf	___awdiv@divisor+1,f
  4103     0516                     l2242:
  4104     0516  01C0               	clrf	___awdiv@sign
  4105     0517  0AC0               	incf	___awdiv@sign,f
  4106     0518                     l2244:
  4107     0518  1FF5               	btfss	___awdiv@dividend+1,7
  4108     0519  2D1B               	goto	u1431
  4109     051A  2D1C               	goto	u1430
  4110     051B                     u1431:
  4111     051B  2D25               	goto	l2250
  4112     051C                     u1430:
  4113     051C                     l2246:
  4114     051C  09F4               	comf	___awdiv@dividend,f
  4115     051D  09F5               	comf	___awdiv@dividend+1,f
  4116     051E  0AF4               	incf	___awdiv@dividend,f
  4117     051F  1903               	skipnz
  4118     0520  0AF5               	incf	___awdiv@dividend+1,f
  4119     0521                     l2248:
  4120     0521  3001               	movlw	1
  4121     0522  00F6               	movwf	??___awdiv
  4122     0523  0876               	movf	??___awdiv,w
  4123     0524  06C0               	xorwf	___awdiv@sign,f
  4124     0525                     l2250:
  4125     0525  01C1               	clrf	___awdiv@quotient
  4126     0526  01C2               	clrf	___awdiv@quotient+1
  4127     0527                     l2252:
  4128     0527  0872               	movf	___awdiv@divisor,w
  4129     0528  0473               	iorwf	___awdiv@divisor+1,w
  4130     0529  1903               	btfsc	3,2
  4131     052A  2D2C               	goto	u1441
  4132     052B  2D2D               	goto	u1440
  4133     052C                     u1441:
  4134     052C  2D64               	goto	l2272
  4135     052D                     u1440:
  4136     052D                     l2254:
  4137     052D  01BF               	clrf	___awdiv@counter
  4138     052E  0ABF               	incf	___awdiv@counter,f
  4139     052F  2D3B               	goto	l2260
  4140     0530                     l2256:
  4141     0530  3001               	movlw	1
  4142     0531                     u1455:
  4143     0531  1003               	clrc
  4144     0532  0DF2               	rlf	___awdiv@divisor,f
  4145     0533  0DF3               	rlf	___awdiv@divisor+1,f
  4146     0534  3EFF               	addlw	-1
  4147     0535  1D03               	skipz
  4148     0536  2D31               	goto	u1455
  4149     0537                     l2258:
  4150     0537  3001               	movlw	1
  4151     0538  00F6               	movwf	??___awdiv
  4152     0539  0876               	movf	??___awdiv,w
  4153     053A  07BF               	addwf	___awdiv@counter,f
  4154     053B                     l2260:
  4155     053B  1FF3               	btfss	___awdiv@divisor+1,7
  4156     053C  2D3E               	goto	u1461
  4157     053D  2D3F               	goto	u1460
  4158     053E                     u1461:
  4159     053E  2D30               	goto	l2256
  4160     053F                     u1460:
  4161     053F                     l2262:
  4162     053F  3001               	movlw	1
  4163     0540                     u1475:
  4164     0540  1003               	clrc
  4165     0541  0DC1               	rlf	___awdiv@quotient,f
  4166     0542  0DC2               	rlf	___awdiv@quotient+1,f
  4167     0543  3EFF               	addlw	-1
  4168     0544  1D03               	skipz
  4169     0545  2D40               	goto	u1475
  4170     0546  0873               	movf	___awdiv@divisor+1,w
  4171     0547  0275               	subwf	___awdiv@dividend+1,w
  4172     0548  1D03               	skipz
  4173     0549  2D4C               	goto	u1485
  4174     054A  0872               	movf	___awdiv@divisor,w
  4175     054B  0274               	subwf	___awdiv@dividend,w
  4176     054C                     u1485:
  4177     054C  1C03               	skipc
  4178     054D  2D4F               	goto	u1481
  4179     054E  2D50               	goto	u1480
  4180     054F                     u1481:
  4181     054F  2D57               	goto	l2268
  4182     0550                     u1480:
  4183     0550                     l2264:
  4184     0550  0872               	movf	___awdiv@divisor,w
  4185     0551  02F4               	subwf	___awdiv@dividend,f
  4186     0552  0873               	movf	___awdiv@divisor+1,w
  4187     0553  1C03               	skipc
  4188     0554  03F5               	decf	___awdiv@dividend+1,f
  4189     0555  02F5               	subwf	___awdiv@dividend+1,f
  4190     0556                     l2266:
  4191     0556  1441               	bsf	___awdiv@quotient,0
  4192     0557                     l2268:
  4193     0557  3001               	movlw	1
  4194     0558                     u1495:
  4195     0558  1003               	clrc
  4196     0559  0CF3               	rrf	___awdiv@divisor+1,f
  4197     055A  0CF2               	rrf	___awdiv@divisor,f
  4198     055B  3EFF               	addlw	-1
  4199     055C  1D03               	skipz
  4200     055D  2D58               	goto	u1495
  4201     055E                     l2270:
  4202     055E  3001               	movlw	1
  4203     055F  02BF               	subwf	___awdiv@counter,f
  4204     0560  1D03               	btfss	3,2
  4205     0561  2D63               	goto	u1501
  4206     0562  2D64               	goto	u1500
  4207     0563                     u1501:
  4208     0563  2D3F               	goto	l2262
  4209     0564                     u1500:
  4210     0564                     l2272:
  4211     0564  0840               	movf	___awdiv@sign,w
  4212     0565  1903               	btfsc	3,2
  4213     0566  2D68               	goto	u1511
  4214     0567  2D69               	goto	u1510
  4215     0568                     u1511:
  4216     0568  2D6E               	goto	l2276
  4217     0569                     u1510:
  4218     0569                     l2274:
  4219     0569  09C1               	comf	___awdiv@quotient,f
  4220     056A  09C2               	comf	___awdiv@quotient+1,f
  4221     056B  0AC1               	incf	___awdiv@quotient,f
  4222     056C  1903               	skipnz
  4223     056D  0AC2               	incf	___awdiv@quotient+1,f
  4224     056E                     l2276:
  4225     056E  0842               	movf	___awdiv@quotient+1,w
  4226     056F  00F3               	movwf	?___awdiv+1
  4227     0570  0841               	movf	___awdiv@quotient,w
  4228     0571  00F2               	movwf	?___awdiv
  4229     0572                     l585:
  4230     0572  0008               	return
  4231     0573                     __end_of___awdiv:
  4232                           
  4233                           	psect	text20
  4234     0D6C                     __ptext20:	
  4235 ;; *************** function _Lcd_Write_String *****************
  4236 ;; Defined at:
  4237 ;;		line 98 in file "LCD.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  a               1    wreg     PTR unsigned char 
  4240 ;;		 -> STR_3(3), STR_2(3), STR_1(4), 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  a               1    9[COMMON] PTR unsigned char 
  4243 ;;		 -> STR_3(3), STR_2(3), STR_1(4), 
  4244 ;;  i               2    7[COMMON] int 
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      void 
  4247 ;; Registers used:
  4248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4254 ;;      Params:         0       0       0       0       0
  4255 ;;      Locals:         3       0       0       0       0
  4256 ;;      Temps:          0       0       0       0       0
  4257 ;;      Totals:         3       0       0       0       0
  4258 ;;Total ram usage:        3 bytes
  4259 ;; Hardware stack levels used: 1
  4260 ;; Hardware stack levels required when called: 3
  4261 ;; This function calls:
  4262 ;;		_Lcd_Write_Char
  4263 ;; This function is called by:
  4264 ;;		_main
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268     0D6C                     _Lcd_Write_String:	
  4269                           ;psect for function _Lcd_Write_String
  4270                           
  4271                           
  4272                           ;incstack = 0
  4273                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4274                           ;Lcd_Write_String@a stored from wreg
  4275     0D6C  00F9               	movwf	Lcd_Write_String@a
  4276     0D6D                     l2192:
  4277                           
  4278                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  4279     0D6D  01F7               	clrf	Lcd_Write_String@i
  4280     0D6E  01F8               	clrf	Lcd_Write_String@i+1
  4281     0D6F  2D83               	goto	l2198
  4282     0D70                     l2194:
  4283                           
  4284                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  4285     0D70  0877               	movf	Lcd_Write_String@i,w
  4286     0D71  0779               	addwf	Lcd_Write_String@a,w
  4287     0D72  0084               	movwf	4
  4288     0D73  120A  158A  2000  120A  158A  	fcall	stringdir
  4289     0D78  120A  158A  25ED  120A  158A  	fcall	_Lcd_Write_Char
  4290     0D7D                     l2196:
  4291     0D7D  3001               	movlw	1
  4292     0D7E  07F7               	addwf	Lcd_Write_String@i,f
  4293     0D7F  1803               	skipnc
  4294     0D80  0AF8               	incf	Lcd_Write_String@i+1,f
  4295     0D81  3000               	movlw	0
  4296     0D82  07F8               	addwf	Lcd_Write_String@i+1,f
  4297     0D83                     l2198:
  4298     0D83  0877               	movf	Lcd_Write_String@i,w
  4299     0D84  0779               	addwf	Lcd_Write_String@a,w
  4300     0D85  0084               	movwf	4
  4301     0D86  120A  158A  2000  120A  158A  	fcall	stringdir
  4302     0D8B  3A00               	xorlw	0
  4303     0D8C  1D03               	skipz
  4304     0D8D  2D8F               	goto	u1411
  4305     0D8E  2D90               	goto	u1410
  4306     0D8F                     u1411:
  4307     0D8F  2D70               	goto	l2194
  4308     0D90                     u1410:
  4309     0D90                     l294:
  4310     0D90  0008               	return
  4311     0D91                     __end_of_Lcd_Write_String:
  4312                           
  4313                           	psect	text21
  4314     0DED                     __ptext21:	
  4315 ;; *************** function _Lcd_Write_Char *****************
  4316 ;; Defined at:
  4317 ;;		line 83 in file "LCD.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  a               1    wreg     unsigned char 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  a               1    6[COMMON] unsigned char 
  4322 ;;  y               1    5[COMMON] unsigned char 
  4323 ;;  temp            1    4[COMMON] unsigned char 
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      void 
  4326 ;; Registers used:
  4327 ;;		wreg, status,2, status,0, pclath, cstack
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4333 ;;      Params:         0       0       0       0       0
  4334 ;;      Locals:         3       0       0       0       0
  4335 ;;      Temps:          1       0       0       0       0
  4336 ;;      Totals:         4       0       0       0       0
  4337 ;;Total ram usage:        4 bytes
  4338 ;; Hardware stack levels used: 1
  4339 ;; Hardware stack levels required when called: 2
  4340 ;; This function calls:
  4341 ;;		_Lcd_Port
  4342 ;; This function is called by:
  4343 ;;		_main
  4344 ;;		_Lcd_Write_String
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348     0DED                     _Lcd_Write_Char:	
  4349                           ;psect for function _Lcd_Write_Char
  4350                           
  4351                           
  4352                           ;incstack = 0
  4353                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4354                           ;Lcd_Write_Char@a stored from wreg
  4355     0DED  00F6               	movwf	Lcd_Write_Char@a
  4356     0DEE                     l2082:
  4357                           
  4358                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  4359     0DEE  0876               	movf	Lcd_Write_Char@a,w
  4360     0DEF  390F               	andlw	15
  4361     0DF0  00F4               	movwf	Lcd_Write_Char@temp
  4362                           
  4363                           ;LCD.c: 86:     y = a & 0xF0;
  4364     0DF1  0876               	movf	Lcd_Write_Char@a,w
  4365     0DF2  39F0               	andlw	240
  4366     0DF3  00F5               	movwf	Lcd_Write_Char@y
  4367     0DF4                     l2084:
  4368                           
  4369                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  4370     0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  4371     0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  4372     0DF6  1508               	bsf	8,2	;volatile
  4373     0DF7                     l2086:
  4374                           
  4375                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  4376     0DF7  0875               	movf	Lcd_Write_Char@y,w
  4377     0DF8  00F3               	movwf	??_Lcd_Write_Char
  4378     0DF9  3004               	movlw	4
  4379     0DFA                     u1355:
  4380     0DFA  1003               	clrc
  4381     0DFB  0CF3               	rrf	??_Lcd_Write_Char,f
  4382     0DFC  3EFF               	addlw	-1
  4383     0DFD  1D03               	skipz
  4384     0DFE  2DFA               	goto	u1355
  4385     0DFF  0873               	movf	??_Lcd_Write_Char,w
  4386     0E00  120A  158A  254A  120A  158A  	fcall	_Lcd_Port
  4387     0E05                     l2088:
  4388                           
  4389                           ;LCD.c: 89:     RD3 = 1;
  4390     0E05  1283               	bcf	3,5	;RP0=0, select bank0
  4391     0E06  1303               	bcf	3,6	;RP1=0, select bank0
  4392     0E07  1588               	bsf	8,3	;volatile
  4393     0E08                     l2090:
  4394                           
  4395                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4396     0E08  301A               	movlw	26
  4397     0E09  00F3               	movwf	??_Lcd_Write_Char
  4398     0E0A                     u1647:
  4399     0E0A  0BF3               	decfsz	??_Lcd_Write_Char,f
  4400     0E0B  2E0A               	goto	u1647
  4401     0E0C  0000               	nop
  4402     0E0D                     l2092:
  4403                           
  4404                           ;LCD.c: 91:     RD3 = 0;
  4405     0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  4406     0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  4407     0E0F  1188               	bcf	8,3	;volatile
  4408     0E10                     l2094:
  4409                           
  4410                           ;LCD.c: 92:     Lcd_Port(temp);
  4411     0E10  0874               	movf	Lcd_Write_Char@temp,w
  4412     0E11  120A  158A  254A  120A  158A  	fcall	_Lcd_Port
  4413     0E16                     l2096:
  4414                           
  4415                           ;LCD.c: 93:     RD3 = 1;
  4416     0E16  1283               	bcf	3,5	;RP0=0, select bank0
  4417     0E17  1303               	bcf	3,6	;RP1=0, select bank0
  4418     0E18  1588               	bsf	8,3	;volatile
  4419     0E19                     l2098:
  4420                           
  4421                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4422     0E19  301A               	movlw	26
  4423     0E1A  00F3               	movwf	??_Lcd_Write_Char
  4424     0E1B                     u1657:
  4425     0E1B  0BF3               	decfsz	??_Lcd_Write_Char,f
  4426     0E1C  2E1B               	goto	u1657
  4427     0E1D  0000               	nop
  4428     0E1E                     l2100:
  4429                           
  4430                           ;LCD.c: 95:     RD3 = 0;
  4431     0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  4432     0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  4433     0E20  1188               	bcf	8,3	;volatile
  4434     0E21                     l288:
  4435     0E21  0008               	return
  4436     0E22                     __end_of_Lcd_Write_Char:
  4437                           
  4438                           	psect	text22
  4439     0E98                     __ptext22:	
  4440 ;; *************** function _Lcd_Set_Cursor *****************
  4441 ;; Defined at:
  4442 ;;		line 48 in file "LCD.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  a               1    wreg     unsigned char 
  4445 ;;  b               1    6[COMMON] unsigned char 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  a               1    0[BANK0 ] unsigned char 
  4448 ;;  temp            1    3[BANK0 ] unsigned char 
  4449 ;;  y               1    2[BANK0 ] unsigned char 
  4450 ;;  z               1    1[BANK0 ] unsigned char 
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      void 
  4453 ;; Registers used:
  4454 ;;		wreg, status,2, status,0, pclath, cstack
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4460 ;;      Params:         1       0       0       0       0
  4461 ;;      Locals:         0       4       0       0       0
  4462 ;;      Temps:          1       0       0       0       0
  4463 ;;      Totals:         2       4       0       0       0
  4464 ;;Total ram usage:        6 bytes
  4465 ;; Hardware stack levels used: 1
  4466 ;; Hardware stack levels required when called: 3
  4467 ;; This function calls:
  4468 ;;		_Lcd_Cmd
  4469 ;; This function is called by:
  4470 ;;		_main
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474     0E98                     _Lcd_Set_Cursor:	
  4475                           ;psect for function _Lcd_Set_Cursor
  4476                           
  4477                           
  4478                           ;incstack = 0
  4479                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4480                           ;Lcd_Set_Cursor@a stored from wreg
  4481     0E98  1283               	bcf	3,5	;RP0=0, select bank0
  4482     0E99  1303               	bcf	3,6	;RP1=0, select bank0
  4483     0E9A  00BF               	movwf	Lcd_Set_Cursor@a
  4484     0E9B                     l2172:
  4485                           
  4486                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  4487     0E9B  033F               	decf	Lcd_Set_Cursor@a,w
  4488     0E9C  1D03               	btfss	3,2
  4489     0E9D  2E9F               	goto	u1371
  4490     0E9E  2EA0               	goto	u1370
  4491     0E9F                     u1371:
  4492     0E9F  2EBF               	goto	l2182
  4493     0EA0                     u1370:
  4494     0EA0                     l2174:
  4495                           
  4496                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  4497     0EA0  0876               	movf	Lcd_Set_Cursor@b,w
  4498     0EA1  3E7F               	addlw	127
  4499     0EA2  00C2               	movwf	Lcd_Set_Cursor@temp
  4500                           
  4501                           ;LCD.c: 52:         z = temp >> 4;
  4502     0EA3  0842               	movf	Lcd_Set_Cursor@temp,w
  4503     0EA4  00F7               	movwf	??_Lcd_Set_Cursor
  4504     0EA5  3004               	movlw	4
  4505     0EA6                     u1385:
  4506     0EA6  1003               	clrc
  4507     0EA7  0CF7               	rrf	??_Lcd_Set_Cursor,f
  4508     0EA8  3EFF               	addlw	-1
  4509     0EA9  1D03               	skipz
  4510     0EAA  2EA6               	goto	u1385
  4511     0EAB  0877               	movf	??_Lcd_Set_Cursor,w
  4512     0EAC  00C0               	movwf	Lcd_Set_Cursor@z
  4513     0EAD                     l2176:
  4514                           
  4515                           ;LCD.c: 53:         y = temp & 0x0F;
  4516     0EAD  0842               	movf	Lcd_Set_Cursor@temp,w
  4517     0EAE  390F               	andlw	15
  4518     0EAF  00C1               	movwf	Lcd_Set_Cursor@y
  4519     0EB0                     l2178:
  4520                           
  4521                           ;LCD.c: 54:         Lcd_Cmd(z);
  4522     0EB0  0840               	movf	Lcd_Set_Cursor@z,w
  4523     0EB1  120A  158A  2530  120A  158A  	fcall	_Lcd_Cmd
  4524     0EB6                     l2180:
  4525                           
  4526                           ;LCD.c: 55:         Lcd_Cmd(y);
  4527     0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  4528     0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  4529     0EB8  0841               	movf	Lcd_Set_Cursor@y,w
  4530     0EB9  120A  158A  2530  120A  158A  	fcall	_Lcd_Cmd
  4531                           
  4532                           ;LCD.c: 56:     } else if (a == 2) {
  4533     0EBE  2EE3               	goto	l282
  4534     0EBF                     l2182:
  4535     0EBF  3002               	movlw	2
  4536     0EC0  063F               	xorwf	Lcd_Set_Cursor@a,w
  4537     0EC1  1D03               	btfss	3,2
  4538     0EC2  2EC4               	goto	u1391
  4539     0EC3  2EC5               	goto	u1390
  4540     0EC4                     u1391:
  4541     0EC4  2EE3               	goto	l282
  4542     0EC5                     u1390:
  4543     0EC5                     l2184:
  4544                           
  4545                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  4546     0EC5  0876               	movf	Lcd_Set_Cursor@b,w
  4547     0EC6  3EBF               	addlw	191
  4548     0EC7  00C2               	movwf	Lcd_Set_Cursor@temp
  4549                           
  4550                           ;LCD.c: 58:         z = temp >> 4;
  4551     0EC8  0842               	movf	Lcd_Set_Cursor@temp,w
  4552     0EC9  00F7               	movwf	??_Lcd_Set_Cursor
  4553     0ECA  3004               	movlw	4
  4554     0ECB                     u1405:
  4555     0ECB  1003               	clrc
  4556     0ECC  0CF7               	rrf	??_Lcd_Set_Cursor,f
  4557     0ECD  3EFF               	addlw	-1
  4558     0ECE  1D03               	skipz
  4559     0ECF  2ECB               	goto	u1405
  4560     0ED0  0877               	movf	??_Lcd_Set_Cursor,w
  4561     0ED1  00C0               	movwf	Lcd_Set_Cursor@z
  4562     0ED2                     l2186:
  4563                           
  4564                           ;LCD.c: 59:         y = temp & 0x0F;
  4565     0ED2  0842               	movf	Lcd_Set_Cursor@temp,w
  4566     0ED3  390F               	andlw	15
  4567     0ED4  00C1               	movwf	Lcd_Set_Cursor@y
  4568     0ED5                     l2188:
  4569                           
  4570                           ;LCD.c: 60:         Lcd_Cmd(z);
  4571     0ED5  0840               	movf	Lcd_Set_Cursor@z,w
  4572     0ED6  120A  158A  2530  120A  158A  	fcall	_Lcd_Cmd
  4573     0EDB                     l2190:
  4574                           
  4575                           ;LCD.c: 61:         Lcd_Cmd(y);
  4576     0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  4577     0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  4578     0EDD  0841               	movf	Lcd_Set_Cursor@y,w
  4579     0EDE  120A  158A  2530  120A  158A  	fcall	_Lcd_Cmd
  4580     0EE3                     l282:
  4581     0EE3  0008               	return
  4582     0EE4                     __end_of_Lcd_Set_Cursor:
  4583                           
  4584                           	psect	text23
  4585     0F3F                     __ptext23:	
  4586 ;; *************** function _Lcd_Init *****************
  4587 ;; Defined at:
  4588 ;;		line 65 in file "LCD.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;		None
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;		None
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  1    wreg      void 
  4595 ;; Registers used:
  4596 ;;		wreg, status,2, status,0, pclath, cstack
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4602 ;;      Params:         0       0       0       0       0
  4603 ;;      Locals:         0       0       0       0       0
  4604 ;;      Temps:          2       0       0       0       0
  4605 ;;      Totals:         2       0       0       0       0
  4606 ;;Total ram usage:        2 bytes
  4607 ;; Hardware stack levels used: 1
  4608 ;; Hardware stack levels required when called: 3
  4609 ;; This function calls:
  4610 ;;		_Lcd_Cmd
  4611 ;;		_Lcd_Port
  4612 ;; This function is called by:
  4613 ;;		_main
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617     0F3F                     _Lcd_Init:	
  4618                           ;psect for function _Lcd_Init
  4619                           
  4620     0F3F                     l2160:	
  4621                           ;incstack = 0
  4622                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4623                           
  4624                           
  4625                           ;LCD.c: 66:     Lcd_Port(0x00);
  4626     0F3F  3000               	movlw	0
  4627     0F40  120A  158A  254A  120A  158A  	fcall	_Lcd_Port
  4628     0F45                     l2162:
  4629                           
  4630                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  4631     0F45  3034               	movlw	52
  4632     0F46  00F7               	movwf	??_Lcd_Init+1
  4633     0F47  30F1               	movlw	241
  4634     0F48  00F6               	movwf	??_Lcd_Init
  4635     0F49                     u1667:
  4636     0F49  0BF6               	decfsz	??_Lcd_Init,f
  4637     0F4A  2F49               	goto	u1667
  4638     0F4B  0BF7               	decfsz	??_Lcd_Init+1,f
  4639     0F4C  2F49               	goto	u1667
  4640     0F4D  2F4E               	nop2
  4641     0F4E                     l2164:
  4642                           
  4643                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  4644     0F4E  3003               	movlw	3
  4645     0F4F  120A  158A  2530  120A  158A  	fcall	_Lcd_Cmd
  4646                           
  4647                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4648     0F54  300D               	movlw	13
  4649     0F55  00F7               	movwf	??_Lcd_Init+1
  4650     0F56  30FB               	movlw	251
  4651     0F57  00F6               	movwf	??_Lcd_Init
  4652     0F58                     u1677:
  4653     0F58  0BF6               	decfsz	??_Lcd_Init,f
  4654     0F59  2F58               	goto	u1677
  4655     0F5A  0BF7               	decfsz	??_Lcd_Init+1,f
  4656     0F5B  2F58               	goto	u1677
  4657     0F5C  2F5D               	nop2
  4658     0F5D                     l2166:
  4659                           
  4660                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  4661     0F5D  3003               	movlw	3
  4662     0F5E  120A  158A  2530  120A  158A  	fcall	_Lcd_Cmd
  4663     0F63                     l2168:
  4664                           
  4665                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  4666     0F63  301D               	movlw	29
  4667     0F64  00F7               	movwf	??_Lcd_Init+1
  4668     0F65  3091               	movlw	145
  4669     0F66  00F6               	movwf	??_Lcd_Init
  4670     0F67                     u1687:
  4671     0F67  0BF6               	decfsz	??_Lcd_Init,f
  4672     0F68  2F67               	goto	u1687
  4673     0F69  0BF7               	decfsz	??_Lcd_Init+1,f
  4674     0F6A  2F67               	goto	u1687
  4675                           
  4676                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  4677     0F6B  3003               	movlw	3
  4678     0F6C  120A  158A  2530  120A  158A  	fcall	_Lcd_Cmd
  4679                           
  4680                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  4681     0F71  3002               	movlw	2
  4682     0F72  120A  158A  2530  120A  158A  	fcall	_Lcd_Cmd
  4683                           
  4684                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  4685     0F77  3002               	movlw	2
  4686     0F78  120A  158A  2530  120A  158A  	fcall	_Lcd_Cmd
  4687                           
  4688                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  4689     0F7D  3008               	movlw	8
  4690     0F7E  120A  158A  2530  120A  158A  	fcall	_Lcd_Cmd
  4691                           
  4692                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  4693     0F83  3000               	movlw	0
  4694     0F84  120A  158A  2530  120A  158A  	fcall	_Lcd_Cmd
  4695                           
  4696                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  4697     0F89  300C               	movlw	12
  4698     0F8A  120A  158A  2530  120A  158A  	fcall	_Lcd_Cmd
  4699                           
  4700                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  4701     0F8F  3000               	movlw	0
  4702     0F90  120A  158A  2530  120A  158A  	fcall	_Lcd_Cmd
  4703                           
  4704                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  4705     0F95  3006               	movlw	6
  4706     0F96  120A  158A  2530  120A  158A  	fcall	_Lcd_Cmd
  4707     0F9B                     l285:
  4708     0F9B  0008               	return
  4709     0F9C                     __end_of_Lcd_Init:
  4710                           
  4711                           	psect	text24
  4712     0D16                     __ptext24:	
  4713 ;; *************** function _Lcd_Clear *****************
  4714 ;; Defined at:
  4715 ;;		line 43 in file "LCD.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;		None
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  1    wreg      void 
  4722 ;; Registers used:
  4723 ;;		wreg, status,2, status,0, pclath, cstack
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4729 ;;      Params:         0       0       0       0       0
  4730 ;;      Locals:         0       0       0       0       0
  4731 ;;      Temps:          0       0       0       0       0
  4732 ;;      Totals:         0       0       0       0       0
  4733 ;;Total ram usage:        0 bytes
  4734 ;; Hardware stack levels used: 1
  4735 ;; Hardware stack levels required when called: 3
  4736 ;; This function calls:
  4737 ;;		_Lcd_Cmd
  4738 ;; This function is called by:
  4739 ;;		_main
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743     0D16                     _Lcd_Clear:	
  4744                           ;psect for function _Lcd_Clear
  4745                           
  4746     0D16                     l2170:	
  4747                           ;incstack = 0
  4748                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4749                           
  4750                           
  4751                           ;LCD.c: 44:     Lcd_Cmd(0);
  4752     0D16  3000               	movlw	0
  4753     0D17  120A  158A  2530  120A  158A  	fcall	_Lcd_Cmd
  4754                           
  4755                           ;LCD.c: 45:     Lcd_Cmd(1);
  4756     0D1C  3001               	movlw	1
  4757     0D1D  120A  158A  2530  120A  158A  	fcall	_Lcd_Cmd
  4758     0D22                     l276:
  4759     0D22  0008               	return
  4760     0D23                     __end_of_Lcd_Clear:
  4761                           
  4762                           	psect	text25
  4763     0D30                     __ptext25:	
  4764 ;; *************** function _Lcd_Cmd *****************
  4765 ;; Defined at:
  4766 ;;		line 35 in file "LCD.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;  a               1    wreg     unsigned char 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;  a               1    5[COMMON] unsigned char 
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  1    wreg      void 
  4773 ;; Registers used:
  4774 ;;		wreg, status,2, status,0, pclath, cstack
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4780 ;;      Params:         0       0       0       0       0
  4781 ;;      Locals:         1       0       0       0       0
  4782 ;;      Temps:          2       0       0       0       0
  4783 ;;      Totals:         3       0       0       0       0
  4784 ;;Total ram usage:        3 bytes
  4785 ;; Hardware stack levels used: 1
  4786 ;; Hardware stack levels required when called: 2
  4787 ;; This function calls:
  4788 ;;		_Lcd_Port
  4789 ;; This function is called by:
  4790 ;;		_Lcd_Clear
  4791 ;;		_Lcd_Set_Cursor
  4792 ;;		_Lcd_Init
  4793 ;;		_Lcd_Shift_Right
  4794 ;;		_Lcd_Shift_Left
  4795 ;; This function uses a non-reentrant model
  4796 ;;
  4797                           
  4798     0D30                     _Lcd_Cmd:	
  4799                           ;psect for function _Lcd_Cmd
  4800                           
  4801                           
  4802                           ;incstack = 0
  4803                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4804                           ;Lcd_Cmd@a stored from wreg
  4805     0D30  00F5               	movwf	Lcd_Cmd@a
  4806     0D31                     l2114:
  4807                           
  4808                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  4809     0D31  1283               	bcf	3,5	;RP0=0, select bank0
  4810     0D32  1303               	bcf	3,6	;RP1=0, select bank0
  4811     0D33  1108               	bcf	8,2	;volatile
  4812     0D34                     l2116:
  4813                           
  4814                           ;LCD.c: 37:     Lcd_Port(a);
  4815     0D34  0875               	movf	Lcd_Cmd@a,w
  4816     0D35  120A  158A  254A  120A  158A  	fcall	_Lcd_Port
  4817     0D3A                     l2118:
  4818                           
  4819                           ;LCD.c: 38:     RD3 = 1;
  4820     0D3A  1283               	bcf	3,5	;RP0=0, select bank0
  4821     0D3B  1303               	bcf	3,6	;RP1=0, select bank0
  4822     0D3C  1588               	bsf	8,3	;volatile
  4823     0D3D                     l2120:
  4824                           
  4825                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4826     0D3D  300B               	movlw	11
  4827     0D3E  00F4               	movwf	??_Lcd_Cmd+1
  4828     0D3F  3062               	movlw	98
  4829     0D40  00F3               	movwf	??_Lcd_Cmd
  4830     0D41                     u1697:
  4831     0D41  0BF3               	decfsz	??_Lcd_Cmd,f
  4832     0D42  2D41               	goto	u1697
  4833     0D43  0BF4               	decfsz	??_Lcd_Cmd+1,f
  4834     0D44  2D41               	goto	u1697
  4835     0D45  0000               	nop
  4836     0D46                     l2122:
  4837                           
  4838                           ;LCD.c: 40:     RD3 = 0;
  4839     0D46  1283               	bcf	3,5	;RP0=0, select bank0
  4840     0D47  1303               	bcf	3,6	;RP1=0, select bank0
  4841     0D48  1188               	bcf	8,3	;volatile
  4842     0D49                     l273:
  4843     0D49  0008               	return
  4844     0D4A                     __end_of_Lcd_Cmd:
  4845                           
  4846                           	psect	text26
  4847     0D4A                     __ptext26:	
  4848 ;; *************** function _Lcd_Port *****************
  4849 ;; Defined at:
  4850 ;;		line 13 in file "LCD.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;  a               1    wreg     unsigned char 
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;  a               1    2[COMMON] unsigned char 
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  1    wreg      void 
  4857 ;; Registers used:
  4858 ;;		wreg
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4864 ;;      Params:         0       0       0       0       0
  4865 ;;      Locals:         1       0       0       0       0
  4866 ;;      Temps:          0       0       0       0       0
  4867 ;;      Totals:         1       0       0       0       0
  4868 ;;Total ram usage:        1 bytes
  4869 ;; Hardware stack levels used: 1
  4870 ;; Hardware stack levels required when called: 1
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		_Lcd_Cmd
  4875 ;;		_Lcd_Init
  4876 ;;		_Lcd_Write_Char
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880     0D4A                     _Lcd_Port:	
  4881                           ;psect for function _Lcd_Port
  4882                           
  4883                           
  4884                           ;incstack = 0
  4885                           ; Regs used in _Lcd_Port: [wreg]
  4886                           ;Lcd_Port@a stored from wreg
  4887     0D4A  00F2               	movwf	Lcd_Port@a
  4888     0D4B                     l2048:
  4889                           
  4890                           ;LCD.c: 14:     if (a & 1)
  4891     0D4B  1C72               	btfss	Lcd_Port@a,0
  4892     0D4C  2D4E               	goto	u1241
  4893     0D4D  2D4F               	goto	u1240
  4894     0D4E                     u1241:
  4895     0D4E  2D53               	goto	l262
  4896     0D4F                     u1240:
  4897     0D4F                     l2050:
  4898                           
  4899                           ;LCD.c: 15:         RD4 = 1;
  4900     0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  4901     0D50  1303               	bcf	3,6	;RP1=0, select bank0
  4902     0D51  1608               	bsf	8,4	;volatile
  4903     0D52  2D56               	goto	l263
  4904     0D53                     l262:	
  4905                           ;LCD.c: 16:     else
  4906                           
  4907                           
  4908                           ;LCD.c: 17:         RD4 = 0;
  4909     0D53  1283               	bcf	3,5	;RP0=0, select bank0
  4910     0D54  1303               	bcf	3,6	;RP1=0, select bank0
  4911     0D55  1208               	bcf	8,4	;volatile
  4912     0D56                     l263:
  4913                           
  4914                           ;LCD.c: 19:     if (a & 2)
  4915     0D56  1CF2               	btfss	Lcd_Port@a,1
  4916     0D57  2D59               	goto	u1251
  4917     0D58  2D5A               	goto	u1250
  4918     0D59                     u1251:
  4919     0D59  2D5C               	goto	l264
  4920     0D5A                     u1250:
  4921     0D5A                     l2052:
  4922                           
  4923                           ;LCD.c: 20:         RD5 = 1;
  4924     0D5A  1688               	bsf	8,5	;volatile
  4925     0D5B  2D5D               	goto	l265
  4926     0D5C                     l264:	
  4927                           ;LCD.c: 21:     else
  4928                           
  4929                           
  4930                           ;LCD.c: 22:         RD5 = 0;
  4931     0D5C  1288               	bcf	8,5	;volatile
  4932     0D5D                     l265:
  4933                           
  4934                           ;LCD.c: 24:     if (a & 4)
  4935     0D5D  1D72               	btfss	Lcd_Port@a,2
  4936     0D5E  2D60               	goto	u1261
  4937     0D5F  2D61               	goto	u1260
  4938     0D60                     u1261:
  4939     0D60  2D63               	goto	l266
  4940     0D61                     u1260:
  4941     0D61                     l2054:
  4942                           
  4943                           ;LCD.c: 25:         RD6 = 1;
  4944     0D61  1708               	bsf	8,6	;volatile
  4945     0D62  2D64               	goto	l267
  4946     0D63                     l266:	
  4947                           ;LCD.c: 26:     else
  4948                           
  4949                           
  4950                           ;LCD.c: 27:         RD6 = 0;
  4951     0D63  1308               	bcf	8,6	;volatile
  4952     0D64                     l267:
  4953                           
  4954                           ;LCD.c: 29:     if (a & 8)
  4955     0D64  1DF2               	btfss	Lcd_Port@a,3
  4956     0D65  2D67               	goto	u1271
  4957     0D66  2D68               	goto	u1270
  4958     0D67                     u1271:
  4959     0D67  2D6A               	goto	l268
  4960     0D68                     u1270:
  4961     0D68                     l2056:
  4962                           
  4963                           ;LCD.c: 30:         RD7 = 1;
  4964     0D68  1788               	bsf	8,7	;volatile
  4965     0D69  2D6B               	goto	l270
  4966     0D6A                     l268:	
  4967                           ;LCD.c: 31:     else
  4968                           
  4969                           
  4970                           ;LCD.c: 32:         RD7 = 0;
  4971     0D6A  1388               	bcf	8,7	;volatile
  4972     0D6B                     l270:
  4973     0D6B  0008               	return
  4974     0D6C                     __end_of_Lcd_Port:
  4975                           
  4976                           	psect	text27
  4977     0468                     __ptext27:	
  4978 ;; *************** function _isr *****************
  4979 ;; Defined at:
  4980 ;;		line 79 in file "main.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;		None
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1    wreg      void 
  4987 ;; Registers used:
  4988 ;;		wreg, status,2, status,0
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4994 ;;      Params:         0       0       0       0       0
  4995 ;;      Locals:         0       0       0       0       0
  4996 ;;      Temps:          2       0       0       0       0
  4997 ;;      Totals:         2       0       0       0       0
  4998 ;;Total ram usage:        2 bytes
  4999 ;; Hardware stack levels used: 1
  5000 ;; This function calls:
  5001 ;;		Nothing
  5002 ;; This function is called by:
  5003 ;;		Interrupt level 1
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007     0468                     _isr:	
  5008                           ;psect for function _isr
  5009                           
  5010     0468                     i1l1834:
  5011                           
  5012                           ;main.c: 80:     if (INTCONbits.RBIF){
  5013     0468  1C0B               	btfss	11,0	;volatile
  5014     0469  2C6B               	goto	u107_21
  5015     046A  2C6C               	goto	u107_20
  5016     046B                     u107_21:
  5017     046B  2D03               	goto	i1l155
  5018     046C                     u107_20:
  5019     046C                     i1l1836:
  5020                           
  5021                           ;main.c: 81:         if (PORTBbits.RB0 == 0){
  5022     046C  1283               	bcf	3,5	;RP0=0, select bank0
  5023     046D  1303               	bcf	3,6	;RP1=0, select bank0
  5024     046E  1806               	btfsc	6,0	;volatile
  5025     046F  2C71               	goto	u108_21
  5026     0470  2C72               	goto	u108_20
  5027     0471                     u108_21:
  5028     0471  2C84               	goto	i1l136
  5029     0472                     u108_20:
  5030     0472                     i1l1838:
  5031                           
  5032                           ;main.c: 82:             flag++;
  5033     0472  3001               	movlw	1
  5034     0473  07A0               	addwf	_flag,f
  5035     0474  1803               	skipnc
  5036     0475  0AA1               	incf	_flag+1,f
  5037     0476  3000               	movlw	0
  5038     0477  07A1               	addwf	_flag+1,f
  5039     0478                     i1l1840:
  5040                           
  5041                           ;main.c: 83:             PORTAbits.RA0 = 1;
  5042     0478  1405               	bsf	5,0	;volatile
  5043     0479                     i1l1842:
  5044                           
  5045                           ;main.c: 84:             if (flag == 2){
  5046     0479  3002               	movlw	2
  5047     047A  0620               	xorwf	_flag,w
  5048     047B  0421               	iorwf	_flag+1,w
  5049     047C  1D03               	btfss	3,2
  5050     047D  2C7F               	goto	u109_21
  5051     047E  2C80               	goto	u109_20
  5052     047F                     u109_21:
  5053     047F  2D02               	goto	i1l1884
  5054     0480                     u109_20:
  5055     0480                     i1l1844:
  5056                           
  5057                           ;main.c: 85:                 flag = 0;
  5058     0480  01A0               	clrf	_flag
  5059     0481  01A1               	clrf	_flag+1
  5060     0482                     i1l1846:
  5061                           
  5062                           ;main.c: 86:                 PORTAbits.RA0 = 0;
  5063     0482  1005               	bcf	5,0	;volatile
  5064     0483  2D02               	goto	i1l1884
  5065     0484                     i1l136:	
  5066                           ;main.c: 91:         else if (PORTBbits.RB1 == 0 && flag == 1){
  5067                           
  5068     0484  1886               	btfsc	6,1	;volatile
  5069     0485  2C87               	goto	u110_21
  5070     0486  2C88               	goto	u110_20
  5071     0487                     u110_21:
  5072     0487  2C9F               	goto	i1l139
  5073     0488                     u110_20:
  5074     0488                     i1l1848:
  5075     0488  0320               	decf	_flag,w
  5076     0489  0421               	iorwf	_flag+1,w
  5077     048A  1D03               	btfss	3,2
  5078     048B  2C8D               	goto	u111_21
  5079     048C  2C8E               	goto	u111_20
  5080     048D                     u111_21:
  5081     048D  2C9F               	goto	i1l139
  5082     048E                     u111_20:
  5083     048E                     i1l1850:
  5084                           
  5085                           ;main.c: 92:             contador++;
  5086     048E  3001               	movlw	1
  5087     048F  07FA               	addwf	_contador,f
  5088     0490  1803               	skipnc
  5089     0491  0AFB               	incf	_contador+1,f
  5090     0492  3000               	movlw	0
  5091     0493  07FB               	addwf	_contador+1,f
  5092     0494                     i1l1852:
  5093                           
  5094                           ;main.c: 93:             if (contador == 3)
  5095     0494  3003               	movlw	3
  5096     0495  067A               	xorwf	_contador,w
  5097     0496  047B               	iorwf	_contador+1,w
  5098     0497  1D03               	btfss	3,2
  5099     0498  2C9A               	goto	u112_21
  5100     0499  2C9B               	goto	u112_20
  5101     049A                     u112_21:
  5102     049A  2D02               	goto	i1l1884
  5103     049B                     u112_20:
  5104     049B                     i1l1854:
  5105                           
  5106                           ;main.c: 94:                 contador = 0;
  5107     049B  01FA               	clrf	_contador
  5108     049C  01FB               	clrf	_contador+1
  5109     049D  2D02               	goto	i1l1884
  5110     049E                     i1l140:
  5111                           
  5112                           ;main.c: 95:         }
  5113     049E  2D02               	goto	i1l1884
  5114     049F                     i1l139:	
  5115                           ;main.c: 97:         else if (PORTBbits.RB2 == 0 && flag == 1){
  5116                           
  5117     049F  1906               	btfsc	6,2	;volatile
  5118     04A0  2CA2               	goto	u113_21
  5119     04A1  2CA3               	goto	u113_20
  5120     04A2                     u113_21:
  5121     04A2  2CD1               	goto	i1l142
  5122     04A3                     u113_20:
  5123     04A3                     i1l1856:
  5124     04A3  0320               	decf	_flag,w
  5125     04A4  0421               	iorwf	_flag+1,w
  5126     04A5  1D03               	btfss	3,2
  5127     04A6  2CA8               	goto	u114_21
  5128     04A7  2CA9               	goto	u114_20
  5129     04A8                     u114_21:
  5130     04A8  2CD1               	goto	i1l142
  5131     04A9                     u114_20:
  5132     04A9                     i1l1858:
  5133                           
  5134                           ;main.c: 98:             if (contador == 0)
  5135     04A9  087A               	movf	_contador,w
  5136     04AA  047B               	iorwf	_contador+1,w
  5137     04AB  1D03               	btfss	3,2
  5138     04AC  2CAE               	goto	u115_21
  5139     04AD  2CAF               	goto	u115_20
  5140     04AE                     u115_21:
  5141     04AE  2CB6               	goto	i1l1862
  5142     04AF                     u115_20:
  5143     04AF                     i1l1860:
  5144                           
  5145                           ;main.c: 99:                 dia++;
  5146     04AF  3001               	movlw	1
  5147     04B0  07A6               	addwf	_dia,f
  5148     04B1  1803               	skipnc
  5149     04B2  0AA7               	incf	_dia+1,f
  5150     04B3  3000               	movlw	0
  5151     04B4  07A7               	addwf	_dia+1,f
  5152     04B5  2D02               	goto	i1l1884
  5153     04B6                     i1l1862:
  5154     04B6  037A               	decf	_contador,w
  5155     04B7  047B               	iorwf	_contador+1,w
  5156     04B8  1D03               	btfss	3,2
  5157     04B9  2CBB               	goto	u116_21
  5158     04BA  2CBC               	goto	u116_20
  5159     04BB                     u116_21:
  5160     04BB  2CC3               	goto	i1l1866
  5161     04BC                     u116_20:
  5162     04BC                     i1l1864:
  5163                           
  5164                           ;main.c: 101:                 mes++;
  5165     04BC  3001               	movlw	1
  5166     04BD  07A4               	addwf	_mes,f
  5167     04BE  1803               	skipnc
  5168     04BF  0AA5               	incf	_mes+1,f
  5169     04C0  3000               	movlw	0
  5170     04C1  07A5               	addwf	_mes+1,f
  5171     04C2  2D02               	goto	i1l1884
  5172     04C3                     i1l1866:
  5173     04C3  3002               	movlw	2
  5174     04C4  067A               	xorwf	_contador,w
  5175     04C5  047B               	iorwf	_contador+1,w
  5176     04C6  1D03               	btfss	3,2
  5177     04C7  2CC9               	goto	u117_21
  5178     04C8  2CCA               	goto	u117_20
  5179     04C9                     u117_21:
  5180     04C9  2C9E               	goto	i1l140
  5181     04CA                     u117_20:
  5182     04CA                     i1l1868:
  5183                           
  5184                           ;main.c: 103:                 anio++;
  5185     04CA  3001               	movlw	1
  5186     04CB  07A2               	addwf	_anio,f
  5187     04CC  1803               	skipnc
  5188     04CD  0AA3               	incf	_anio+1,f
  5189     04CE  3000               	movlw	0
  5190     04CF  07A3               	addwf	_anio+1,f
  5191     04D0  2D02               	goto	i1l1884
  5192     04D1                     i1l142:	
  5193                           ;main.c: 106:         else if (PORTBbits.RB3 == 0 && flag == 1){
  5194                           
  5195     04D1  1986               	btfsc	6,3	;volatile
  5196     04D2  2CD4               	goto	u118_21
  5197     04D3  2CD5               	goto	u118_20
  5198     04D4                     u118_21:
  5199     04D4  2D02               	goto	i1l1884
  5200     04D5                     u118_20:
  5201     04D5                     i1l1870:
  5202     04D5  0320               	decf	_flag,w
  5203     04D6  0421               	iorwf	_flag+1,w
  5204     04D7  1D03               	btfss	3,2
  5205     04D8  2CDA               	goto	u119_21
  5206     04D9  2CDB               	goto	u119_20
  5207     04DA                     u119_21:
  5208     04DA  2D02               	goto	i1l1884
  5209     04DB                     u119_20:
  5210     04DB                     i1l1872:
  5211                           
  5212                           ;main.c: 107:             if (contador == 0)
  5213     04DB  087A               	movf	_contador,w
  5214     04DC  047B               	iorwf	_contador+1,w
  5215     04DD  1D03               	btfss	3,2
  5216     04DE  2CE0               	goto	u120_21
  5217     04DF  2CE1               	goto	u120_20
  5218     04E0                     u120_21:
  5219     04E0  2CE8               	goto	i1l1876
  5220     04E1                     u120_20:
  5221     04E1                     i1l1874:
  5222                           
  5223                           ;main.c: 108:                 dia--;
  5224     04E1  30FF               	movlw	255
  5225     04E2  07A6               	addwf	_dia,f
  5226     04E3  1803               	skipnc
  5227     04E4  0AA7               	incf	_dia+1,f
  5228     04E5  30FF               	movlw	255
  5229     04E6  07A7               	addwf	_dia+1,f
  5230     04E7  2D02               	goto	i1l1884
  5231     04E8                     i1l1876:
  5232     04E8  037A               	decf	_contador,w
  5233     04E9  047B               	iorwf	_contador+1,w
  5234     04EA  1D03               	btfss	3,2
  5235     04EB  2CED               	goto	u121_21
  5236     04EC  2CEE               	goto	u121_20
  5237     04ED                     u121_21:
  5238     04ED  2CF5               	goto	i1l1880
  5239     04EE                     u121_20:
  5240     04EE                     i1l1878:
  5241                           
  5242                           ;main.c: 110:                 mes--;
  5243     04EE  30FF               	movlw	255
  5244     04EF  07A4               	addwf	_mes,f
  5245     04F0  1803               	skipnc
  5246     04F1  0AA5               	incf	_mes+1,f
  5247     04F2  30FF               	movlw	255
  5248     04F3  07A5               	addwf	_mes+1,f
  5249     04F4  2D02               	goto	i1l1884
  5250     04F5                     i1l1880:
  5251     04F5  3002               	movlw	2
  5252     04F6  067A               	xorwf	_contador,w
  5253     04F7  047B               	iorwf	_contador+1,w
  5254     04F8  1D03               	btfss	3,2
  5255     04F9  2CFB               	goto	u122_21
  5256     04FA  2CFC               	goto	u122_20
  5257     04FB                     u122_21:
  5258     04FB  2C9E               	goto	i1l140
  5259     04FC                     u122_20:
  5260     04FC                     i1l1882:
  5261                           
  5262                           ;main.c: 112:                 anio--;
  5263     04FC  30FF               	movlw	255
  5264     04FD  07A2               	addwf	_anio,f
  5265     04FE  1803               	skipnc
  5266     04FF  0AA3               	incf	_anio+1,f
  5267     0500  30FF               	movlw	255
  5268     0501  07A3               	addwf	_anio+1,f
  5269     0502                     i1l1884:
  5270                           
  5271                           ;main.c: 115:         INTCONbits.RBIF = 0;
  5272     0502  100B               	bcf	11,0	;volatile
  5273     0503                     i1l155:
  5274     0503  0871               	movf	??_isr+1,w
  5275     0504  008A               	movwf	10
  5276     0505  0E70               	swapf	??_isr,w
  5277     0506  0083               	movwf	3
  5278     0507  0EFE               	swapf	btemp,f
  5279     0508  0E7E               	swapf	btemp,w
  5280     0509  0009               	retfie
  5281     050A                     __end_of_isr:
  5282     007E                     btemp	set	126	;btemp
  5283     007E                     wtemp0	set	126
  5284                           
  5285                           	psect	intentry
  5286     0004                     __pintentry:	
  5287                           ;incstack = 0
  5288                           ; Regs used in _isr: [wreg+status,2+status,0]
  5289                           
  5290     0004                     interrupt_function:
  5291     007E                     saved_w	set	btemp
  5292     0004  00FE               	movwf	btemp
  5293     0005  0E03               	swapf	3,w
  5294     0006  00F0               	movwf	??_isr
  5295     0007  080A               	movf	10,w
  5296     0008  00F1               	movwf	??_isr+1
  5297     0009  120A  118A  2C68   	ljmp	_isr
  5298                           
  5299                           	psect	idloc
  5300                           
  5301                           ;Config register IDLOC0 @ 0x2000
  5302                           ;	unspecified, using default values
  5303     2000                     	org	8192
  5304     2000  3FFF               	dw	16383
  5305                           
  5306                           ;Config register IDLOC1 @ 0x2001
  5307                           ;	unspecified, using default values
  5308     2001                     	org	8193
  5309     2001  3FFF               	dw	16383
  5310                           
  5311                           ;Config register IDLOC2 @ 0x2002
  5312                           ;	unspecified, using default values
  5313     2002                     	org	8194
  5314     2002  3FFF               	dw	16383
  5315                           
  5316                           ;Config register IDLOC3 @ 0x2003
  5317                           ;	unspecified, using default values
  5318     2003                     	org	8195
  5319     2003  3FFF               	dw	16383
  5320                           
  5321                           	psect	config
  5322                           
  5323                           ;Config register CONFIG1 @ 0x2007
  5324                           ;	Oscillator Selection bits
  5325                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5326                           ;	Watchdog Timer Enable bit
  5327                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5328                           ;	Power-up Timer Enable bit
  5329                           ;	PWRTE = OFF, PWRT disabled
  5330                           ;	RE3/MCLR pin function select bit
  5331                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5332                           ;	Code Protection bit
  5333                           ;	CP = OFF, Program memory code protection is disabled
  5334                           ;	Data Code Protection bit
  5335                           ;	CPD = OFF, Data memory code protection is disabled
  5336                           ;	Brown Out Reset Selection bits
  5337                           ;	BOREN = OFF, BOR disabled
  5338                           ;	Internal External Switchover bit
  5339                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5340                           ;	Fail-Safe Clock Monitor Enabled bit
  5341                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5342                           ;	Low Voltage Programming Enable bit
  5343                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5344                           ;	In-Circuit Debugger Mode bit
  5345                           ;	DEBUG = 0x1, unprogramme  5346     2007                     	org	8199
  5347     2007  20D4               	dw	8404
  5348                           
  5349                           ;Config register CONFIG2 @ 0x2008
  5350                           ;	Brown-out Reset Selection bit
  5351                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5352                           ;	Flash Program Memory Self Write Enable bits
  5353                           ;	WRT = OFF, Write protection off
  5354     2008                     	org	8200
  5355     2008  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     16      47
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _main->___awmod
    _main->_leer_anio
    _main->_leer_dia
    _main->_leer_hora
    _main->_leer_mes
    _main->_leer_min
    _main->_leer_seg
    _I2C_Master_Init->___lldiv
    _leer_seg->_I2C_Master_Read
    _leer_seg->___wmul
    _leer_min->_I2C_Master_Read
    _leer_min->___wmul
    _leer_mes->_I2C_Master_Read
    _leer_mes->___wmul
    _leer_hora->_I2C_Master_Read
    _leer_hora->___wmul
    _leer_dia->_I2C_Master_Read
    _leer_dia->___wmul
    _leer_anio->_I2C_Master_Read
    _leer_anio->___wmul
    _enviar_fecha->_I2C_Master_Write
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    ___awmod->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   38996
                                             14 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                       _enviar_fecha
                          _leer_anio
                           _leer_dia
                          _leer_hora
                           _leer_mes
                           _leer_min
                           _leer_seg
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _leer_seg                                             4     2      2    3959
                                              8 COMMON     2     0      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _leer_min                                             4     2      2    3959
                                              8 COMMON     2     0      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _leer_mes                                             4     2      2    3959
                                              8 COMMON     2     0      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _leer_hora                                            4     2      2    3959
                                              8 COMMON     2     0      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _leer_dia                                             4     2      2    3959
                                              8 COMMON     2     0      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _leer_anio                                            4     2      2    3959
                                              8 COMMON     2     0      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1004
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     653
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _enviar_fecha                                         0     0      0    2302
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    2302
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    4393
                                              7 COMMON     3     3      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    2785
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     492
                                              7 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1085
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _enviar_fecha
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _leer_anio
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___wmul
   _leer_dia
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___wmul
   _leer_hora
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___wmul
   _leer_mes
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___wmul
   _leer_min
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___wmul
   _leer_seg
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___wmul
   _setup
     _I2C_Master_Init
       ___lldiv

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      2F       5       58.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3B      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 15 23:27:50 2023

                               pc 0002                      ___awdiv@sign 0040                                fsr 0004  
             ___wmul@multiplicand 0074                               l201 0D23                               l210 0D0B  
                             l204 0D2F                               l220 0DB9                               l213 0D02  
                             l221 0DBE                               l207 0CF9                               l216 0D15  
                             l219 0DB6                               l331 063F                               l340 06A4  
                             l270 0D6B                               l262 0D53                               l334 0709  
                             l263 0D56                               l343 07D3                               _ADC 003E  
                             l264 0D5C                               l432 07E0                               l328 0FFF  
                             l265 0D5D                               l273 0D49                               l337 076E  
                             l169 0DEC                               l266 0D63                               l282 0EE3  
                             l346 0E97                               l434 07F8                               l267 0D64  
                             l268 0D6A                               l276 0D22                               l285 0F9B  
                             l294 0D90                               l198 0E59                               l288 0E21  
                             l468 05DA                               l585 0572                               l598 0F3E  
                             _GIE 005F                               _RD3 0043                               _RD4 0044  
                             _RD5 0045                               _RD6 0046                               _RD7 0047  
                             u630 0D29                               u631 0D28                               u640 0D2F  
                             u641 0D2E                               u820 07F4                               u821 07F3  
                             u805 07E1                               u815 07E8                               u760 0DB2  
                             u761 0DB1                               u790 07DA                               u791 07D9  
                             _dia 0026                               _mes 0024                               _min 002A  
                             _sec 002C                               _isr 0468                               fsr0 0004  
                             indf 0000                      ___awmod@sign 0079                              l2100 0E1E  
                            l2110 0E57                              l2102 0E22                              l2120 0D3D  
                            l2200 0F9C                              l2112 0E58                              l2104 0E26  
                            l2050 0D4F                              l2122 0D46                              l2114 0D31  
                            l2202 0FFB                              l2106 0E29                              l2130 0DC8  
                            l2052 0D5A                              l2116 0D34                              l2300 0F0F  
                            l2220 076A                              l2212 06A5                              l2060 0585  
                            l2108 0E56                              l2140 0DD1                              l2132 0DC9  
                            l2124 0DBF                              l2054 0D61                              l2118 0D3A  
                            l2302 0F13                              l2310 0F30                              l2230 076F  
                            l2214 0705                              l2206 05DB                              l2070 05B4  
                            l2062 0588                              l2150 0DD8                              l2142 0DD2  
                            l2134 0DCC                              l2126 0DC3                              l2056 0D68  
                            l2048 0D4B                              l2160 0F3F                              l2240 0511  
                            l2312 0F35                              l2304 0F1D                              l1512 0D23  
                            l2232 07CF                              l2224 0640                              l2208 063B  
                            l2072 05C2                              l2064 0595                              l2152 0DD9  
                            l2144 0DD3                              l2136 0DCD                              l2128 0DC7  
                            l2400 0245                              l2320 0035                              l2170 0D16  
                            l2162 0F45                              l2090 0E08                              l2082 0DEE  
                            l2250 0525                              l2242 0516                              l2314 0F3A  
                            l2306 0F23                              l1514 0D29                              l1610 0D03  
                            l2218 070A                              l2226 06A0                              l2074 05C3  
                            l2066 0599                              l2058 0573                              l2154 0DDA  
                            l2146 0DD4                              l2138 0DCE                              l2410 028E  
                            l2402 0258                              l2330 0067                              l2322 003B  
                            l2164 0F4E                              l2180 0EB6                              l2172 0E9B  
                            l2092 0E0D                              l2084 0DF4                              l2260 053B  
                            l2252 0527                              l2244 0518                              l2236 050A  
                            l2308 0F2A                              l1612 0D08                              l2076 05CC  
                            l2068 05A2                              l2156 0DDC                              l2148 0DD7  
                            l2420 02DA                              l2412 02A1                              l2404 0278  
                            l2340 0097                              l2332 0072                              l2324 0046  
                            l2166 0F5D                              l2190 0EDB                              l2174 0EA0  
                            l2182 0EBF                              l2094 0E10                              l2086 0DF7  
                            l2270 055E                              l2262 053F                              l2254 052D  
                            l2246 051C                              l2238 050D                              l1550 0CF1  
                            l1630 07E7                              l2078 05D2                              l2158 0DDD  
                            l2430 0352                              l2422 02FE                              l2414 02C1  
                            l2406 027F                              l2350 00F0                              l2342 009C  
                            l2334 007D                              l2326 0051                              l2318 001E  
                            l2168 0F63                              l2184 0EC5                              l2176 0EAD  
                            l2096 0E16                              l2088 0E05                              l2192 0D6D  
                            l2264 0550                              l2256 0530                              l2272 0564  
                            l2248 0521                              l2280 0EE4                              l1552 0CF6  
                            l1560 0D96                              l1632 07EE                              l1624 07D4  
                            l2440 0388                              l2432 035A                              l2424 0305  
                            l2416 02C7                              l2408 0288                              l2360 0126  
                            l2352 00F8                              l2344 00A3                              l2336 0082  
                            l2328 005C                              l2186 0ED2                              l2178 0EB0  
                            l2098 0E19                              l2194 0D70                              l2274 0569  
                            l2266 0556                              l2258 0537                              l2290 0EF6  
                            l2282 0EE5                              l1554 0D0C                              l1570 0DBA  
                            l1562 0D9E                              l1634 07F4                              l1626 07D6  
                            l2450 03C8                              l2442 03A8                              l2434 0363  
                            l2426 031B                              l2418 02D0                              l2370 0166  
                            l2362 0146                              l2354 0101                              l2346 00B9  
                            l2338 008B                              l2188 0ED5                              l2196 0D7D  
                            l2276 056E                              l2268 0557                              l2292 0EFB  
                            l2284 0EEB                              l1556 0D11                              l1564 0DA7  
                            l1628 07DA                              l2460 0411                              l2452 03DB  
                            l2444 03B0                              l2436 036C                              l2428 033E  
                            l2380 01AF                              l2372 0179                              l2364 014E  
                            l2356 010A                              l2348 00DC                              l2198 0D83  
                            l2294 0F01                              l2286 0EF0                              l1574 0CFA  
                            l1750 0E5A                              l1566 0DAC                              l1558 0D91  
                            l2462 0424                              l2454 03FB                              l2446 03B9  
                            l2438 0375                              l2470 045C                              l2390 0205  
                            l2382 01C2                              l2374 0199                              l2366 0157  
                            l2358 0113                              l2296 0F04                              l2288 0EF2  
                            l1576 0CFF                              l1568 0DB2                              l2464 0444  
                            l2456 0402                              l2448 03C2                              l2392 0225  
                            l2384 01E2                              l2376 01A0                              l2368 0160  
                            l2298 0F0B                              l2466 044A                              l2458 040B  
                            l2394 022D                              l2386 01E9                              l2378 01A9  
                            l2468 0453                              l2396 0236                              l2388 01F2  
                            l2398 023F                              ?_isr 0070                              STR_1 0806  
                            STR_2 080A                              STR_3 080A                              u1300 0599  
                            u1301 0598                              u1240 0D4F                              u1320 05B4  
                            u1241 0D4E                              u1321 05B3                              u1250 0D5A  
                            u1410 0D90                              u1251 0D59                              u1411 0D8F  
                            u1315 059B                              u1260 0D61                              u1500 0564  
                            u1420 0511                              u1340 05D2                              _IOCB 0096  
                            u1261 0D60                              u1405 0ECB                              u1501 0563  
                            u1421 0510                              u1341 05D1                              u1325 05B0  
                            u1270 0D68                              u1510 0569                              u1430 051C  
                            u1271 0D67                              u1511 0568                              u1431 051B  
                            u1335 05C4                              u1440 052D                              u1600 0F35  
                            u1520 0EEB                              u1280 0585                              u1360 0E39  
                            u1441 052C                              u1601 0F34                              u1521 0EEA  
                            u1281 0584                              u1370 0EA0                              u1530 0EF6  
                            u1610 0464                              u1371 0E9F                              u1355 0DFA  
                            u1531 0EF5                              u1611 0463                              u1460 053F  
                            u1540 0F01                              u1461 053E                              u1541 0F00  
                            u1365 0E34                              u1390 0EC5                              u1391 0EC4  
                            u1455 0531                              u1295 058A                              u1480 0550  
                            u1560 0F13                              u1385 0EA6                              u1481 054F  
                            u1561 0F12                              u1570 0F1D                              u1475 0540  
                            u1571 0F1C                              u1555 0F05                              u1627 00A0  
                            u1485 054C                              u1637 0302                              u1590 0F30  
                            u1647 0E0A                              u1495 0558                              u1591 0F2F  
                            u1575 0F19                              u1657 0E1B                              u1585 0F24  
                            u1667 0F49                              u1677 0F58                              u1687 0F67  
                            u1697 0D41                              _PEIE 005E                 ?_Lcd_Write_String 0070  
                            _anio 0022                              _flag 0020  __end_of_I2C_Master_RepeatedStart 0D0C  
                            _main 001E                              _hora 0028                              btemp 007E  
                            start 000C                ??_Lcd_Write_String 0077                   __end_of_Lcd_Cmd 0D4A  
                           ??_isr 0070                  ?_I2C_Master_Init 0045                  ?_I2C_Master_Read 0072  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                             ?_main 0070  
                 __end_of___awdiv 0573                   __end_of___awmod 0F3F                             _ANSEL 0188  
                 __end_of___lldiv 05DB                   ___awdiv@divisor 0072                             i1l140 049E  
                           i1l142 04D1                             i1l136 0484                             i1l139 049F  
                           i1l155 0503                   ___awdiv@counter 003F                             _PORTA 0005  
                           _PORTB 0006                             _PORTD 0008                             _TRISA 0085  
                           _TRISB 0086                             _TRISD 0088                             _SSPIE 0463  
                           _SSPIF 0063                             _Fecha 002E                             _d_dia 0033  
                           _d_mes 0031                             _d_min 0037                             _d_sec 0039  
                           _u_dia 0034                             _u_mes 0032                             _u_min 0038  
                           _u_sec 003A                             _setup 0DBF                             pclath 000A  
                   ?_enviar_fecha 0070                             status 0003                             wtemp0 007E  
                __end_of_Lcd_Init 0F9C                  __end_of_Lcd_Port 0D6C                   __initialization 000F  
                    __end_of_main 0468                            ??_main 004D                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0072                ??_I2C_Master_Start 0072                            _ADCON0 001F  
              ??_I2C_Master_Write 0074                            _ADRESH 001E                  ___awdiv@dividend 0074  
                          ?_setup 0070                            _ANSELH 0189                            u110_20 0488  
                          u110_21 0487                            u111_20 048E                            u111_21 048D  
                          u120_20 04E1                            u112_20 049B                            u120_21 04E0  
                          u112_21 049A                            u121_20 04EE                            u113_20 04A3  
                          u121_21 04ED                            u113_21 04A2                            u122_20 04FC  
                          u114_20 04A9                            i1l1840 0478                            u122_21 04FB  
                          u114_21 04A8                            i1l1850 048E                            i1l1842 0479  
                          i1l1834 0468                            i1l1860 04AF                            i1l1852 0494  
                          i1l1844 0480                            i1l1836 046C                            i1l1870 04D5  
                          i1l1862 04B6                            i1l1854 049B                            i1l1846 0482  
                          i1l1838 0472                            i1l1880 04F5                            i1l1872 04DB  
                          i1l1864 04BC                            u115_20 04AF                            i1l1856 04A3  
                          i1l1848 0488                            u107_20 046C                            u115_21 04AE  
                          u107_21 046B                            i1l1882 04FC                            i1l1874 04E1  
                          i1l1866 04C3                            i1l1858 04A9                            i1l1876 04E8  
                          i1l1868 04CA                            i1l1884 0502                            i1l1878 04EE  
                          u116_20 04BC                            u108_20 0472                            u116_21 04BB  
                          u108_21 0471                            u117_20 04CA                            u109_20 0480  
                          u117_21 04C9                            u109_21 047F                            u118_20 04D5  
                          u118_21 04D4                            u119_20 04DB                            u119_21 04DA  
                  ??_enviar_fecha 0074                         ??_Lcd_Cmd 0073                            _SSPADD 0093  
                          _TRISC3 043B                            _TRISC4 043C                            _SSPCON 0014  
                          _SSPBUF 0013          _I2C_Master_RepeatedStart 0D03                            _d_anio 002F  
                          ___wmul 07D4                            _d_hora 0035                         ??___awdiv 0076  
                __end_of_leer_dia 076F                         ??___awmod 0077                  __end_of_leer_mes 06A5  
                __end_of_leer_min 0640                  __end_of_leer_seg 1000                         ??___lldiv 003F  
                          _u_anio 0030                  ___awdiv@quotient 0041                            _u_hora 0036  
                 ___awmod@divisor 0043                   ___awmod@counter 0078                            _unidad 003B  
                          saved_w 007E                   Lcd_Set_Cursor@a 003F                   Lcd_Set_Cursor@b 0076  
                 Lcd_Set_Cursor@y 0041                   Lcd_Set_Cursor@z 0040           __end_of__initialization 001A  
               __end_of_Lcd_Clear 0D23                    __pcstackCOMMON 0070                     __end_of_setup 0DED  
                  _Lcd_Set_Cursor 0E98                    _OPTION_REGbits 0081                         ?_Lcd_Init 0070  
                       ?_Lcd_Port 0070                           ??_setup 007A                        __pbssBANK0 0020  
                      __pmaintext 001E                           ?___wmul 0072                        __pintentry 0004  
          __end_of_Lcd_Set_Cursor 0EE4              __end_of_enviar_fecha 0E98                        ??_Lcd_Init 0076  
                      ??_Lcd_Port 0072                           _SSPCON2 0091                           _SSPSTAT 0094  
                      __stringtab 0800                         ?_leer_dia 0078                         ?_leer_mes 0078  
                       ?_leer_min 0078                         ?_leer_seg 0078                    _Lcd_Write_Char 0DED  
                         _Lcd_Cmd 0D30                           ___awdiv 050A                           ___awmod 0EE4  
                         ___lldiv 0573                           _decenas 003C                 __end_of_leer_anio 07D4  
               __end_of_leer_hora 070A                   ?_Lcd_Set_Cursor 0076                           __ptext1 0DBF  
                         __ptext2 0E22                           __ptext3 0573                           __ptext4 0F9C  
                         __ptext5 05DB                           __ptext6 0640                           __ptext7 06A5  
                         __ptext8 070A                           __ptext9 076F                  ___awmod@dividend 0045  
                         clrloop0 0CEA            __end_of_Lcd_Write_Char 0E22              end_of_initialization 001A  
      ??_I2C_Master_RepeatedStart 0072                        ??_leer_dia 003F                        ??_leer_mes 003F  
                      ??_leer_min 003F                        ??_leer_seg 003F                   ___lldiv@divisor 0072  
                 ___lldiv@counter 0044                  I2C_Master_Init@c 0045                  I2C_Master_Read@a 0072  
                       Lcd_Port@a 0072                         _PORTAbits 0005                         _PORTBbits 0006  
                       _PORTDbits 0008                         _TRISCbits 0087                   ?_Lcd_Write_Char 0070  
               Lcd_Write_String@a 0079                 Lcd_Write_String@i 0077                         _Lcd_Clear 0D16  
                  __end_of___wmul 07F9                  _Lcd_Write_String 0D6C               start_initialization 000F  
                     __end_of_isr 050A                 ??_I2C_Master_Init 0049                 ??_I2C_Master_Read 0074  
               ??_I2C_Master_Wait 0072                 ??_I2C_Master_Stop 0072                      _enviar_fecha 0E5A  
                      ?_Lcd_Clear 0070                          ??___wmul 0076                   Lcd_Write_Char@a 0076  
                 Lcd_Write_Char@y 0075                       __pbssCOMMON 007A                         ___latbits 0002  
                   __pcstackBANK0 003F                          ?_Lcd_Cmd 0070                  _I2C_Master_Start 0CF1  
                _I2C_Master_Write 0D0C                  ??_Lcd_Set_Cursor 0077                          ?___awdiv 0072  
                        ?___awmod 0043                          ?___lldiv 0072                         __pstrings 0800  
                       _leer_anio 076F                         _leer_hora 06A5                 interrupt_function 0004  
                  ___wmul@product 0076                         clear_ram0 0CE9                          Lcd_Cmd@a 0075  
                     ??_Lcd_Clear 0076                        _ADCON0bits 001F                       __stringbase 0805  
                      _ADCON1bits 009F                 ___wmul@multiplier 0072                          _WPUBbits 0095  
                      ?_leer_anio 0078                  ??_Lcd_Write_Char 0073                        ?_leer_hora 0078  
                        _Lcd_Init 0F3F                          _Lcd_Port 0D4A               I2C_Master_Read@temp 0076  
        __end_of_Lcd_Write_String 0D91         ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0806  
                 _I2C_Master_Init 0E22                   _I2C_Master_Read 0D91                   _I2C_Master_Wait 0D23  
                 _I2C_Master_Stop 0CFA                          _centenas 003D                          __ptext10 07D4  
                        __ptext11 0D03                          __ptext20 0D6C                          __ptext12 0D91  
                        __ptext21 0DED                          __ptext13 0E5A                          __ptext22 0E98  
                        __ptext14 0D0C                          __ptext23 0F3F                          __ptext15 0CFA  
                        __ptext24 0D16                          __ptext16 0CF1                          __ptext25 0D30  
                        __ptext17 0D23                          __ptext26 0D4A                          __ptext18 0EE4  
                        __ptext27 0468                          __ptext19 050A                          _contador 007A  
                        _leer_dia 070A                          _leer_mes 0640                          _leer_min 05DB  
                        _leer_seg 0F9C          __end_of_I2C_Master_Start 0CFA                       ??_leer_anio 003F  
        __end_of_I2C_Master_Write 0D16                        _INTCONbits 000B                       ??_leer_hora 003F  
              Lcd_Write_Char@temp 0074                          intlevel1 0000                  ___lldiv@dividend 0076  
                       stringcode 0800                        _OSCCONbits 008F           __end_of_I2C_Master_Init 0E5A  
         __end_of_I2C_Master_Read 0DBF           __end_of_I2C_Master_Wait 0D30           __end_of_I2C_Master_Stop 0D03  
              Lcd_Set_Cursor@temp 0042                  ___lldiv@quotient 0040                 I2C_Master_Write@d 0072  
                        stringdir 0800                          stringtab 0800                       _SSPCON2bits 0091  
