

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 10 13:28:04 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Version 2.40
    35                           ; Generated 04/07/2022 GMT
    36                           ; 
    37                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     000E                     	;# 
    84     000E                     	;# 
    85     000F                     	;# 
    86     0010                     	;# 
    87     0011                     	;# 
    88     0012                     	;# 
    89     0013                     	;# 
    90     0014                     	;# 
    91     0015                     	;# 
    92     0015                     	;# 
    93     0016                     	;# 
    94     0017                     	;# 
    95     0018                     	;# 
    96     0019                     	;# 
    97     001A                     	;# 
    98     001B                     	;# 
    99     001B                     	;# 
   100     001C                     	;# 
   101     001D                     	;# 
   102     001E                     	;# 
   103     001F                     	;# 
   104     0081                     	;# 
   105     0085                     	;# 
   106     0086                     	;# 
   107     0087                     	;# 
   108     0088                     	;# 
   109     0089                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     008E                     	;# 
   113     008F                     	;# 
   114     0090                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0093                     	;# 
   119     0093                     	;# 
   120     0094                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     009F                     	;# 
   132     0105                     	;# 
   133     0107                     	;# 
   134     0108                     	;# 
   135     0109                     	;# 
   136     010C                     	;# 
   137     010C                     	;# 
   138     010D                     	;# 
   139     010E                     	;# 
   140     010F                     	;# 
   141     0185                     	;# 
   142     0187                     	;# 
   143     0188                     	;# 
   144     0189                     	;# 
   145     018C                     	;# 
   146     018D                     	;# 
   147     0000                     	;# 
   148     0001                     	;# 
   149     0002                     	;# 
   150     0003                     	;# 
   151     0004                     	;# 
   152     0005                     	;# 
   153     0006                     	;# 
   154     0007                     	;# 
   155     0008                     	;# 
   156     0009                     	;# 
   157     000A                     	;# 
   158     000B                     	;# 
   159     000C                     	;# 
   160     000D                     	;# 
   161     000E                     	;# 
   162     000E                     	;# 
   163     000F                     	;# 
   164     0010                     	;# 
   165     0011                     	;# 
   166     0012                     	;# 
   167     0013                     	;# 
   168     0014                     	;# 
   169     0015                     	;# 
   170     0015                     	;# 
   171     0016                     	;# 
   172     0017                     	;# 
   173     0018                     	;# 
   174     0019                     	;# 
   175     001A                     	;# 
   176     001B                     	;# 
   177     001B                     	;# 
   178     001C                     	;# 
   179     001D                     	;# 
   180     001E                     	;# 
   181     001F                     	;# 
   182     0081                     	;# 
   183     0085                     	;# 
   184     0086                     	;# 
   185     0087                     	;# 
   186     0088                     	;# 
   187     0089                     	;# 
   188     008C                     	;# 
   189     008D                     	;# 
   190     008E                     	;# 
   191     008F                     	;# 
   192     0090                     	;# 
   193     0091                     	;# 
   194     0092                     	;# 
   195     0093                     	;# 
   196     0093                     	;# 
   197     0093                     	;# 
   198     0094                     	;# 
   199     0095                     	;# 
   200     0096                     	;# 
   201     0097                     	;# 
   202     0098                     	;# 
   203     0099                     	;# 
   204     009A                     	;# 
   205     009B                     	;# 
   206     009C                     	;# 
   207     009D                     	;# 
   208     009E                     	;# 
   209     009F                     	;# 
   210     0105                     	;# 
   211     0107                     	;# 
   212     0108                     	;# 
   213     0109                     	;# 
   214     010C                     	;# 
   215     010C                     	;# 
   216     010D                     	;# 
   217     010E                     	;# 
   218     010F                     	;# 
   219     0185                     	;# 
   220     0187                     	;# 
   221     0188                     	;# 
   222     0189                     	;# 
   223     018C                     	;# 
   224     018D                     	;# 
   225     0000                     	;# 
   226     0001                     	;# 
   227     0002                     	;# 
   228     0003                     	;# 
   229     0004                     	;# 
   230     0005                     	;# 
   231     0006                     	;# 
   232     0007                     	;# 
   233     0008                     	;# 
   234     0009                     	;# 
   235     000A                     	;# 
   236     000B                     	;# 
   237     000C                     	;# 
   238     000D                     	;# 
   239     000E                     	;# 
   240     000E                     	;# 
   241     000F                     	;# 
   242     0010                     	;# 
   243     0011                     	;# 
   244     0012                     	;# 
   245     0013                     	;# 
   246     0014                     	;# 
   247     0015                     	;# 
   248     0015                     	;# 
   249     0016                     	;# 
   250     0017                     	;# 
   251     0018                     	;# 
   252     0019                     	;# 
   253     001A                     	;# 
   254     001B                     	;# 
   255     001B                     	;# 
   256     001C                     	;# 
   257     001D                     	;# 
   258     001E                     	;# 
   259     001F                     	;# 
   260     0081                     	;# 
   261     0085                     	;# 
   262     0086                     	;# 
   263     0087                     	;# 
   264     0088                     	;# 
   265     0089                     	;# 
   266     008C                     	;# 
   267     008D                     	;# 
   268     008E                     	;# 
   269     008F                     	;# 
   270     0090                     	;# 
   271     0091                     	;# 
   272     0092                     	;# 
   273     0093                     	;# 
   274     0093                     	;# 
   275     0093                     	;# 
   276     0094                     	;# 
   277     0095                     	;# 
   278     0096                     	;# 
   279     0097                     	;# 
   280     0098                     	;# 
   281     0099                     	;# 
   282     009A                     	;# 
   283     009B                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     009F                     	;# 
   288     0105                     	;# 
   289     0107                     	;# 
   290     0108                     	;# 
   291     0109                     	;# 
   292     010C                     	;# 
   293     010C                     	;# 
   294     010D                     	;# 
   295     010E                     	;# 
   296     010F                     	;# 
   297     0185                     	;# 
   298     0187                     	;# 
   299     0188                     	;# 
   300     0189                     	;# 
   301     018C                     	;# 
   302     018D                     	;# 
   303     0000                     	;# 
   304     0001                     	;# 
   305     0002                     	;# 
   306     0003                     	;# 
   307     0004                     	;# 
   308     0005                     	;# 
   309     0006                     	;# 
   310     0007                     	;# 
   311     0008                     	;# 
   312     0009                     	;# 
   313     000A                     	;# 
   314     000B                     	;# 
   315     000C                     	;# 
   316     000D                     	;# 
   317     000E                     	;# 
   318     000E                     	;# 
   319     000F                     	;# 
   320     0010                     	;# 
   321     0011                     	;# 
   322     0012                     	;# 
   323     0013                     	;# 
   324     0014                     	;# 
   325     0015                     	;# 
   326     0015                     	;# 
   327     0016                     	;# 
   328     0017                     	;# 
   329     0018                     	;# 
   330     0019                     	;# 
   331     001A                     	;# 
   332     001B                     	;# 
   333     001B                     	;# 
   334     001C                     	;# 
   335     001D                     	;# 
   336     001E                     	;# 
   337     001F                     	;# 
   338     0081                     	;# 
   339     0085                     	;# 
   340     0086                     	;# 
   341     0087                     	;# 
   342     0088                     	;# 
   343     0089                     	;# 
   344     008C                     	;# 
   345     008D                     	;# 
   346     008E                     	;# 
   347     008F                     	;# 
   348     0090                     	;# 
   349     0091                     	;# 
   350     0092                     	;# 
   351     0093                     	;# 
   352     0093                     	;# 
   353     0093                     	;# 
   354     0094                     	;# 
   355     0095                     	;# 
   356     0096                     	;# 
   357     0097                     	;# 
   358     0098                     	;# 
   359     0099                     	;# 
   360     009A                     	;# 
   361     009B                     	;# 
   362     009C                     	;# 
   363     009D                     	;# 
   364     009E                     	;# 
   365     009F                     	;# 
   366     0105                     	;# 
   367     0107                     	;# 
   368     0108                     	;# 
   369     0109                     	;# 
   370     010C                     	;# 
   371     010C                     	;# 
   372     010D                     	;# 
   373     010E                     	;# 
   374     010F                     	;# 
   375     0185                     	;# 
   376     0187                     	;# 
   377     0188                     	;# 
   378     0189                     	;# 
   379     018C                     	;# 
   380     018D                     	;# 
   381     0000                     	;# 
   382     0001                     	;# 
   383     0002                     	;# 
   384     0003                     	;# 
   385     0004                     	;# 
   386     0005                     	;# 
   387     0006                     	;# 
   388     0007                     	;# 
   389     0008                     	;# 
   390     0009                     	;# 
   391     000A                     	;# 
   392     000B                     	;# 
   393     000C                     	;# 
   394     000D                     	;# 
   395     000E                     	;# 
   396     000E                     	;# 
   397     000F                     	;# 
   398     0010                     	;# 
   399     0011                     	;# 
   400     0012                     	;# 
   401     0013                     	;# 
   402     0014                     	;# 
   403     0015                     	;# 
   404     0015                     	;# 
   405     0016                     	;# 
   406     0017                     	;# 
   407     0018                     	;# 
   408     0019                     	;# 
   409     001A                     	;# 
   410     001B                     	;# 
   411     001B                     	;# 
   412     001C                     	;# 
   413     001D                     	;# 
   414     001E                     	;# 
   415     001F                     	;# 
   416     0081                     	;# 
   417     0085                     	;# 
   418     0086                     	;# 
   419     0087                     	;# 
   420     0088                     	;# 
   421     0089                     	;# 
   422     008C                     	;# 
   423     008D                     	;# 
   424     008E                     	;# 
   425     008F                     	;# 
   426     0090                     	;# 
   427     0091                     	;# 
   428     0092                     	;# 
   429     0093                     	;# 
   430     0093                     	;# 
   431     0093                     	;# 
   432     0094                     	;# 
   433     0095                     	;# 
   434     0096                     	;# 
   435     0097                     	;# 
   436     0098                     	;# 
   437     0099                     	;# 
   438     009A                     	;# 
   439     009B                     	;# 
   440     009C                     	;# 
   441     009D                     	;# 
   442     009E                     	;# 
   443     009F                     	;# 
   444     0105                     	;# 
   445     0107                     	;# 
   446     0108                     	;# 
   447     0109                     	;# 
   448     010C                     	;# 
   449     010C                     	;# 
   450     010D                     	;# 
   451     010E                     	;# 
   452     010F                     	;# 
   453     0185                     	;# 
   454     0187                     	;# 
   455     0188                     	;# 
   456     0189                     	;# 
   457     018C                     	;# 
   458     018D                     	;# 
   459     0008                     _PORTDbits	set	8
   460     001F                     _ADCON0	set	31
   461     001E                     _ADRESH	set	30
   462     001F                     _ADCON0bits	set	31
   463     0013                     _SSPBUF	set	19
   464     0014                     _SSPCON	set	20
   465     0008                     _PORTD	set	8
   466     0006                     _PORTB	set	6
   467     0043                     _RD3	set	67
   468     0047                     _RD7	set	71
   469     0046                     _RD6	set	70
   470     0045                     _RD5	set	69
   471     0044                     _RD4	set	68
   472     0063                     _SSPIF	set	99
   473     005E                     _PEIE	set	94
   474     005F                     _GIE	set	95
   475     009F                     _ADCON1bits	set	159
   476     0091                     _SSPCON2bits	set	145
   477     0087                     _TRISCbits	set	135
   478     0094                     _SSPSTAT	set	148
   479     0093                     _SSPADD	set	147
   480     0091                     _SSPCON2	set	145
   481     008F                     _OSCCONbits	set	143
   482     0088                     _TRISD	set	136
   483     0086                     _TRISB	set	134
   484     0463                     _SSPIE	set	1123
   485     043C                     _TRISC4	set	1084
   486     043B                     _TRISC3	set	1083
   487     0189                     _ANSELH	set	393
   488     0188                     _ANSEL	set	392
   489                           
   490                           	psect	strings
   491     0003                     __pstrings:
   492     0003                     stringtab:
   493     0003                     __stringtab:
   494     0003                     stringcode:	
   495                           ;	String table - string pointers are 1 byte each
   496                           
   497     0003                     stringdir:
   498     0003  3000               	movlw	high stringdir
   499     0004  008A               	movwf	10
   500     0005  0804               	movf	4,w
   501     0006  0A84               	incf	4,f
   502     0007  0782               	addwf	2,f
   503     0008                     __stringbase:
   504     0008  3400               	retlw	0
   505     0009                     __end_of__stringtab:
   506     0009                     STR_1:
   507     0009  3441               	retlw	65	;'A'
   508     000A  3444               	retlw	68	;'D'
   509     000B  3443               	retlw	67	;'C'
   510     000C  3420               	retlw	32	;' '
   511     000D  3420               	retlw	32	;' '
   512     000E  3420               	retlw	32	;' '
   513     000F  3420               	retlw	32	;' '
   514     0010  3420               	retlw	32	;' '
   515     0011  3446               	retlw	70	;'F'
   516     0012  3465               	retlw	101	;'e'
   517     0013  3463               	retlw	99	;'c'
   518     0014  3468               	retlw	104	;'h'
   519     0015  3461               	retlw	97	;'a'
   520     0016  3400               	retlw	0
   521                           
   522                           	psect	cinit
   523     07F3                     start_initialization:	
   524                           ; #config settings
   525                           
   526     07F3                     __initialization:
   527                           
   528                           ; Clear objects allocated to BANK0
   529     07F3  1383               	bcf	3,7	;select IRP bank0
   530     07F4  3020               	movlw	low __pbssBANK0
   531     07F5  0084               	movwf	4
   532     07F6  3030               	movlw	low (__pbssBANK0+16)
   533     07F7  120A  118A  2362  120A  118A  	fcall	clear_ram0
   534     07FC                     end_of_initialization:	
   535                           ;End of C runtime variable initialization code
   536                           
   537     07FC                     __end_of__initialization:
   538     07FC  0183               	clrf	3
   539     07FD  120A  118A  2F00   	ljmp	_main	;jump to C main() function
   540                           
   541                           	psect	bssBANK0
   542     0020                     __pbssBANK0:
   543     0020                     _anio:
   544     0020                     	ds	2
   545     0022                     _mes:
   546     0022                     	ds	2
   547     0024                     _dia:
   548     0024                     	ds	2
   549     0026                     _hora:
   550     0026                     	ds	2
   551     0028                     _min:
   552     0028                     	ds	2
   553     002A                     _sec:
   554     002A                     	ds	2
   555     002C                     _unidad:
   556     002C                     	ds	1
   557     002D                     _decenas:
   558     002D                     	ds	1
   559     002E                     _centenas:
   560     002E                     	ds	1
   561     002F                     _ADC:
   562     002F                     	ds	1
   563                           
   564                           	psect	clrtext
   565     0362                     clear_ram0:	
   566                           ;	Called with FSR containing the base address, and
   567                           ;	W with the last address+1
   568                           
   569     0362  0064               	clrwdt	;clear the watchdog before getting into this loop
   570     0363                     clrloop0:
   571     0363  0180               	clrf	0	;clear RAM location pointed to by FSR
   572     0364  0A84               	incf	4,f	;increment pointer
   573     0365  0604               	xorwf	4,w	;XOR with final address
   574     0366  1903               	btfsc	3,2	;have we reached the end yet?
   575     0367  3400               	retlw	0	;all done for this memory range, return
   576     0368  0604               	xorwf	4,w	;XOR again to restore value
   577     0369  2B63               	goto	clrloop0	;do the next byte
   578                           
   579                           	psect	cstackCOMMON
   580     0070                     __pcstackCOMMON:
   581     0070                     ?_setup:
   582     0070                     ?_Lcd_Init:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0070                     ?_Lcd_Clear:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0070                     ?_Lcd_Write_String:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0070                     ?_I2C_Master_Start:	
   592                           ; 1 bytes @ 0x0
   593                           
   594     0070                     ??_I2C_Master_Start:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0070                     ?_I2C_Master_Write:	
   598                           ; 1 bytes @ 0x0
   599                           
   600     0070                     ?_I2C_Master_Stop:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0070                     ??_I2C_Master_Stop:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0070                     ?_leer_hora:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0070                     ?_Lcd_Write_Char:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0070                     ?_I2C_Master_RepeatedStart:	
   613                           ; 1 bytes @ 0x0
   614                           
   615     0070                     ??_I2C_Master_RepeatedStart:	
   616                           ; 1 bytes @ 0x0
   617                           
   618     0070                     ?_main:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0070                     ?_I2C_Master_Wait:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0070                     ??_I2C_Master_Wait:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0070                     ?_Lcd_Port:	
   628                           ; 1 bytes @ 0x0
   629                           
   630     0070                     ??_Lcd_Port:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0070                     ?_Lcd_Cmd:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0070                     ?_I2C_Master_Read:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0070                     ?___awdiv:	
   640                           ; 2 bytes @ 0x0
   641                           
   642     0070                     ?___lldiv:	
   643                           ; 2 bytes @ 0x0
   644                           
   645     0070                     Lcd_Port@a:	
   646                           ; 4 bytes @ 0x0
   647                           
   648     0070                     I2C_Master_Write@d:	
   649                           ; 1 bytes @ 0x0
   650                           
   651     0070                     I2C_Master_Read@a:	
   652                           ; 2 bytes @ 0x0
   653                           
   654     0070                     ___awdiv@divisor:	
   655                           ; 2 bytes @ 0x0
   656                           
   657     0070                     ___lldiv@divisor:	
   658                           ; 2 bytes @ 0x0
   659                           
   660                           
   661                           ; 4 bytes @ 0x0
   662     0070                     	ds	1
   663     0071                     ??_Lcd_Write_Char:
   664     0071                     ??_Lcd_Cmd:	
   665                           ; 1 bytes @ 0x1
   666                           
   667                           
   668                           ; 1 bytes @ 0x1
   669     0071                     	ds	1
   670     0072                     ??_I2C_Master_Write:
   671     0072                     ??_I2C_Master_Read:	
   672                           ; 1 bytes @ 0x2
   673                           
   674     0072                     Lcd_Write_Char@temp:	
   675                           ; 1 bytes @ 0x2
   676                           
   677     0072                     ___awdiv@dividend:	
   678                           ; 1 bytes @ 0x2
   679                           
   680                           
   681                           ; 2 bytes @ 0x2
   682     0072                     	ds	1
   683     0073                     Lcd_Cmd@a:
   684     0073                     Lcd_Write_Char@y:	
   685                           ; 1 bytes @ 0x3
   686                           
   687                           
   688                           ; 1 bytes @ 0x3
   689     0073                     	ds	1
   690     0074                     ??_Lcd_Init:
   691     0074                     ??_Lcd_Clear:	
   692                           ; 1 bytes @ 0x4
   693                           
   694     0074                     ?_Lcd_Set_Cursor:	
   695                           ; 1 bytes @ 0x4
   696                           
   697     0074                     ??___awdiv:	
   698                           ; 1 bytes @ 0x4
   699                           
   700     0074                     Lcd_Set_Cursor@b:	
   701                           ; 1 bytes @ 0x4
   702                           
   703     0074                     Lcd_Write_Char@a:	
   704                           ; 1 bytes @ 0x4
   705                           
   706     0074                     I2C_Master_Read@temp:	
   707                           ; 1 bytes @ 0x4
   708                           
   709     0074                     ___lldiv@dividend:	
   710                           ; 2 bytes @ 0x4
   711                           
   712                           
   713                           ; 4 bytes @ 0x4
   714     0074                     	ds	1
   715     0075                     ??_Lcd_Set_Cursor:
   716     0075                     ??_Lcd_Write_String:	
   717                           ; 1 bytes @ 0x5
   718                           
   719     0075                     ___awdiv@counter:	
   720                           ; 1 bytes @ 0x5
   721                           
   722     0075                     Lcd_Write_String@i:	
   723                           ; 1 bytes @ 0x5
   724                           
   725                           
   726                           ; 2 bytes @ 0x5
   727     0075                     	ds	1
   728     0076                     ??_leer_hora:
   729     0076                     Lcd_Set_Cursor@a:	
   730                           ; 1 bytes @ 0x6
   731                           
   732     0076                     ___awdiv@sign:	
   733                           ; 1 bytes @ 0x6
   734                           
   735                           
   736                           ; 1 bytes @ 0x6
   737     0076                     	ds	1
   738     0077                     Lcd_Set_Cursor@z:
   739     0077                     Lcd_Write_String@a:	
   740                           ; 1 bytes @ 0x7
   741                           
   742     0077                     ___awdiv@quotient:	
   743                           ; 1 bytes @ 0x7
   744                           
   745                           
   746                           ; 2 bytes @ 0x7
   747     0077                     	ds	1
   748     0078                     ??___lldiv:
   749     0078                     Lcd_Set_Cursor@y:	
   750                           ; 1 bytes @ 0x8
   751                           
   752                           
   753                           ; 1 bytes @ 0x8
   754     0078                     	ds	1
   755     0079                     ?___awmod:
   756     0079                     Lcd_Set_Cursor@temp:	
   757                           ; 2 bytes @ 0x9
   758                           
   759     0079                     ___awmod@divisor:	
   760                           ; 1 bytes @ 0x9
   761                           
   762     0079                     ___lldiv@quotient:	
   763                           ; 2 bytes @ 0x9
   764                           
   765                           
   766                           ; 4 bytes @ 0x9
   767     0079                     	ds	2
   768     007B                     ___awmod@dividend:
   769                           
   770                           ; 2 bytes @ 0xB
   771     007B                     	ds	2
   772     007D                     ??___awmod:
   773     007D                     ___lldiv@counter:	
   774                           ; 1 bytes @ 0xD
   775                           
   776                           
   777                           ; 1 bytes @ 0xD
   778     007D                     	ds	1
   779     007E                     ??_setup:
   780                           
   781                           	psect	cstackBANK0
   782     0030                     __pcstackBANK0:	
   783                           ; 1 bytes @ 0xE
   784                           
   785     0030                     ?_I2C_Master_Init:
   786     0030                     ___awmod@counter:	
   787                           ; 1 bytes @ 0x0
   788                           
   789     0030                     I2C_Master_Init@c:	
   790                           ; 1 bytes @ 0x0
   791                           
   792                           
   793                           ; 4 bytes @ 0x0
   794     0030                     	ds	1
   795     0031                     ___awmod@sign:
   796                           
   797                           ; 1 bytes @ 0x1
   798     0031                     	ds	3
   799     0034                     ??_I2C_Master_Init:
   800                           
   801                           ; 1 bytes @ 0x4
   802     0034                     	ds	4
   803     0038                     ??_main:
   804                           
   805                           ; 1 bytes @ 0x8
   806     0038                     	ds	2
   807                           
   808                           	psect	maintext
   809     0700                     __pmaintext:	
   810 ;;
   811 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   812 ;;
   813 ;; *************** function _main *****************
   814 ;; Defined at:
   815 ;;		line 65 in file "main.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : B00/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   829 ;;      Params:         0       0       0       0       0
   830 ;;      Locals:         0       0       0       0       0
   831 ;;      Temps:          0       2       0       0       0
   832 ;;      Totals:         0       2       0       0       0
   833 ;;Total ram usage:        2 bytes
   834 ;; Hardware stack levels required when called: 3
   835 ;; This function calls:
   836 ;;		_I2C_Master_Read
   837 ;;		_I2C_Master_Start
   838 ;;		_I2C_Master_Stop
   839 ;;		_I2C_Master_Write
   840 ;;		_Lcd_Clear
   841 ;;		_Lcd_Init
   842 ;;		_Lcd_Set_Cursor
   843 ;;		_Lcd_Write_Char
   844 ;;		_Lcd_Write_String
   845 ;;		___awdiv
   846 ;;		___awmod
   847 ;;		_leer_hora
   848 ;;		_setup
   849 ;; This function is called by:
   850 ;;		Startup code after reset
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854     0700                     _main:	
   855                           ;psect for function _main
   856                           
   857     0700                     l1373:	
   858                           ;incstack = 0
   859                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   860                           
   861                           
   862                           ;main.c: 66:     setup();
   863     0700  120A  118A  23C3  120A  118A  	fcall	_setup
   864                           
   865                           ;main.c: 67:     Lcd_Init();
   866     0705  120A  118A  2567  120A  118A  	fcall	_Lcd_Init
   867                           
   868                           ;main.c: 68:     Lcd_Clear();
   869     070A  120A  118A  238F  120A  118A  	fcall	_Lcd_Clear
   870                           
   871                           ;main.c: 69:     Lcd_Set_Cursor(1,1);
   872     070F  01F4               	clrf	Lcd_Set_Cursor@b
   873     0710  0AF4               	incf	Lcd_Set_Cursor@b,f
   874     0711  3001               	movlw	1
   875     0712  120A  118A  24C6  120A  118A  	fcall	_Lcd_Set_Cursor
   876     0717                     l1375:
   877                           
   878                           ;main.c: 70:     Lcd_Write_String("ADC     Fecha");
   879     0717  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   880     0718  120A  118A  2406  120A  118A  	fcall	_Lcd_Write_String
   881     071D                     l1377:
   882                           
   883                           ;main.c: 87:         I2C_Master_Start();
   884     071D  120A  118A  2373  120A  118A  	fcall	_I2C_Master_Start
   885     0722                     l1379:
   886                           
   887                           ;main.c: 88:         I2C_Master_Write(0x50);
   888     0722  3050               	movlw	80
   889     0723  00F0               	movwf	I2C_Master_Write@d
   890     0724  3000               	movlw	0
   891     0725  00F1               	movwf	I2C_Master_Write@d+1
   892     0726  120A  118A  2385  120A  118A  	fcall	_I2C_Master_Write
   893     072B                     l1381:
   894                           
   895                           ;main.c: 89:         I2C_Master_Write(PORTB);
   896     072B  1283               	bcf	3,5	;RP0=0, select bank0
   897     072C  1303               	bcf	3,6	;RP1=0, select bank0
   898     072D  0806               	movf	6,w	;volatile
   899     072E  00B8               	movwf	??_main
   900     072F  01B9               	clrf	??_main+1
   901     0730  0838               	movf	??_main,w
   902     0731  00F0               	movwf	I2C_Master_Write@d
   903     0732  0839               	movf	??_main+1,w
   904     0733  00F1               	movwf	I2C_Master_Write@d+1
   905     0734  120A  118A  2385  120A  118A  	fcall	_I2C_Master_Write
   906     0739                     l1383:
   907                           
   908                           ;main.c: 90:         I2C_Master_Stop();
   909     0739  120A  118A  237C  120A  118A  	fcall	_I2C_Master_Stop
   910     073E                     l1385:
   911                           
   912                           ;main.c: 91:         _delay((unsigned long)((250)*(8000000/4000000.0)));
   913     073E  30A5               	movlw	165
   914     073F  1283               	bcf	3,5	;RP0=0, select bank0
   915     0740  1303               	bcf	3,6	;RP1=0, select bank0
   916     0741  00B8               	movwf	??_main
   917     0742                     u827:
   918     0742  0BB8               	decfsz	??_main,f
   919     0743  2F42               	goto	u827
   920     0744  2F45               	nop2
   921     0745                     l1387:
   922                           
   923                           ;main.c: 93:         I2C_Master_Start();
   924     0745  120A  118A  2373  120A  118A  	fcall	_I2C_Master_Start
   925     074A                     l1389:
   926                           
   927                           ;main.c: 94:         I2C_Master_Write(0x51);
   928     074A  3051               	movlw	81
   929     074B  00F0               	movwf	I2C_Master_Write@d
   930     074C  3000               	movlw	0
   931     074D  00F1               	movwf	I2C_Master_Write@d+1
   932     074E  120A  118A  2385  120A  118A  	fcall	_I2C_Master_Write
   933     0753                     l1391:
   934                           
   935                           ;main.c: 95:         ADC = I2C_Master_Read(0);
   936     0753  3000               	movlw	0
   937     0754  00F0               	movwf	I2C_Master_Read@a
   938     0755  00F1               	movwf	I2C_Master_Read@a+1
   939     0756  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Read
   940     075B  0870               	movf	?_I2C_Master_Read,w
   941     075C  1283               	bcf	3,5	;RP0=0, select bank0
   942     075D  1303               	bcf	3,6	;RP1=0, select bank0
   943     075E  00AF               	movwf	_ADC
   944     075F                     l1393:
   945                           
   946                           ;main.c: 96:         I2C_Master_Stop();
   947     075F  120A  118A  237C  120A  118A  	fcall	_I2C_Master_Stop
   948     0764                     l1395:
   949                           
   950                           ;main.c: 97:         _delay((unsigned long)((250)*(8000000/4000000.0)));
   951     0764  30A5               	movlw	165
   952     0765  1283               	bcf	3,5	;RP0=0, select bank0
   953     0766  1303               	bcf	3,6	;RP1=0, select bank0
   954     0767  00B8               	movwf	??_main
   955     0768                     u837:
   956     0768  0BB8               	decfsz	??_main,f
   957     0769  2F68               	goto	u837
   958     076A  2F6B               	nop2
   959     076B                     l1397:
   960                           
   961                           ;main.c: 99:         leer_hora();
   962     076B  120A  118A  2691  120A  118A  	fcall	_leer_hora
   963     0770                     l1399:
   964                           
   965                           ;main.c: 101:         centenas = (ADC/100);
   966     0770  3064               	movlw	100
   967     0771  00F0               	movwf	___awdiv@divisor
   968     0772  3000               	movlw	0
   969     0773  00F1               	movwf	___awdiv@divisor+1
   970     0774  1283               	bcf	3,5	;RP0=0, select bank0
   971     0775  1303               	bcf	3,6	;RP1=0, select bank0
   972     0776  082F               	movf	_ADC,w
   973     0777  00B8               	movwf	??_main
   974     0778  01B9               	clrf	??_main+1
   975     0779  0838               	movf	??_main,w
   976     077A  00F2               	movwf	___awdiv@dividend
   977     077B  0839               	movf	??_main+1,w
   978     077C  00F3               	movwf	___awdiv@dividend+1
   979     077D  120A  118A  262A  120A  118A  	fcall	___awdiv
   980     0782  0870               	movf	?___awdiv,w
   981     0783  1283               	bcf	3,5	;RP0=0, select bank0
   982     0784  1303               	bcf	3,6	;RP1=0, select bank0
   983     0785  00AE               	movwf	_centenas
   984     0786                     l1401:
   985                           
   986                           ;main.c: 102:         decenas = (ADC/10)%10;
   987     0786  300A               	movlw	10
   988     0787  00F9               	movwf	___awmod@divisor
   989     0788  3000               	movlw	0
   990     0789  00FA               	movwf	___awmod@divisor+1
   991     078A  300A               	movlw	10
   992     078B  00F0               	movwf	___awdiv@divisor
   993     078C  3000               	movlw	0
   994     078D  00F1               	movwf	___awdiv@divisor+1
   995     078E  082F               	movf	_ADC,w
   996     078F  00B8               	movwf	??_main
   997     0790  01B9               	clrf	??_main+1
   998     0791  0838               	movf	??_main,w
   999     0792  00F2               	movwf	___awdiv@dividend
  1000     0793  0839               	movf	??_main+1,w
  1001     0794  00F3               	movwf	___awdiv@dividend+1
  1002     0795  120A  118A  262A  120A  118A  	fcall	___awdiv
  1003     079A  0871               	movf	?___awdiv+1,w
  1004     079B  00FC               	movwf	___awmod@dividend+1
  1005     079C  0870               	movf	?___awdiv,w
  1006     079D  00FB               	movwf	___awmod@dividend
  1007     079E  120A  118A  250C  120A  118A  	fcall	___awmod
  1008     07A3  0879               	movf	?___awmod,w
  1009     07A4  1283               	bcf	3,5	;RP0=0, select bank0
  1010     07A5  1303               	bcf	3,6	;RP1=0, select bank0
  1011     07A6  00AD               	movwf	_decenas
  1012     07A7                     l1403:
  1013                           
  1014                           ;main.c: 103:         unidad = ADC%10;
  1015     07A7  300A               	movlw	10
  1016     07A8  00F9               	movwf	___awmod@divisor
  1017     07A9  3000               	movlw	0
  1018     07AA  00FA               	movwf	___awmod@divisor+1
  1019     07AB  082F               	movf	_ADC,w
  1020     07AC  00B8               	movwf	??_main
  1021     07AD  01B9               	clrf	??_main+1
  1022     07AE  0838               	movf	??_main,w
  1023     07AF  00FB               	movwf	___awmod@dividend
  1024     07B0  0839               	movf	??_main+1,w
  1025     07B1  00FC               	movwf	___awmod@dividend+1
  1026     07B2  120A  118A  250C  120A  118A  	fcall	___awmod
  1027     07B7  0879               	movf	?___awmod,w
  1028     07B8  1283               	bcf	3,5	;RP0=0, select bank0
  1029     07B9  1303               	bcf	3,6	;RP1=0, select bank0
  1030     07BA  00AC               	movwf	_unidad
  1031     07BB                     l1405:
  1032                           
  1033                           ;main.c: 105:         Lcd_Set_Cursor(2,1);
  1034     07BB  01F4               	clrf	Lcd_Set_Cursor@b
  1035     07BC  0AF4               	incf	Lcd_Set_Cursor@b,f
  1036     07BD  3002               	movlw	2
  1037     07BE  120A  118A  24C6  120A  118A  	fcall	_Lcd_Set_Cursor
  1038     07C3                     l1407:
  1039                           
  1040                           ;main.c: 106:         Lcd_Write_Char(centenas + 48);
  1041     07C3  1283               	bcf	3,5	;RP0=0, select bank0
  1042     07C4  1303               	bcf	3,6	;RP1=0, select bank0
  1043     07C5  082E               	movf	_centenas,w
  1044     07C6  3E30               	addlw	48
  1045     07C7  120A  118A  2459  120A  118A  	fcall	_Lcd_Write_Char
  1046     07CC                     l1409:
  1047                           
  1048                           ;main.c: 107:         Lcd_Write_Char(decenas + 48);
  1049     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1050     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1051     07CE  082D               	movf	_decenas,w
  1052     07CF  3E30               	addlw	48
  1053     07D0  120A  118A  2459  120A  118A  	fcall	_Lcd_Write_Char
  1054     07D5                     l1411:
  1055                           
  1056                           ;main.c: 108:         Lcd_Write_Char(unidad + 48);
  1057     07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1058     07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1059     07D7  082C               	movf	_unidad,w
  1060     07D8  3E30               	addlw	48
  1061     07D9  120A  118A  2459  120A  118A  	fcall	_Lcd_Write_Char
  1062     07DE                     l1413:
  1063                           
  1064                           ;main.c: 110:         Lcd_Set_Cursor(2,8);
  1065     07DE  3008               	movlw	8
  1066     07DF  00F4               	movwf	Lcd_Set_Cursor@b
  1067     07E0  3002               	movlw	2
  1068     07E1  120A  118A  24C6  120A  118A  	fcall	_Lcd_Set_Cursor
  1069     07E6                     l1415:
  1070                           
  1071                           ;main.c: 111:         Lcd_Write_Char(sec+48);
  1072     07E6  1283               	bcf	3,5	;RP0=0, select bank0
  1073     07E7  1303               	bcf	3,6	;RP1=0, select bank0
  1074     07E8  082A               	movf	_sec,w
  1075     07E9  3E30               	addlw	48
  1076     07EA  120A  118A  2459  120A  118A  	fcall	_Lcd_Write_Char
  1077     07EF  2F1D               	goto	l1377
  1078     07F0  120A  118A  2800   	ljmp	start
  1079     07F3                     __end_of_main:
  1080                           
  1081                           	psect	text1
  1082     03C3                     __ptext1:	
  1083 ;; *************** function _setup *****************
  1084 ;; Defined at:
  1085 ;;		line 120 in file "main.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;		None
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		wreg, status,2, status,0, pclath, cstack
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1099 ;;      Params:         0       0       0       0       0
  1100 ;;      Locals:         0       0       0       0       0
  1101 ;;      Temps:          0       0       0       0       0
  1102 ;;      Totals:         0       0       0       0       0
  1103 ;;Total ram usage:        0 bytes
  1104 ;; Hardware stack levels used: 1
  1105 ;; Hardware stack levels required when called: 2
  1106 ;; This function calls:
  1107 ;;		_I2C_Master_Init
  1108 ;; This function is called by:
  1109 ;;		_main
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113     03C3                     _setup:	
  1114                           ;psect for function _setup
  1115                           
  1116     03C3                     l1241:	
  1117                           ;incstack = 0
  1118                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1119                           
  1120                           
  1121                           ;main.c: 121:     ANSEL = 0;
  1122     03C3  1683               	bsf	3,5	;RP0=1, select bank3
  1123     03C4  1703               	bsf	3,6	;RP1=1, select bank3
  1124     03C5  0188               	clrf	8	;volatile
  1125                           
  1126                           ;main.c: 122:     ANSELH = 0;
  1127     03C6  0189               	clrf	9	;volatile
  1128                           
  1129                           ;main.c: 123:     TRISB = 0;
  1130     03C7  1683               	bsf	3,5	;RP0=1, select bank1
  1131     03C8  1303               	bcf	3,6	;RP1=0, select bank1
  1132     03C9  0186               	clrf	6	;volatile
  1133                           
  1134                           ;main.c: 124:     TRISD = 0;
  1135     03CA  0188               	clrf	8	;volatile
  1136                           
  1137                           ;main.c: 125:     PORTB = 0;
  1138     03CB  1283               	bcf	3,5	;RP0=0, select bank0
  1139     03CC  1303               	bcf	3,6	;RP1=0, select bank0
  1140     03CD  0186               	clrf	6	;volatile
  1141                           
  1142                           ;main.c: 126:     PORTD = 0;
  1143     03CE  0188               	clrf	8	;volatile
  1144     03CF                     l1243:
  1145                           
  1146                           ;main.c: 127:     OSCCONbits.IRCF = 0b111;
  1147     03CF  3070               	movlw	112
  1148     03D0  1683               	bsf	3,5	;RP0=1, select bank1
  1149     03D1  1303               	bcf	3,6	;RP1=0, select bank1
  1150     03D2  048F               	iorwf	15,f	;volatile
  1151     03D3                     l1245:
  1152                           
  1153                           ;main.c: 128:     OSCCONbits.SCS = 1;
  1154     03D3  140F               	bsf	15,0	;volatile
  1155     03D4                     l1247:
  1156                           
  1157                           ;main.c: 129:     I2C_Master_Init(100000);
  1158     03D4  3000               	movlw	0
  1159     03D5  1283               	bcf	3,5	;RP0=0, select bank0
  1160     03D6  1303               	bcf	3,6	;RP1=0, select bank0
  1161     03D7  00B3               	movwf	I2C_Master_Init@c+3
  1162     03D8  3001               	movlw	1
  1163     03D9  00B2               	movwf	I2C_Master_Init@c+2
  1164     03DA  3086               	movlw	134
  1165     03DB  00B1               	movwf	I2C_Master_Init@c+1
  1166     03DC  30A0               	movlw	160
  1167     03DD  00B0               	movwf	I2C_Master_Init@c
  1168     03DE  120A  118A  248E  120A  118A  	fcall	_I2C_Master_Init
  1169     03E3                     l73:
  1170     03E3  0008               	return
  1171     03E4                     __end_of_setup:
  1172                           
  1173                           	psect	text2
  1174     048E                     __ptext2:	
  1175 ;; *************** function _I2C_Master_Init *****************
  1176 ;; Defined at:
  1177 ;;		line 16 in file "I2C.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  c               4    0[BANK0 ] const unsigned long 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0, pclath, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1191 ;;      Params:         0       4       0       0       0
  1192 ;;      Locals:         0       0       0       0       0
  1193 ;;      Temps:          0       4       0       0       0
  1194 ;;      Totals:         0       8       0       0       0
  1195 ;;Total ram usage:        8 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; Hardware stack levels required when called: 1
  1198 ;; This function calls:
  1199 ;;		___lldiv
  1200 ;; This function is called by:
  1201 ;;		_setup
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205     048E                     _I2C_Master_Init:	
  1206                           ;psect for function _I2C_Master_Init
  1207                           
  1208     048E                     l1215:	
  1209                           ;incstack = 0
  1210                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1211                           
  1212                           
  1213                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1214     048E  3028               	movlw	40
  1215     048F  1283               	bcf	3,5	;RP0=0, select bank0
  1216     0490  1303               	bcf	3,6	;RP1=0, select bank0
  1217     0491  0094               	movwf	20	;volatile
  1218     0492                     l1217:
  1219                           
  1220                           ;I2C.c: 19:     SSPCON2 = 0;
  1221     0492  1683               	bsf	3,5	;RP0=1, select bank1
  1222     0493  1303               	bcf	3,6	;RP1=0, select bank1
  1223     0494  0191               	clrf	17	;volatile
  1224     0495                     l1219:
  1225                           
  1226                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1227     0495  1283               	bcf	3,5	;RP0=0, select bank0
  1228     0496  1303               	bcf	3,6	;RP1=0, select bank0
  1229     0497  0830               	movf	I2C_Master_Init@c,w
  1230     0498  00B4               	movwf	??_I2C_Master_Init
  1231     0499  0831               	movf	I2C_Master_Init@c+1,w
  1232     049A  00B5               	movwf	??_I2C_Master_Init+1
  1233     049B  0832               	movf	I2C_Master_Init@c+2,w
  1234     049C  00B6               	movwf	??_I2C_Master_Init+2
  1235     049D  0833               	movf	I2C_Master_Init@c+3,w
  1236     049E  00B7               	movwf	??_I2C_Master_Init+3
  1237     049F  3002               	movlw	2
  1238     04A0                     u575:
  1239     04A0  1003               	clrc
  1240     04A1  0DB4               	rlf	??_I2C_Master_Init,f
  1241     04A2  0DB5               	rlf	??_I2C_Master_Init+1,f
  1242     04A3  0DB6               	rlf	??_I2C_Master_Init+2,f
  1243     04A4  0DB7               	rlf	??_I2C_Master_Init+3,f
  1244     04A5                     u570:
  1245     04A5  3EFF               	addlw	-1
  1246     04A6  1D03               	skipz
  1247     04A7  2CA0               	goto	u575
  1248     04A8  0837               	movf	??_I2C_Master_Init+3,w
  1249     04A9  00F3               	movwf	___lldiv@divisor+3
  1250     04AA  0836               	movf	??_I2C_Master_Init+2,w
  1251     04AB  00F2               	movwf	___lldiv@divisor+2
  1252     04AC  0835               	movf	??_I2C_Master_Init+1,w
  1253     04AD  00F1               	movwf	___lldiv@divisor+1
  1254     04AE  0834               	movf	??_I2C_Master_Init,w
  1255     04AF  00F0               	movwf	___lldiv@divisor
  1256     04B0  3000               	movlw	0
  1257     04B1  00F7               	movwf	___lldiv@dividend+3
  1258     04B2  307A               	movlw	122
  1259     04B3  00F6               	movwf	___lldiv@dividend+2
  1260     04B4  3012               	movlw	18
  1261     04B5  00F5               	movwf	___lldiv@dividend+1
  1262     04B6  3000               	movlw	0
  1263     04B7  00F4               	movwf	___lldiv@dividend
  1264     04B8  120A  118A  25C4  120A  118A  	fcall	___lldiv
  1265     04BD  0870               	movf	?___lldiv,w
  1266     04BE  3EFF               	addlw	255
  1267     04BF  1683               	bsf	3,5	;RP0=1, select bank1
  1268     04C0  1303               	bcf	3,6	;RP1=0, select bank1
  1269     04C1  0093               	movwf	19	;volatile
  1270     04C2                     l1221:
  1271                           
  1272                           ;I2C.c: 21:     SSPSTAT = 0;
  1273     04C2  0194               	clrf	20	;volatile
  1274     04C3                     l1223:
  1275                           
  1276                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1277     04C3  1587               	bsf	7,3	;volatile
  1278     04C4                     l1225:
  1279                           
  1280                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1281     04C4  1607               	bsf	7,4	;volatile
  1282     04C5                     l105:
  1283     04C5  0008               	return
  1284     04C6                     __end_of_I2C_Master_Init:
  1285                           
  1286                           	psect	text3
  1287     05C4                     __ptext3:	
  1288 ;; *************** function ___lldiv *****************
  1289 ;; Defined at:
  1290 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  divisor         4    0[COMMON] unsigned long 
  1293 ;;  dividend        4    4[COMMON] unsigned long 
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;  quotient        4    9[COMMON] unsigned long 
  1296 ;;  counter         1   13[COMMON] unsigned char 
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  4    0[COMMON] unsigned long 
  1299 ;; Registers used:
  1300 ;;		wreg, status,2, status,0
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1306 ;;      Params:         8       0       0       0       0
  1307 ;;      Locals:         5       0       0       0       0
  1308 ;;      Temps:          1       0       0       0       0
  1309 ;;      Totals:        14       0       0       0       0
  1310 ;;Total ram usage:       14 bytes
  1311 ;; Hardware stack levels used: 1
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_I2C_Master_Init
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319     05C4                     ___lldiv:	
  1320                           ;psect for function ___lldiv
  1321                           
  1322     05C4                     l1143:	
  1323                           ;incstack = 0
  1324                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1325                           
  1326     05C4  3000               	movlw	0
  1327     05C5  00FC               	movwf	___lldiv@quotient+3
  1328     05C6  3000               	movlw	0
  1329     05C7  00FB               	movwf	___lldiv@quotient+2
  1330     05C8  3000               	movlw	0
  1331     05C9  00FA               	movwf	___lldiv@quotient+1
  1332     05CA  3000               	movlw	0
  1333     05CB  00F9               	movwf	___lldiv@quotient
  1334     05CC  0873               	movf	___lldiv@divisor+3,w
  1335     05CD  0472               	iorwf	___lldiv@divisor+2,w
  1336     05CE  0471               	iorwf	___lldiv@divisor+1,w
  1337     05CF  0470               	iorwf	___lldiv@divisor,w
  1338     05D0  1903               	skipnz
  1339     05D1  2DD3               	goto	u481
  1340     05D2  2DD4               	goto	u480
  1341     05D3                     u481:
  1342     05D3  2E21               	goto	l1163
  1343     05D4                     u480:
  1344     05D4                     l1145:
  1345     05D4  01FD               	clrf	___lldiv@counter
  1346     05D5  0AFD               	incf	___lldiv@counter,f
  1347     05D6  2DE4               	goto	l1149
  1348     05D7                     l1147:
  1349     05D7  3001               	movlw	1
  1350     05D8  00F8               	movwf	??___lldiv
  1351     05D9                     u495:
  1352     05D9  1003               	clrc
  1353     05DA  0DF0               	rlf	___lldiv@divisor,f
  1354     05DB  0DF1               	rlf	___lldiv@divisor+1,f
  1355     05DC  0DF2               	rlf	___lldiv@divisor+2,f
  1356     05DD  0DF3               	rlf	___lldiv@divisor+3,f
  1357     05DE  0BF8               	decfsz	??___lldiv,f
  1358     05DF  2DD9               	goto	u495
  1359     05E0  3001               	movlw	1
  1360     05E1  00F8               	movwf	??___lldiv
  1361     05E2  0878               	movf	??___lldiv,w
  1362     05E3  07FD               	addwf	___lldiv@counter,f
  1363     05E4                     l1149:
  1364     05E4  1FF3               	btfss	___lldiv@divisor+3,7
  1365     05E5  2DE7               	goto	u501
  1366     05E6  2DE8               	goto	u500
  1367     05E7                     u501:
  1368     05E7  2DD7               	goto	l1147
  1369     05E8                     u500:
  1370     05E8                     l1151:
  1371     05E8  3001               	movlw	1
  1372     05E9  00F8               	movwf	??___lldiv
  1373     05EA                     u515:
  1374     05EA  1003               	clrc
  1375     05EB  0DF9               	rlf	___lldiv@quotient,f
  1376     05EC  0DFA               	rlf	___lldiv@quotient+1,f
  1377     05ED  0DFB               	rlf	___lldiv@quotient+2,f
  1378     05EE  0DFC               	rlf	___lldiv@quotient+3,f
  1379     05EF  0BF8               	decfsz	??___lldiv,f
  1380     05F0  2DEA               	goto	u515
  1381     05F1                     l1153:
  1382     05F1  0873               	movf	___lldiv@divisor+3,w
  1383     05F2  0277               	subwf	___lldiv@dividend+3,w
  1384     05F3  1D03               	skipz
  1385     05F4  2DFF               	goto	u525
  1386     05F5  0872               	movf	___lldiv@divisor+2,w
  1387     05F6  0276               	subwf	___lldiv@dividend+2,w
  1388     05F7  1D03               	skipz
  1389     05F8  2DFF               	goto	u525
  1390     05F9  0871               	movf	___lldiv@divisor+1,w
  1391     05FA  0275               	subwf	___lldiv@dividend+1,w
  1392     05FB  1D03               	skipz
  1393     05FC  2DFF               	goto	u525
  1394     05FD  0870               	movf	___lldiv@divisor,w
  1395     05FE  0274               	subwf	___lldiv@dividend,w
  1396     05FF                     u525:
  1397     05FF  1C03               	skipc
  1398     0600  2E02               	goto	u521
  1399     0601  2E03               	goto	u520
  1400     0602                     u521:
  1401     0602  2E12               	goto	l1159
  1402     0603                     u520:
  1403     0603                     l1155:
  1404     0603  0870               	movf	___lldiv@divisor,w
  1405     0604  02F4               	subwf	___lldiv@dividend,f
  1406     0605  0871               	movf	___lldiv@divisor+1,w
  1407     0606  1C03               	skipc
  1408     0607  0F71               	incfsz	___lldiv@divisor+1,w
  1409     0608  02F5               	subwf	___lldiv@dividend+1,f
  1410     0609  0872               	movf	___lldiv@divisor+2,w
  1411     060A  1C03               	skipc
  1412     060B  0F72               	incfsz	___lldiv@divisor+2,w
  1413     060C  02F6               	subwf	___lldiv@dividend+2,f
  1414     060D  0873               	movf	___lldiv@divisor+3,w
  1415     060E  1C03               	skipc
  1416     060F  0F73               	incfsz	___lldiv@divisor+3,w
  1417     0610  02F7               	subwf	___lldiv@dividend+3,f
  1418     0611                     l1157:
  1419     0611  1479               	bsf	___lldiv@quotient,0
  1420     0612                     l1159:
  1421     0612  3001               	movlw	1
  1422     0613                     u535:
  1423     0613  1003               	clrc
  1424     0614  0CF3               	rrf	___lldiv@divisor+3,f
  1425     0615  0CF2               	rrf	___lldiv@divisor+2,f
  1426     0616  0CF1               	rrf	___lldiv@divisor+1,f
  1427     0617  0CF0               	rrf	___lldiv@divisor,f
  1428     0618  3EFF               	addlw	-1
  1429     0619  1D03               	skipz
  1430     061A  2E13               	goto	u535
  1431     061B                     l1161:
  1432     061B  3001               	movlw	1
  1433     061C  02FD               	subwf	___lldiv@counter,f
  1434     061D  1D03               	btfss	3,2
  1435     061E  2E20               	goto	u541
  1436     061F  2E21               	goto	u540
  1437     0620                     u541:
  1438     0620  2DE8               	goto	l1151
  1439     0621                     u540:
  1440     0621                     l1163:
  1441     0621  087C               	movf	___lldiv@quotient+3,w
  1442     0622  00F3               	movwf	?___lldiv+3
  1443     0623  087B               	movf	___lldiv@quotient+2,w
  1444     0624  00F2               	movwf	?___lldiv+2
  1445     0625  087A               	movf	___lldiv@quotient+1,w
  1446     0626  00F1               	movwf	?___lldiv+1
  1447     0627  0879               	movf	___lldiv@quotient,w
  1448     0628  00F0               	movwf	?___lldiv
  1449     0629                     l329:
  1450     0629  0008               	return
  1451     062A                     __end_of___lldiv:
  1452                           
  1453                           	psect	text4
  1454     0691                     __ptext4:	
  1455 ;; *************** function _leer_hora *****************
  1456 ;; Defined at:
  1457 ;;		line 132 in file "main.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0, pclath, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1471 ;;      Params:         0       0       0       0       0
  1472 ;;      Locals:         0       0       0       0       0
  1473 ;;      Temps:          0       0       0       0       0
  1474 ;;      Totals:         0       0       0       0       0
  1475 ;;Total ram usage:        0 bytes
  1476 ;; Hardware stack levels used: 1
  1477 ;; Hardware stack levels required when called: 2
  1478 ;; This function calls:
  1479 ;;		_I2C_Master_Read
  1480 ;;		_I2C_Master_RepeatedStart
  1481 ;;		_I2C_Master_Start
  1482 ;;		_I2C_Master_Stop
  1483 ;;		_I2C_Master_Write
  1484 ;; This function is called by:
  1485 ;;		_main
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489     0691                     _leer_hora:	
  1490                           ;psect for function _leer_hora
  1491                           
  1492     0691                     l1289:	
  1493                           ;incstack = 0
  1494                           ; Regs used in _leer_hora: [wreg+status,2+status,0+pclath+cstack]
  1495                           
  1496                           
  1497                           ;main.c: 134:     I2C_Master_Start();
  1498     0691  120A  118A  2373  120A  118A  	fcall	_I2C_Master_Start
  1499                           
  1500                           ;main.c: 135:     I2C_Master_Write(0xD0);
  1501     0696  30D0               	movlw	208
  1502     0697  00F0               	movwf	I2C_Master_Write@d
  1503     0698  3000               	movlw	0
  1504     0699  00F1               	movwf	I2C_Master_Write@d+1
  1505     069A  120A  118A  2385  120A  118A  	fcall	_I2C_Master_Write
  1506                           
  1507                           ;main.c: 136:     I2C_Master_Write(0x00);
  1508     069F  3000               	movlw	0
  1509     06A0  00F0               	movwf	I2C_Master_Write@d
  1510     06A1  00F1               	movwf	I2C_Master_Write@d+1
  1511     06A2  120A  118A  2385  120A  118A  	fcall	_I2C_Master_Write
  1512                           
  1513                           ;main.c: 137:     I2C_Master_RepeatedStart();
  1514     06A7  120A  118A  236A  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1515                           
  1516                           ;main.c: 138:     I2C_Master_Write(0xD1);
  1517     06AC  30D1               	movlw	209
  1518     06AD  00F0               	movwf	I2C_Master_Write@d
  1519     06AE  3000               	movlw	0
  1520     06AF  00F1               	movwf	I2C_Master_Write@d+1
  1521     06B0  120A  118A  2385  120A  118A  	fcall	_I2C_Master_Write
  1522                           
  1523                           ;main.c: 139:     sec = I2C_Master_Read(0x00);
  1524     06B5  3000               	movlw	0
  1525     06B6  00F0               	movwf	I2C_Master_Read@a
  1526     06B7  00F1               	movwf	I2C_Master_Read@a+1
  1527     06B8  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Read
  1528     06BD  0871               	movf	?_I2C_Master_Read+1,w
  1529     06BE  1283               	bcf	3,5	;RP0=0, select bank0
  1530     06BF  1303               	bcf	3,6	;RP1=0, select bank0
  1531     06C0  00AB               	movwf	_sec+1
  1532     06C1  0870               	movf	?_I2C_Master_Read,w
  1533     06C2  00AA               	movwf	_sec
  1534                           
  1535                           ;main.c: 140:     I2C_Master_Write(0);
  1536     06C3  3000               	movlw	0
  1537     06C4  00F0               	movwf	I2C_Master_Write@d
  1538     06C5  00F1               	movwf	I2C_Master_Write@d+1
  1539     06C6  120A  118A  2385  120A  118A  	fcall	_I2C_Master_Write
  1540                           
  1541                           ;main.c: 141:     min = I2C_Master_Read(0x01);
  1542     06CB  3001               	movlw	1
  1543     06CC  00F0               	movwf	I2C_Master_Read@a
  1544     06CD  3000               	movlw	0
  1545     06CE  00F1               	movwf	I2C_Master_Read@a+1
  1546     06CF  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Read
  1547     06D4  0871               	movf	?_I2C_Master_Read+1,w
  1548     06D5  1283               	bcf	3,5	;RP0=0, select bank0
  1549     06D6  1303               	bcf	3,6	;RP1=0, select bank0
  1550     06D7  00A9               	movwf	_min+1
  1551     06D8  0870               	movf	?_I2C_Master_Read,w
  1552     06D9  00A8               	movwf	_min
  1553                           
  1554                           ;main.c: 142:     I2C_Master_Write(0);
  1555     06DA  3000               	movlw	0
  1556     06DB  00F0               	movwf	I2C_Master_Write@d
  1557     06DC  00F1               	movwf	I2C_Master_Write@d+1
  1558     06DD  120A  118A  2385  120A  118A  	fcall	_I2C_Master_Write
  1559                           
  1560                           ;main.c: 143:     hora = I2C_Master_Read(0x02);
  1561     06E2  3002               	movlw	2
  1562     06E3  00F0               	movwf	I2C_Master_Read@a
  1563     06E4  3000               	movlw	0
  1564     06E5  00F1               	movwf	I2C_Master_Read@a+1
  1565     06E6  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Read
  1566     06EB  0871               	movf	?_I2C_Master_Read+1,w
  1567     06EC  1283               	bcf	3,5	;RP0=0, select bank0
  1568     06ED  1303               	bcf	3,6	;RP1=0, select bank0
  1569     06EE  00A7               	movwf	_hora+1
  1570     06EF  0870               	movf	?_I2C_Master_Read,w
  1571     06F0  00A6               	movwf	_hora
  1572                           
  1573                           ;main.c: 144:     I2C_Master_Write(1);
  1574     06F1  3001               	movlw	1
  1575     06F2  00F0               	movwf	I2C_Master_Write@d
  1576     06F3  3000               	movlw	0
  1577     06F4  00F1               	movwf	I2C_Master_Write@d+1
  1578     06F5  120A  118A  2385  120A  118A  	fcall	_I2C_Master_Write
  1579                           
  1580                           ;main.c: 145:     I2C_Master_Stop();
  1581     06FA  120A  118A  237C  120A  118A  	fcall	_I2C_Master_Stop
  1582     06FF                     l76:
  1583     06FF  0008               	return
  1584     0700                     __end_of_leer_hora:
  1585                           
  1586                           	psect	text5
  1587     0385                     __ptext5:	
  1588 ;; *************** function _I2C_Master_Write *****************
  1589 ;; Defined at:
  1590 ;;		line 65 in file "I2C.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  d               2    0[COMMON] unsigned int 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;		None
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		wreg, status,2, status,0, pclath, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1604 ;;      Params:         2       0       0       0       0
  1605 ;;      Locals:         0       0       0       0       0
  1606 ;;      Temps:          0       0       0       0       0
  1607 ;;      Totals:         2       0       0       0       0
  1608 ;;Total ram usage:        2 bytes
  1609 ;; Hardware stack levels used: 1
  1610 ;; Hardware stack levels required when called: 1
  1611 ;; This function calls:
  1612 ;;		_I2C_Master_Wait
  1613 ;; This function is called by:
  1614 ;;		_main
  1615 ;;		_leer_hora
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619     0385                     _I2C_Master_Write:	
  1620                           ;psect for function _I2C_Master_Write
  1621                           
  1622     0385                     l1171:	
  1623                           ;incstack = 0
  1624                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1625                           
  1626                           
  1627                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  1628     0385  120A  118A  239C  120A  118A  	fcall	_I2C_Master_Wait
  1629     038A                     l1173:
  1630                           
  1631                           ;I2C.c: 68:     SSPBUF = d;
  1632     038A  0870               	movf	I2C_Master_Write@d,w
  1633     038B  1283               	bcf	3,5	;RP0=0, select bank0
  1634     038C  1303               	bcf	3,6	;RP1=0, select bank0
  1635     038D  0093               	movwf	19	;volatile
  1636     038E                     l123:
  1637     038E  0008               	return
  1638     038F                     __end_of_I2C_Master_Write:
  1639                           
  1640                           	psect	text6
  1641     037C                     __ptext6:	
  1642 ;; *************** function _I2C_Master_Stop *****************
  1643 ;; Defined at:
  1644 ;;		line 55 in file "I2C.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;		None
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, status,2, status,0, pclath, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1658 ;;      Params:         0       0       0       0       0
  1659 ;;      Locals:         0       0       0       0       0
  1660 ;;      Temps:          0       0       0       0       0
  1661 ;;      Totals:         0       0       0       0       0
  1662 ;;Total ram usage:        0 bytes
  1663 ;; Hardware stack levels used: 1
  1664 ;; Hardware stack levels required when called: 1
  1665 ;; This function calls:
  1666 ;;		_I2C_Master_Wait
  1667 ;; This function is called by:
  1668 ;;		_main
  1669 ;;		_leer_hora
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673     037C                     _I2C_Master_Stop:	
  1674                           ;psect for function _I2C_Master_Stop
  1675                           
  1676     037C                     l1175:	
  1677                           ;incstack = 0
  1678                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1679                           
  1680                           
  1681                           ;I2C.c: 57:     I2C_Master_Wait();
  1682     037C  120A  118A  239C  120A  118A  	fcall	_I2C_Master_Wait
  1683     0381                     l1177:
  1684                           
  1685                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  1686     0381  1683               	bsf	3,5	;RP0=1, select bank1
  1687     0382  1303               	bcf	3,6	;RP1=0, select bank1
  1688     0383  1511               	bsf	17,2	;volatile
  1689     0384                     l120:
  1690     0384  0008               	return
  1691     0385                     __end_of_I2C_Master_Stop:
  1692                           
  1693                           	psect	text7
  1694     0373                     __ptext7:	
  1695 ;; *************** function _I2C_Master_Start *****************
  1696 ;; Defined at:
  1697 ;;		line 39 in file "I2C.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0, pclath, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1711 ;;      Params:         0       0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0
  1714 ;;      Totals:         0       0       0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 1
  1718 ;; This function calls:
  1719 ;;		_I2C_Master_Wait
  1720 ;; This function is called by:
  1721 ;;		_main
  1722 ;;		_leer_hora
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726     0373                     _I2C_Master_Start:	
  1727                           ;psect for function _I2C_Master_Start
  1728                           
  1729     0373                     l1167:	
  1730                           ;incstack = 0
  1731                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1732                           
  1733                           
  1734                           ;I2C.c: 41:     I2C_Master_Wait();
  1735     0373  120A  118A  239C  120A  118A  	fcall	_I2C_Master_Wait
  1736     0378                     l1169:
  1737                           
  1738                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  1739     0378  1683               	bsf	3,5	;RP0=1, select bank1
  1740     0379  1303               	bcf	3,6	;RP1=0, select bank1
  1741     037A  1411               	bsf	17,0	;volatile
  1742     037B                     l114:
  1743     037B  0008               	return
  1744     037C                     __end_of_I2C_Master_Start:
  1745                           
  1746                           	psect	text8
  1747     036A                     __ptext8:	
  1748 ;; *************** function _I2C_Master_RepeatedStart *****************
  1749 ;; Defined at:
  1750 ;;		line 47 in file "I2C.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;		None
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2, status,0, pclath, cstack
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1764 ;;      Params:         0       0       0       0       0
  1765 ;;      Locals:         0       0       0       0       0
  1766 ;;      Temps:          0       0       0       0       0
  1767 ;;      Totals:         0       0       0       0       0
  1768 ;;Total ram usage:        0 bytes
  1769 ;; Hardware stack levels used: 1
  1770 ;; Hardware stack levels required when called: 1
  1771 ;; This function calls:
  1772 ;;		_I2C_Master_Wait
  1773 ;; This function is called by:
  1774 ;;		_leer_hora
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778     036A                     _I2C_Master_RepeatedStart:	
  1779                           ;psect for function _I2C_Master_RepeatedStart
  1780                           
  1781     036A                     l1227:	
  1782                           ;incstack = 0
  1783                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  1784                           
  1785                           
  1786                           ;I2C.c: 49:     I2C_Master_Wait();
  1787     036A  120A  118A  239C  120A  118A  	fcall	_I2C_Master_Wait
  1788     036F                     l1229:
  1789                           
  1790                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  1791     036F  1683               	bsf	3,5	;RP0=1, select bank1
  1792     0370  1303               	bcf	3,6	;RP1=0, select bank1
  1793     0371  1491               	bsf	17,1	;volatile
  1794     0372                     l117:
  1795     0372  0008               	return
  1796     0373                     __end_of_I2C_Master_RepeatedStart:
  1797                           
  1798                           	psect	text9
  1799     042B                     __ptext9:	
  1800 ;; *************** function _I2C_Master_Read *****************
  1801 ;; Defined at:
  1802 ;;		line 74 in file "I2C.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  a               2    0[COMMON] unsigned short 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  temp            2    4[COMMON] unsigned short 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  2    0[COMMON] unsigned short 
  1809 ;; Registers used:
  1810 ;;		wreg, status,2, status,0, pclath, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1816 ;;      Params:         2       0       0       0       0
  1817 ;;      Locals:         2       0       0       0       0
  1818 ;;      Temps:          2       0       0       0       0
  1819 ;;      Totals:         6       0       0       0       0
  1820 ;;Total ram usage:        6 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; Hardware stack levels required when called: 1
  1823 ;; This function calls:
  1824 ;;		_I2C_Master_Wait
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;;		_leer_hora
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831     042B                     _I2C_Master_Read:	
  1832                           ;psect for function _I2C_Master_Read
  1833                           
  1834     042B                     l1179:	
  1835                           ;incstack = 0
  1836                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1837                           
  1838                           
  1839                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  1840     042B  120A  118A  239C  120A  118A  	fcall	_I2C_Master_Wait
  1841     0430                     l1181:
  1842                           
  1843                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  1844     0430  1683               	bsf	3,5	;RP0=1, select bank1
  1845     0431  1303               	bcf	3,6	;RP1=0, select bank1
  1846     0432  1591               	bsf	17,3	;volatile
  1847                           
  1848                           ;I2C.c: 79:     I2C_Master_Wait();
  1849     0433  120A  118A  239C  120A  118A  	fcall	_I2C_Master_Wait
  1850     0438                     l1183:
  1851                           
  1852                           ;I2C.c: 80:     temp = SSPBUF;
  1853     0438  1283               	bcf	3,5	;RP0=0, select bank0
  1854     0439  1303               	bcf	3,6	;RP1=0, select bank0
  1855     043A  0813               	movf	19,w	;volatile
  1856     043B  00F2               	movwf	??_I2C_Master_Read
  1857     043C  01F3               	clrf	??_I2C_Master_Read+1
  1858     043D  0872               	movf	??_I2C_Master_Read,w
  1859     043E  00F4               	movwf	I2C_Master_Read@temp
  1860     043F  0873               	movf	??_I2C_Master_Read+1,w
  1861     0440  00F5               	movwf	I2C_Master_Read@temp+1
  1862     0441                     l1185:
  1863                           
  1864                           ;I2C.c: 81:     I2C_Master_Wait();
  1865     0441  120A  118A  239C  120A  118A  	fcall	_I2C_Master_Wait
  1866     0446                     l1187:
  1867                           
  1868                           ;I2C.c: 82:     if(a == 1){
  1869     0446  0370               	decf	I2C_Master_Read@a,w
  1870     0447  0471               	iorwf	I2C_Master_Read@a+1,w
  1871     0448  1D03               	btfss	3,2
  1872     0449  2C4B               	goto	u551
  1873     044A  2C4C               	goto	u550
  1874     044B                     u551:
  1875     044B  2C50               	goto	l126
  1876     044C                     u550:
  1877     044C                     l1189:
  1878                           
  1879                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  1880     044C  1683               	bsf	3,5	;RP0=1, select bank1
  1881     044D  1303               	bcf	3,6	;RP1=0, select bank1
  1882     044E  1291               	bcf	17,5	;volatile
  1883                           
  1884                           ;I2C.c: 84:     }else{
  1885     044F  2C53               	goto	l127
  1886     0450                     l126:
  1887                           
  1888                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  1889     0450  1683               	bsf	3,5	;RP0=1, select bank1
  1890     0451  1303               	bcf	3,6	;RP1=0, select bank1
  1891     0452  1691               	bsf	17,5	;volatile
  1892     0453                     l127:	
  1893                           ;I2C.c: 86:     }
  1894                           
  1895                           
  1896                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  1897     0453  1611               	bsf	17,4	;volatile
  1898     0454                     l1191:
  1899                           
  1900                           ;I2C.c: 88:     return temp;
  1901     0454  0875               	movf	I2C_Master_Read@temp+1,w
  1902     0455  00F1               	movwf	?_I2C_Master_Read+1
  1903     0456  0874               	movf	I2C_Master_Read@temp,w
  1904     0457  00F0               	movwf	?_I2C_Master_Read
  1905     0458                     l128:
  1906     0458  0008               	return
  1907     0459                     __end_of_I2C_Master_Read:
  1908                           
  1909                           	psect	text10
  1910     039C                     __ptext10:	
  1911 ;; *************** function _I2C_Master_Wait *****************
  1912 ;; Defined at:
  1913 ;;		line 32 in file "I2C.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, status,2
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1927 ;;      Params:         0       0       0       0       0
  1928 ;;      Locals:         0       0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0
  1930 ;;      Totals:         0       0       0       0       0
  1931 ;;Total ram usage:        0 bytes
  1932 ;; Hardware stack levels used: 1
  1933 ;; This function calls:
  1934 ;;		Nothing
  1935 ;; This function is called by:
  1936 ;;		_I2C_Master_Start
  1937 ;;		_I2C_Master_RepeatedStart
  1938 ;;		_I2C_Master_Stop
  1939 ;;		_I2C_Master_Write
  1940 ;;		_I2C_Master_Read
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944     039C                     _I2C_Master_Wait:	
  1945                           ;psect for function _I2C_Master_Wait
  1946                           
  1947     039C                     l1129:	
  1948                           ;incstack = 0
  1949                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1950                           
  1951     039C                     l108:	
  1952                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1953                           
  1954     039C  1683               	bsf	3,5	;RP0=1, select bank1
  1955     039D  1303               	bcf	3,6	;RP1=0, select bank1
  1956     039E  1914               	btfsc	20,2	;volatile
  1957     039F  2BA1               	goto	u421
  1958     03A0  2BA2               	goto	u420
  1959     03A1                     u421:
  1960     03A1  2B9C               	goto	l108
  1961     03A2                     u420:
  1962     03A2                     l1131:
  1963     03A2  0811               	movf	17,w	;volatile
  1964     03A3  391F               	andlw	31
  1965     03A4  1D03               	btfss	3,2
  1966     03A5  2BA7               	goto	u431
  1967     03A6  2BA8               	goto	u430
  1968     03A7                     u431:
  1969     03A7  2B9C               	goto	l108
  1970     03A8                     u430:
  1971     03A8                     l111:
  1972     03A8  0008               	return
  1973     03A9                     __end_of_I2C_Master_Wait:
  1974                           
  1975                           	psect	text11
  1976     050C                     __ptext11:	
  1977 ;; *************** function ___awmod *****************
  1978 ;; Defined at:
  1979 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  divisor         2    9[COMMON] int 
  1982 ;;  dividend        2   11[COMMON] int 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  sign            1    1[BANK0 ] unsigned char 
  1985 ;;  counter         1    0[BANK0 ] unsigned char 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  2    9[COMMON] int 
  1988 ;; Registers used:
  1989 ;;		wreg, status,2, status,0
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1995 ;;      Params:         4       0       0       0       0
  1996 ;;      Locals:         0       2       0       0       0
  1997 ;;      Temps:          1       0       0       0       0
  1998 ;;      Totals:         5       2       0       0       0
  1999 ;;Total ram usage:        7 bytes
  2000 ;; Hardware stack levels used: 1
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_main
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008     050C                     ___awmod:	
  2009                           ;psect for function ___awmod
  2010                           
  2011     050C                     l1335:	
  2012                           ;incstack = 0
  2013                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2014                           
  2015     050C  1283               	bcf	3,5	;RP0=0, select bank0
  2016     050D  1303               	bcf	3,6	;RP1=0, select bank0
  2017     050E  01B1               	clrf	___awmod@sign
  2018     050F                     l1337:
  2019     050F  1FFC               	btfss	___awmod@dividend+1,7
  2020     0510  2D12               	goto	u731
  2021     0511  2D13               	goto	u730
  2022     0512                     u731:
  2023     0512  2D1A               	goto	l1343
  2024     0513                     u730:
  2025     0513                     l1339:
  2026     0513  09FB               	comf	___awmod@dividend,f
  2027     0514  09FC               	comf	___awmod@dividend+1,f
  2028     0515  0AFB               	incf	___awmod@dividend,f
  2029     0516  1903               	skipnz
  2030     0517  0AFC               	incf	___awmod@dividend+1,f
  2031     0518                     l1341:
  2032     0518  01B1               	clrf	___awmod@sign
  2033     0519  0AB1               	incf	___awmod@sign,f
  2034     051A                     l1343:
  2035     051A  1FFA               	btfss	___awmod@divisor+1,7
  2036     051B  2D1D               	goto	u741
  2037     051C  2D1E               	goto	u740
  2038     051D                     u741:
  2039     051D  2D23               	goto	l1347
  2040     051E                     u740:
  2041     051E                     l1345:
  2042     051E  09F9               	comf	___awmod@divisor,f
  2043     051F  09FA               	comf	___awmod@divisor+1,f
  2044     0520  0AF9               	incf	___awmod@divisor,f
  2045     0521  1903               	skipnz
  2046     0522  0AFA               	incf	___awmod@divisor+1,f
  2047     0523                     l1347:
  2048     0523  0879               	movf	___awmod@divisor,w
  2049     0524  047A               	iorwf	___awmod@divisor+1,w
  2050     0525  1903               	btfsc	3,2
  2051     0526  2D28               	goto	u751
  2052     0527  2D29               	goto	u750
  2053     0528                     u751:
  2054     0528  2D58               	goto	l1365
  2055     0529                     u750:
  2056     0529                     l1349:
  2057     0529  01B0               	clrf	___awmod@counter
  2058     052A  0AB0               	incf	___awmod@counter,f
  2059     052B  2D37               	goto	l1355
  2060     052C                     l1351:
  2061     052C  3001               	movlw	1
  2062     052D                     u765:
  2063     052D  1003               	clrc
  2064     052E  0DF9               	rlf	___awmod@divisor,f
  2065     052F  0DFA               	rlf	___awmod@divisor+1,f
  2066     0530  3EFF               	addlw	-1
  2067     0531  1D03               	skipz
  2068     0532  2D2D               	goto	u765
  2069     0533                     l1353:
  2070     0533  3001               	movlw	1
  2071     0534  00FD               	movwf	??___awmod
  2072     0535  087D               	movf	??___awmod,w
  2073     0536  07B0               	addwf	___awmod@counter,f
  2074     0537                     l1355:
  2075     0537  1FFA               	btfss	___awmod@divisor+1,7
  2076     0538  2D3A               	goto	u771
  2077     0539  2D3B               	goto	u770
  2078     053A                     u771:
  2079     053A  2D2C               	goto	l1351
  2080     053B                     u770:
  2081     053B                     l1357:
  2082     053B  087A               	movf	___awmod@divisor+1,w
  2083     053C  027C               	subwf	___awmod@dividend+1,w
  2084     053D  1D03               	skipz
  2085     053E  2D41               	goto	u785
  2086     053F  0879               	movf	___awmod@divisor,w
  2087     0540  027B               	subwf	___awmod@dividend,w
  2088     0541                     u785:
  2089     0541  1C03               	skipc
  2090     0542  2D44               	goto	u781
  2091     0543  2D45               	goto	u780
  2092     0544                     u781:
  2093     0544  2D4B               	goto	l1361
  2094     0545                     u780:
  2095     0545                     l1359:
  2096     0545  0879               	movf	___awmod@divisor,w
  2097     0546  02FB               	subwf	___awmod@dividend,f
  2098     0547  087A               	movf	___awmod@divisor+1,w
  2099     0548  1C03               	skipc
  2100     0549  03FC               	decf	___awmod@dividend+1,f
  2101     054A  02FC               	subwf	___awmod@dividend+1,f
  2102     054B                     l1361:
  2103     054B  3001               	movlw	1
  2104     054C                     u795:
  2105     054C  1003               	clrc
  2106     054D  0CFA               	rrf	___awmod@divisor+1,f
  2107     054E  0CF9               	rrf	___awmod@divisor,f
  2108     054F  3EFF               	addlw	-1
  2109     0550  1D03               	skipz
  2110     0551  2D4C               	goto	u795
  2111     0552                     l1363:
  2112     0552  3001               	movlw	1
  2113     0553  02B0               	subwf	___awmod@counter,f
  2114     0554  1D03               	btfss	3,2
  2115     0555  2D57               	goto	u801
  2116     0556  2D58               	goto	u800
  2117     0557                     u801:
  2118     0557  2D3B               	goto	l1357
  2119     0558                     u800:
  2120     0558                     l1365:
  2121     0558  0831               	movf	___awmod@sign,w
  2122     0559  1903               	btfsc	3,2
  2123     055A  2D5C               	goto	u811
  2124     055B  2D5D               	goto	u810
  2125     055C                     u811:
  2126     055C  2D62               	goto	l1369
  2127     055D                     u810:
  2128     055D                     l1367:
  2129     055D  09FB               	comf	___awmod@dividend,f
  2130     055E  09FC               	comf	___awmod@dividend+1,f
  2131     055F  0AFB               	incf	___awmod@dividend,f
  2132     0560  1903               	skipnz
  2133     0561  0AFC               	incf	___awmod@dividend+1,f
  2134     0562                     l1369:
  2135     0562  087C               	movf	___awmod@dividend+1,w
  2136     0563  00FA               	movwf	?___awmod+1
  2137     0564  087B               	movf	___awmod@dividend,w
  2138     0565  00F9               	movwf	?___awmod
  2139     0566                     l459:
  2140     0566  0008               	return
  2141     0567                     __end_of___awmod:
  2142                           
  2143                           	psect	text12
  2144     062A                     __ptext12:	
  2145 ;; *************** function ___awdiv *****************
  2146 ;; Defined at:
  2147 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  divisor         2    0[COMMON] int 
  2150 ;;  dividend        2    2[COMMON] int 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  quotient        2    7[COMMON] int 
  2153 ;;  sign            1    6[COMMON] unsigned char 
  2154 ;;  counter         1    5[COMMON] unsigned char 
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  2    0[COMMON] int 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2164 ;;      Params:         4       0       0       0       0
  2165 ;;      Locals:         4       0       0       0       0
  2166 ;;      Temps:          1       0       0       0       0
  2167 ;;      Totals:         9       0       0       0       0
  2168 ;;Total ram usage:        9 bytes
  2169 ;; Hardware stack levels used: 1
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_main
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177     062A                     ___awdiv:	
  2178                           ;psect for function ___awdiv
  2179                           
  2180     062A                     l1291:	
  2181                           ;incstack = 0
  2182                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2183                           
  2184     062A  01F6               	clrf	___awdiv@sign
  2185     062B                     l1293:
  2186     062B  1FF1               	btfss	___awdiv@divisor+1,7
  2187     062C  2E2E               	goto	u631
  2188     062D  2E2F               	goto	u630
  2189     062E                     u631:
  2190     062E  2E36               	goto	l1299
  2191     062F                     u630:
  2192     062F                     l1295:
  2193     062F  09F0               	comf	___awdiv@divisor,f
  2194     0630  09F1               	comf	___awdiv@divisor+1,f
  2195     0631  0AF0               	incf	___awdiv@divisor,f
  2196     0632  1903               	skipnz
  2197     0633  0AF1               	incf	___awdiv@divisor+1,f
  2198     0634                     l1297:
  2199     0634  01F6               	clrf	___awdiv@sign
  2200     0635  0AF6               	incf	___awdiv@sign,f
  2201     0636                     l1299:
  2202     0636  1FF3               	btfss	___awdiv@dividend+1,7
  2203     0637  2E39               	goto	u641
  2204     0638  2E3A               	goto	u640
  2205     0639                     u641:
  2206     0639  2E43               	goto	l1305
  2207     063A                     u640:
  2208     063A                     l1301:
  2209     063A  09F2               	comf	___awdiv@dividend,f
  2210     063B  09F3               	comf	___awdiv@dividend+1,f
  2211     063C  0AF2               	incf	___awdiv@dividend,f
  2212     063D  1903               	skipnz
  2213     063E  0AF3               	incf	___awdiv@dividend+1,f
  2214     063F                     l1303:
  2215     063F  3001               	movlw	1
  2216     0640  00F4               	movwf	??___awdiv
  2217     0641  0874               	movf	??___awdiv,w
  2218     0642  06F6               	xorwf	___awdiv@sign,f
  2219     0643                     l1305:
  2220     0643  01F7               	clrf	___awdiv@quotient
  2221     0644  01F8               	clrf	___awdiv@quotient+1
  2222     0645                     l1307:
  2223     0645  0870               	movf	___awdiv@divisor,w
  2224     0646  0471               	iorwf	___awdiv@divisor+1,w
  2225     0647  1903               	btfsc	3,2
  2226     0648  2E4A               	goto	u651
  2227     0649  2E4B               	goto	u650
  2228     064A                     u651:
  2229     064A  2E82               	goto	l1327
  2230     064B                     u650:
  2231     064B                     l1309:
  2232     064B  01F5               	clrf	___awdiv@counter
  2233     064C  0AF5               	incf	___awdiv@counter,f
  2234     064D  2E59               	goto	l1315
  2235     064E                     l1311:
  2236     064E  3001               	movlw	1
  2237     064F                     u665:
  2238     064F  1003               	clrc
  2239     0650  0DF0               	rlf	___awdiv@divisor,f
  2240     0651  0DF1               	rlf	___awdiv@divisor+1,f
  2241     0652  3EFF               	addlw	-1
  2242     0653  1D03               	skipz
  2243     0654  2E4F               	goto	u665
  2244     0655                     l1313:
  2245     0655  3001               	movlw	1
  2246     0656  00F4               	movwf	??___awdiv
  2247     0657  0874               	movf	??___awdiv,w
  2248     0658  07F5               	addwf	___awdiv@counter,f
  2249     0659                     l1315:
  2250     0659  1FF1               	btfss	___awdiv@divisor+1,7
  2251     065A  2E5C               	goto	u671
  2252     065B  2E5D               	goto	u670
  2253     065C                     u671:
  2254     065C  2E4E               	goto	l1311
  2255     065D                     u670:
  2256     065D                     l1317:
  2257     065D  3001               	movlw	1
  2258     065E                     u685:
  2259     065E  1003               	clrc
  2260     065F  0DF7               	rlf	___awdiv@quotient,f
  2261     0660  0DF8               	rlf	___awdiv@quotient+1,f
  2262     0661  3EFF               	addlw	-1
  2263     0662  1D03               	skipz
  2264     0663  2E5E               	goto	u685
  2265     0664  0871               	movf	___awdiv@divisor+1,w
  2266     0665  0273               	subwf	___awdiv@dividend+1,w
  2267     0666  1D03               	skipz
  2268     0667  2E6A               	goto	u695
  2269     0668  0870               	movf	___awdiv@divisor,w
  2270     0669  0272               	subwf	___awdiv@dividend,w
  2271     066A                     u695:
  2272     066A  1C03               	skipc
  2273     066B  2E6D               	goto	u691
  2274     066C  2E6E               	goto	u690
  2275     066D                     u691:
  2276     066D  2E75               	goto	l1323
  2277     066E                     u690:
  2278     066E                     l1319:
  2279     066E  0870               	movf	___awdiv@divisor,w
  2280     066F  02F2               	subwf	___awdiv@dividend,f
  2281     0670  0871               	movf	___awdiv@divisor+1,w
  2282     0671  1C03               	skipc
  2283     0672  03F3               	decf	___awdiv@dividend+1,f
  2284     0673  02F3               	subwf	___awdiv@dividend+1,f
  2285     0674                     l1321:
  2286     0674  1477               	bsf	___awdiv@quotient,0
  2287     0675                     l1323:
  2288     0675  3001               	movlw	1
  2289     0676                     u705:
  2290     0676  1003               	clrc
  2291     0677  0CF1               	rrf	___awdiv@divisor+1,f
  2292     0678  0CF0               	rrf	___awdiv@divisor,f
  2293     0679  3EFF               	addlw	-1
  2294     067A  1D03               	skipz
  2295     067B  2E76               	goto	u705
  2296     067C                     l1325:
  2297     067C  3001               	movlw	1
  2298     067D  02F5               	subwf	___awdiv@counter,f
  2299     067E  1D03               	btfss	3,2
  2300     067F  2E81               	goto	u711
  2301     0680  2E82               	goto	u710
  2302     0681                     u711:
  2303     0681  2E5D               	goto	l1317
  2304     0682                     u710:
  2305     0682                     l1327:
  2306     0682  0876               	movf	___awdiv@sign,w
  2307     0683  1903               	btfsc	3,2
  2308     0684  2E86               	goto	u721
  2309     0685  2E87               	goto	u720
  2310     0686                     u721:
  2311     0686  2E8C               	goto	l1331
  2312     0687                     u720:
  2313     0687                     l1329:
  2314     0687  09F7               	comf	___awdiv@quotient,f
  2315     0688  09F8               	comf	___awdiv@quotient+1,f
  2316     0689  0AF7               	incf	___awdiv@quotient,f
  2317     068A  1903               	skipnz
  2318     068B  0AF8               	incf	___awdiv@quotient+1,f
  2319     068C                     l1331:
  2320     068C  0878               	movf	___awdiv@quotient+1,w
  2321     068D  00F1               	movwf	?___awdiv+1
  2322     068E  0877               	movf	___awdiv@quotient,w
  2323     068F  00F0               	movwf	?___awdiv
  2324     0690                     l446:
  2325     0690  0008               	return
  2326     0691                     __end_of___awdiv:
  2327                           
  2328                           	psect	text13
  2329     0406                     __ptext13:	
  2330 ;; *************** function _Lcd_Write_String *****************
  2331 ;; Defined at:
  2332 ;;		line 98 in file "LCD.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;  a               1    wreg     PTR unsigned char 
  2335 ;;		 -> STR_1(14), 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  a               1    7[COMMON] PTR unsigned char 
  2338 ;;		 -> STR_1(14), 
  2339 ;;  i               2    5[COMMON] int 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2349 ;;      Params:         0       0       0       0       0
  2350 ;;      Locals:         3       0       0       0       0
  2351 ;;      Temps:          0       0       0       0       0
  2352 ;;      Totals:         3       0       0       0       0
  2353 ;;Total ram usage:        3 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; Hardware stack levels required when called: 2
  2356 ;; This function calls:
  2357 ;;		_Lcd_Write_Char
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363     0406                     _Lcd_Write_String:	
  2364                           ;psect for function _Lcd_Write_String
  2365                           
  2366                           
  2367                           ;incstack = 0
  2368                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2369                           ;Lcd_Write_String@a stored from wreg
  2370     0406  00F7               	movwf	Lcd_Write_String@a
  2371     0407                     l1281:
  2372                           
  2373                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2374     0407  01F5               	clrf	Lcd_Write_String@i
  2375     0408  01F6               	clrf	Lcd_Write_String@i+1
  2376     0409  2C1D               	goto	l1287
  2377     040A                     l1283:
  2378                           
  2379                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2380     040A  0875               	movf	Lcd_Write_String@i,w
  2381     040B  0777               	addwf	Lcd_Write_String@a,w
  2382     040C  0084               	movwf	4
  2383     040D  120A  118A  2003  120A  118A  	fcall	stringdir
  2384     0412  120A  118A  2459  120A  118A  	fcall	_Lcd_Write_Char
  2385     0417                     l1285:
  2386     0417  3001               	movlw	1
  2387     0418  07F5               	addwf	Lcd_Write_String@i,f
  2388     0419  1803               	skipnc
  2389     041A  0AF6               	incf	Lcd_Write_String@i+1,f
  2390     041B  3000               	movlw	0
  2391     041C  07F6               	addwf	Lcd_Write_String@i+1,f
  2392     041D                     l1287:
  2393     041D  0875               	movf	Lcd_Write_String@i,w
  2394     041E  0777               	addwf	Lcd_Write_String@a,w
  2395     041F  0084               	movwf	4
  2396     0420  120A  118A  2003  120A  118A  	fcall	stringdir
  2397     0425  3A00               	xorlw	0
  2398     0426  1D03               	skipz
  2399     0427  2C29               	goto	u621
  2400     0428  2C2A               	goto	u620
  2401     0429                     u621:
  2402     0429  2C0A               	goto	l1283
  2403     042A                     u620:
  2404     042A                     l201:
  2405     042A  0008               	return
  2406     042B                     __end_of_Lcd_Write_String:
  2407                           
  2408                           	psect	text14
  2409     0459                     __ptext14:	
  2410 ;; *************** function _Lcd_Write_Char *****************
  2411 ;; Defined at:
  2412 ;;		line 83 in file "LCD.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  a               1    wreg     unsigned char 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  a               1    4[COMMON] unsigned char 
  2417 ;;  y               1    3[COMMON] unsigned char 
  2418 ;;  temp            1    2[COMMON] unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, status,2, status,0, pclath, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2428 ;;      Params:         0       0       0       0       0
  2429 ;;      Locals:         3       0       0       0       0
  2430 ;;      Temps:          1       0       0       0       0
  2431 ;;      Totals:         4       0       0       0       0
  2432 ;;Total ram usage:        4 bytes
  2433 ;; Hardware stack levels used: 1
  2434 ;; Hardware stack levels required when called: 1
  2435 ;; This function calls:
  2436 ;;		_Lcd_Port
  2437 ;; This function is called by:
  2438 ;;		_main
  2439 ;;		_Lcd_Write_String
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443     0459                     _Lcd_Write_Char:	
  2444                           ;psect for function _Lcd_Write_Char
  2445                           
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2449                           ;Lcd_Write_Char@a stored from wreg
  2450     0459  00F4               	movwf	Lcd_Write_Char@a
  2451     045A                     l1195:
  2452                           
  2453                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2454     045A  0874               	movf	Lcd_Write_Char@a,w
  2455     045B  390F               	andlw	15
  2456     045C  00F2               	movwf	Lcd_Write_Char@temp
  2457                           
  2458                           ;LCD.c: 86:     y = a & 0xF0;
  2459     045D  0874               	movf	Lcd_Write_Char@a,w
  2460     045E  39F0               	andlw	240
  2461     045F  00F3               	movwf	Lcd_Write_Char@y
  2462     0460                     l1197:
  2463                           
  2464                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  2465     0460  1283               	bcf	3,5	;RP0=0, select bank0
  2466     0461  1303               	bcf	3,6	;RP1=0, select bank0
  2467     0462  1508               	bsf	8,2	;volatile
  2468     0463                     l1199:
  2469                           
  2470                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2471     0463  0873               	movf	Lcd_Write_Char@y,w
  2472     0464  00F1               	movwf	??_Lcd_Write_Char
  2473     0465  3004               	movlw	4
  2474     0466                     u565:
  2475     0466  1003               	clrc
  2476     0467  0CF1               	rrf	??_Lcd_Write_Char,f
  2477     0468  3EFF               	addlw	-1
  2478     0469  1D03               	skipz
  2479     046A  2C66               	goto	u565
  2480     046B  0871               	movf	??_Lcd_Write_Char,w
  2481     046C  120A  118A  23E4  120A  118A  	fcall	_Lcd_Port
  2482     0471                     l1201:
  2483                           
  2484                           ;LCD.c: 89:     RD3 = 1;
  2485     0471  1283               	bcf	3,5	;RP0=0, select bank0
  2486     0472  1303               	bcf	3,6	;RP1=0, select bank0
  2487     0473  1588               	bsf	8,3	;volatile
  2488     0474                     l1203:
  2489                           
  2490                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2491     0474  301A               	movlw	26
  2492     0475  00F1               	movwf	??_Lcd_Write_Char
  2493     0476                     u847:
  2494     0476  0BF1               	decfsz	??_Lcd_Write_Char,f
  2495     0477  2C76               	goto	u847
  2496     0478  0000               	nop
  2497     0479                     l1205:
  2498                           
  2499                           ;LCD.c: 91:     RD3 = 0;
  2500     0479  1283               	bcf	3,5	;RP0=0, select bank0
  2501     047A  1303               	bcf	3,6	;RP1=0, select bank0
  2502     047B  1188               	bcf	8,3	;volatile
  2503     047C                     l1207:
  2504                           
  2505                           ;LCD.c: 92:     Lcd_Port(temp);
  2506     047C  0872               	movf	Lcd_Write_Char@temp,w
  2507     047D  120A  118A  23E4  120A  118A  	fcall	_Lcd_Port
  2508     0482                     l1209:
  2509                           
  2510                           ;LCD.c: 93:     RD3 = 1;
  2511     0482  1283               	bcf	3,5	;RP0=0, select bank0
  2512     0483  1303               	bcf	3,6	;RP1=0, select bank0
  2513     0484  1588               	bsf	8,3	;volatile
  2514     0485                     l1211:
  2515                           
  2516                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2517     0485  301A               	movlw	26
  2518     0486  00F1               	movwf	??_Lcd_Write_Char
  2519     0487                     u857:
  2520     0487  0BF1               	decfsz	??_Lcd_Write_Char,f
  2521     0488  2C87               	goto	u857
  2522     0489  0000               	nop
  2523     048A                     l1213:
  2524                           
  2525                           ;LCD.c: 95:     RD3 = 0;
  2526     048A  1283               	bcf	3,5	;RP0=0, select bank0
  2527     048B  1303               	bcf	3,6	;RP1=0, select bank0
  2528     048C  1188               	bcf	8,3	;volatile
  2529     048D                     l195:
  2530     048D  0008               	return
  2531     048E                     __end_of_Lcd_Write_Char:
  2532                           
  2533                           	psect	text15
  2534     04C6                     __ptext15:	
  2535 ;; *************** function _Lcd_Set_Cursor *****************
  2536 ;; Defined at:
  2537 ;;		line 48 in file "LCD.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  a               1    wreg     unsigned char 
  2540 ;;  b               1    4[COMMON] unsigned char 
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;  a               1    6[COMMON] unsigned char 
  2543 ;;  temp            1    9[COMMON] unsigned char 
  2544 ;;  y               1    8[COMMON] unsigned char 
  2545 ;;  z               1    7[COMMON] unsigned char 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2, status,0, pclath, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2555 ;;      Params:         1       0       0       0       0
  2556 ;;      Locals:         4       0       0       0       0
  2557 ;;      Temps:          1       0       0       0       0
  2558 ;;      Totals:         6       0       0       0       0
  2559 ;;Total ram usage:        6 bytes
  2560 ;; Hardware stack levels used: 1
  2561 ;; Hardware stack levels required when called: 2
  2562 ;; This function calls:
  2563 ;;		_Lcd_Cmd
  2564 ;; This function is called by:
  2565 ;;		_main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569     04C6                     _Lcd_Set_Cursor:	
  2570                           ;psect for function _Lcd_Set_Cursor
  2571                           
  2572                           
  2573                           ;incstack = 0
  2574                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2575                           ;Lcd_Set_Cursor@a stored from wreg
  2576     04C6  00F6               	movwf	Lcd_Set_Cursor@a
  2577     04C7                     l1261:
  2578                           
  2579                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2580     04C7  0376               	decf	Lcd_Set_Cursor@a,w
  2581     04C8  1D03               	btfss	3,2
  2582     04C9  2CCB               	goto	u581
  2583     04CA  2CCC               	goto	u580
  2584     04CB                     u581:
  2585     04CB  2CE9               	goto	l1271
  2586     04CC                     u580:
  2587     04CC                     l1263:
  2588                           
  2589                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2590     04CC  0874               	movf	Lcd_Set_Cursor@b,w
  2591     04CD  3E7F               	addlw	127
  2592     04CE  00F9               	movwf	Lcd_Set_Cursor@temp
  2593                           
  2594                           ;LCD.c: 52:         z = temp >> 4;
  2595     04CF  0879               	movf	Lcd_Set_Cursor@temp,w
  2596     04D0  00F5               	movwf	??_Lcd_Set_Cursor
  2597     04D1  3004               	movlw	4
  2598     04D2                     u595:
  2599     04D2  1003               	clrc
  2600     04D3  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2601     04D4  3EFF               	addlw	-1
  2602     04D5  1D03               	skipz
  2603     04D6  2CD2               	goto	u595
  2604     04D7  0875               	movf	??_Lcd_Set_Cursor,w
  2605     04D8  00F7               	movwf	Lcd_Set_Cursor@z
  2606     04D9                     l1265:
  2607                           
  2608                           ;LCD.c: 53:         y = temp & 0x0F;
  2609     04D9  0879               	movf	Lcd_Set_Cursor@temp,w
  2610     04DA  390F               	andlw	15
  2611     04DB  00F8               	movwf	Lcd_Set_Cursor@y
  2612     04DC                     l1267:
  2613                           
  2614                           ;LCD.c: 54:         Lcd_Cmd(z);
  2615     04DC  0877               	movf	Lcd_Set_Cursor@z,w
  2616     04DD  120A  118A  23A9  120A  118A  	fcall	_Lcd_Cmd
  2617     04E2                     l1269:
  2618                           
  2619                           ;LCD.c: 55:         Lcd_Cmd(y);
  2620     04E2  0878               	movf	Lcd_Set_Cursor@y,w
  2621     04E3  120A  118A  23A9  120A  118A  	fcall	_Lcd_Cmd
  2622                           
  2623                           ;LCD.c: 56:     } else if (a == 2) {
  2624     04E8  2D0B               	goto	l189
  2625     04E9                     l1271:
  2626     04E9  3002               	movlw	2
  2627     04EA  0676               	xorwf	Lcd_Set_Cursor@a,w
  2628     04EB  1D03               	btfss	3,2
  2629     04EC  2CEE               	goto	u601
  2630     04ED  2CEF               	goto	u600
  2631     04EE                     u601:
  2632     04EE  2D0B               	goto	l189
  2633     04EF                     u600:
  2634     04EF                     l1273:
  2635                           
  2636                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2637     04EF  0874               	movf	Lcd_Set_Cursor@b,w
  2638     04F0  3EBF               	addlw	191
  2639     04F1  00F9               	movwf	Lcd_Set_Cursor@temp
  2640                           
  2641                           ;LCD.c: 58:         z = temp >> 4;
  2642     04F2  0879               	movf	Lcd_Set_Cursor@temp,w
  2643     04F3  00F5               	movwf	??_Lcd_Set_Cursor
  2644     04F4  3004               	movlw	4
  2645     04F5                     u615:
  2646     04F5  1003               	clrc
  2647     04F6  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2648     04F7  3EFF               	addlw	-1
  2649     04F8  1D03               	skipz
  2650     04F9  2CF5               	goto	u615
  2651     04FA  0875               	movf	??_Lcd_Set_Cursor,w
  2652     04FB  00F7               	movwf	Lcd_Set_Cursor@z
  2653     04FC                     l1275:
  2654                           
  2655                           ;LCD.c: 59:         y = temp & 0x0F;
  2656     04FC  0879               	movf	Lcd_Set_Cursor@temp,w
  2657     04FD  390F               	andlw	15
  2658     04FE  00F8               	movwf	Lcd_Set_Cursor@y
  2659     04FF                     l1277:
  2660                           
  2661                           ;LCD.c: 60:         Lcd_Cmd(z);
  2662     04FF  0877               	movf	Lcd_Set_Cursor@z,w
  2663     0500  120A  118A  23A9  120A  118A  	fcall	_Lcd_Cmd
  2664     0505                     l1279:
  2665                           
  2666                           ;LCD.c: 61:         Lcd_Cmd(y);
  2667     0505  0878               	movf	Lcd_Set_Cursor@y,w
  2668     0506  120A  118A  23A9  120A  118A  	fcall	_Lcd_Cmd
  2669     050B                     l189:
  2670     050B  0008               	return
  2671     050C                     __end_of_Lcd_Set_Cursor:
  2672                           
  2673                           	psect	text16
  2674     0567                     __ptext16:	
  2675 ;; *************** function _Lcd_Init *****************
  2676 ;; Defined at:
  2677 ;;		line 65 in file "LCD.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0, pclath, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2691 ;;      Params:         0       0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0
  2693 ;;      Temps:          2       0       0       0       0
  2694 ;;      Totals:         2       0       0       0       0
  2695 ;;Total ram usage:        2 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 2
  2698 ;; This function calls:
  2699 ;;		_Lcd_Cmd
  2700 ;;		_Lcd_Port
  2701 ;; This function is called by:
  2702 ;;		_main
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706     0567                     _Lcd_Init:	
  2707                           ;psect for function _Lcd_Init
  2708                           
  2709     0567                     l1249:	
  2710                           ;incstack = 0
  2711                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2712                           
  2713                           
  2714                           ;LCD.c: 66:     Lcd_Port(0x00);
  2715     0567  3000               	movlw	0
  2716     0568  120A  118A  23E4  120A  118A  	fcall	_Lcd_Port
  2717     056D                     l1251:
  2718                           
  2719                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2720     056D  3034               	movlw	52
  2721     056E  00F5               	movwf	??_Lcd_Init+1
  2722     056F  30F1               	movlw	241
  2723     0570  00F4               	movwf	??_Lcd_Init
  2724     0571                     u867:
  2725     0571  0BF4               	decfsz	??_Lcd_Init,f
  2726     0572  2D71               	goto	u867
  2727     0573  0BF5               	decfsz	??_Lcd_Init+1,f
  2728     0574  2D71               	goto	u867
  2729     0575  2D76               	nop2
  2730     0576                     l1253:
  2731                           
  2732                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2733     0576  3003               	movlw	3
  2734     0577  120A  118A  23A9  120A  118A  	fcall	_Lcd_Cmd
  2735                           
  2736                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2737     057C  300D               	movlw	13
  2738     057D  00F5               	movwf	??_Lcd_Init+1
  2739     057E  30FB               	movlw	251
  2740     057F  00F4               	movwf	??_Lcd_Init
  2741     0580                     u877:
  2742     0580  0BF4               	decfsz	??_Lcd_Init,f
  2743     0581  2D80               	goto	u877
  2744     0582  0BF5               	decfsz	??_Lcd_Init+1,f
  2745     0583  2D80               	goto	u877
  2746     0584  2D85               	nop2
  2747     0585                     l1255:
  2748                           
  2749                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2750     0585  3003               	movlw	3
  2751     0586  120A  118A  23A9  120A  118A  	fcall	_Lcd_Cmd
  2752     058B                     l1257:
  2753                           
  2754                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2755     058B  301D               	movlw	29
  2756     058C  00F5               	movwf	??_Lcd_Init+1
  2757     058D  3091               	movlw	145
  2758     058E  00F4               	movwf	??_Lcd_Init
  2759     058F                     u887:
  2760     058F  0BF4               	decfsz	??_Lcd_Init,f
  2761     0590  2D8F               	goto	u887
  2762     0591  0BF5               	decfsz	??_Lcd_Init+1,f
  2763     0592  2D8F               	goto	u887
  2764                           
  2765                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2766     0593  3003               	movlw	3
  2767     0594  120A  118A  23A9  120A  118A  	fcall	_Lcd_Cmd
  2768                           
  2769                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2770     0599  3002               	movlw	2
  2771     059A  120A  118A  23A9  120A  118A  	fcall	_Lcd_Cmd
  2772                           
  2773                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2774     059F  3002               	movlw	2
  2775     05A0  120A  118A  23A9  120A  118A  	fcall	_Lcd_Cmd
  2776                           
  2777                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2778     05A5  3008               	movlw	8
  2779     05A6  120A  118A  23A9  120A  118A  	fcall	_Lcd_Cmd
  2780                           
  2781                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2782     05AB  3000               	movlw	0
  2783     05AC  120A  118A  23A9  120A  118A  	fcall	_Lcd_Cmd
  2784                           
  2785                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2786     05B1  300C               	movlw	12
  2787     05B2  120A  118A  23A9  120A  118A  	fcall	_Lcd_Cmd
  2788                           
  2789                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2790     05B7  3000               	movlw	0
  2791     05B8  120A  118A  23A9  120A  118A  	fcall	_Lcd_Cmd
  2792                           
  2793                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2794     05BD  3006               	movlw	6
  2795     05BE  120A  118A  23A9  120A  118A  	fcall	_Lcd_Cmd
  2796     05C3                     l192:
  2797     05C3  0008               	return
  2798     05C4                     __end_of_Lcd_Init:
  2799                           
  2800                           	psect	text17
  2801     038F                     __ptext17:	
  2802 ;; *************** function _Lcd_Clear *****************
  2803 ;; Defined at:
  2804 ;;		line 43 in file "LCD.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0, pclath, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2818 ;;      Params:         0       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0
  2821 ;;      Totals:         0       0       0       0       0
  2822 ;;Total ram usage:        0 bytes
  2823 ;; Hardware stack levels used: 1
  2824 ;; Hardware stack levels required when called: 2
  2825 ;; This function calls:
  2826 ;;		_Lcd_Cmd
  2827 ;; This function is called by:
  2828 ;;		_main
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832     038F                     _Lcd_Clear:	
  2833                           ;psect for function _Lcd_Clear
  2834                           
  2835     038F                     l1259:	
  2836                           ;incstack = 0
  2837                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2838                           
  2839                           
  2840                           ;LCD.c: 44:     Lcd_Cmd(0);
  2841     038F  3000               	movlw	0
  2842     0390  120A  118A  23A9  120A  118A  	fcall	_Lcd_Cmd
  2843                           
  2844                           ;LCD.c: 45:     Lcd_Cmd(1);
  2845     0395  3001               	movlw	1
  2846     0396  120A  118A  23A9  120A  118A  	fcall	_Lcd_Cmd
  2847     039B                     l183:
  2848     039B  0008               	return
  2849     039C                     __end_of_Lcd_Clear:
  2850                           
  2851                           	psect	text18
  2852     03A9                     __ptext18:	
  2853 ;; *************** function _Lcd_Cmd *****************
  2854 ;; Defined at:
  2855 ;;		line 35 in file "LCD.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  a               1    wreg     unsigned char 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  a               1    3[COMMON] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0, pclath, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2869 ;;      Params:         0       0       0       0       0
  2870 ;;      Locals:         1       0       0       0       0
  2871 ;;      Temps:          2       0       0       0       0
  2872 ;;      Totals:         3       0       0       0       0
  2873 ;;Total ram usage:        3 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; Hardware stack levels required when called: 1
  2876 ;; This function calls:
  2877 ;;		_Lcd_Port
  2878 ;; This function is called by:
  2879 ;;		_Lcd_Clear
  2880 ;;		_Lcd_Set_Cursor
  2881 ;;		_Lcd_Init
  2882 ;;		_Lcd_Shift_Right
  2883 ;;		_Lcd_Shift_Left
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887     03A9                     _Lcd_Cmd:	
  2888                           ;psect for function _Lcd_Cmd
  2889                           
  2890                           
  2891                           ;incstack = 0
  2892                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2893                           ;Lcd_Cmd@a stored from wreg
  2894     03A9  00F3               	movwf	Lcd_Cmd@a
  2895     03AA                     l1231:
  2896                           
  2897                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2898     03AA  1283               	bcf	3,5	;RP0=0, select bank0
  2899     03AB  1303               	bcf	3,6	;RP1=0, select bank0
  2900     03AC  1108               	bcf	8,2	;volatile
  2901     03AD                     l1233:
  2902                           
  2903                           ;LCD.c: 37:     Lcd_Port(a);
  2904     03AD  0873               	movf	Lcd_Cmd@a,w
  2905     03AE  120A  118A  23E4  120A  118A  	fcall	_Lcd_Port
  2906     03B3                     l1235:
  2907                           
  2908                           ;LCD.c: 38:     RD3 = 1;
  2909     03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2910     03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2911     03B5  1588               	bsf	8,3	;volatile
  2912     03B6                     l1237:
  2913                           
  2914                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2915     03B6  300B               	movlw	11
  2916     03B7  00F2               	movwf	??_Lcd_Cmd+1
  2917     03B8  3062               	movlw	98
  2918     03B9  00F1               	movwf	??_Lcd_Cmd
  2919     03BA                     u897:
  2920     03BA  0BF1               	decfsz	??_Lcd_Cmd,f
  2921     03BB  2BBA               	goto	u897
  2922     03BC  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2923     03BD  2BBA               	goto	u897
  2924     03BE  0000               	nop
  2925     03BF                     l1239:
  2926                           
  2927                           ;LCD.c: 40:     RD3 = 0;
  2928     03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2929     03C0  1303               	bcf	3,6	;RP1=0, select bank0
  2930     03C1  1188               	bcf	8,3	;volatile
  2931     03C2                     l180:
  2932     03C2  0008               	return
  2933     03C3                     __end_of_Lcd_Cmd:
  2934                           
  2935                           	psect	text19
  2936     03E4                     __ptext19:	
  2937 ;; *************** function _Lcd_Port *****************
  2938 ;; Defined at:
  2939 ;;		line 13 in file "LCD.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  a               1    wreg     unsigned char 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;  a               1    0[COMMON] unsigned char 
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      void 
  2946 ;; Registers used:
  2947 ;;		wreg
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2953 ;;      Params:         0       0       0       0       0
  2954 ;;      Locals:         1       0       0       0       0
  2955 ;;      Temps:          0       0       0       0       0
  2956 ;;      Totals:         1       0       0       0       0
  2957 ;;Total ram usage:        1 bytes
  2958 ;; Hardware stack levels used: 1
  2959 ;; This function calls:
  2960 ;;		Nothing
  2961 ;; This function is called by:
  2962 ;;		_Lcd_Cmd
  2963 ;;		_Lcd_Init
  2964 ;;		_Lcd_Write_Char
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968     03E4                     _Lcd_Port:	
  2969                           ;psect for function _Lcd_Port
  2970                           
  2971                           
  2972                           ;incstack = 0
  2973                           ; Regs used in _Lcd_Port: [wreg]
  2974                           ;Lcd_Port@a stored from wreg
  2975     03E4  00F0               	movwf	Lcd_Port@a
  2976     03E5                     l1133:
  2977                           
  2978                           ;LCD.c: 14:     if (a & 1)
  2979     03E5  1C70               	btfss	Lcd_Port@a,0
  2980     03E6  2BE8               	goto	u441
  2981     03E7  2BE9               	goto	u440
  2982     03E8                     u441:
  2983     03E8  2BED               	goto	l169
  2984     03E9                     u440:
  2985     03E9                     l1135:
  2986                           
  2987                           ;LCD.c: 15:         RD4 = 1;
  2988     03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2989     03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2990     03EB  1608               	bsf	8,4	;volatile
  2991     03EC  2BF0               	goto	l170
  2992     03ED                     l169:	
  2993                           ;LCD.c: 16:     else
  2994                           
  2995                           
  2996                           ;LCD.c: 17:         RD4 = 0;
  2997     03ED  1283               	bcf	3,5	;RP0=0, select bank0
  2998     03EE  1303               	bcf	3,6	;RP1=0, select bank0
  2999     03EF  1208               	bcf	8,4	;volatile
  3000     03F0                     l170:
  3001                           
  3002                           ;LCD.c: 19:     if (a & 2)
  3003     03F0  1CF0               	btfss	Lcd_Port@a,1
  3004     03F1  2BF3               	goto	u451
  3005     03F2  2BF4               	goto	u450
  3006     03F3                     u451:
  3007     03F3  2BF6               	goto	l171
  3008     03F4                     u450:
  3009     03F4                     l1137:
  3010                           
  3011                           ;LCD.c: 20:         RD5 = 1;
  3012     03F4  1688               	bsf	8,5	;volatile
  3013     03F5  2BF7               	goto	l172
  3014     03F6                     l171:	
  3015                           ;LCD.c: 21:     else
  3016                           
  3017                           
  3018                           ;LCD.c: 22:         RD5 = 0;
  3019     03F6  1288               	bcf	8,5	;volatile
  3020     03F7                     l172:
  3021                           
  3022                           ;LCD.c: 24:     if (a & 4)
  3023     03F7  1D70               	btfss	Lcd_Port@a,2
  3024     03F8  2BFA               	goto	u461
  3025     03F9  2BFB               	goto	u460
  3026     03FA                     u461:
  3027     03FA  2BFD               	goto	l173
  3028     03FB                     u460:
  3029     03FB                     l1139:
  3030                           
  3031                           ;LCD.c: 25:         RD6 = 1;
  3032     03FB  1708               	bsf	8,6	;volatile
  3033     03FC  2BFE               	goto	l174
  3034     03FD                     l173:	
  3035                           ;LCD.c: 26:     else
  3036                           
  3037                           
  3038                           ;LCD.c: 27:         RD6 = 0;
  3039     03FD  1308               	bcf	8,6	;volatile
  3040     03FE                     l174:
  3041                           
  3042                           ;LCD.c: 29:     if (a & 8)
  3043     03FE  1DF0               	btfss	Lcd_Port@a,3
  3044     03FF  2C01               	goto	u471
  3045     0400  2C02               	goto	u470
  3046     0401                     u471:
  3047     0401  2C04               	goto	l175
  3048     0402                     u470:
  3049     0402                     l1141:
  3050                           
  3051                           ;LCD.c: 30:         RD7 = 1;
  3052     0402  1788               	bsf	8,7	;volatile
  3053     0403  2C05               	goto	l177
  3054     0404                     l175:	
  3055                           ;LCD.c: 31:     else
  3056                           
  3057                           
  3058                           ;LCD.c: 32:         RD7 = 0;
  3059     0404  1388               	bcf	8,7	;volatile
  3060     0405                     l177:
  3061     0405  0008               	return
  3062     0406                     __end_of_Lcd_Port:
  3063     007E                     btemp	set	126	;btemp
  3064     007E                     wtemp0	set	126
  3065                           
  3066                           	psect	idloc
  3067                           
  3068                           ;Config register IDLOC0 @ 0x2000
  3069                           ;	unspecified, using default values
  3070     2000                     	org	8192
  3071     2000  3FFF               	dw	16383
  3072                           
  3073                           ;Config register IDLOC1 @ 0x2001
  3074                           ;	unspecified, using default values
  3075     2001                     	org	8193
  3076     2001  3FFF               	dw	16383
  3077                           
  3078                           ;Config register IDLOC2 @ 0x2002
  3079                           ;	unspecified, using default values
  3080     2002                     	org	8194
  3081     2002  3FFF               	dw	16383
  3082                           
  3083                           ;Config register IDLOC3 @ 0x2003
  3084                           ;	unspecified, using default values
  3085     2003                     	org	8195
  3086     2003  3FFF               	dw	16383
  3087                           
  3088                           	psect	config
  3089                           
  3090                           ;Config register CONFIG1 @ 0x2007
  3091                           ;	Oscillator Selection bits
  3092                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3093                           ;	Watchdog Timer Enable bit
  3094                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3095                           ;	Power-up Timer Enable bit
  3096                           ;	PWRTE = OFF, PWRT disabled
  3097                           ;	RE3/MCLR pin function select bit
  3098                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3099                           ;	Code Protection bit
  3100                           ;	CP = OFF, Program memory code protection is disabled
  3101                           ;	Data Code Protection bit
  3102                           ;	CPD = OFF, Data memory code protection is disabled
  3103                           ;	Brown Out Reset Selection bits
  3104                           ;	BOREN = OFF, BOR disabled
  3105                           ;	Internal External Switchover bit
  3106                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3107                           ;	Fail-Safe Clock Monitor Enabled bit
  3108                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3109                           ;	Low Voltage Programming Enable bit
  3110                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3111                           ;	In-Circuit Debugger Mode bit
  3112                           ;	DEBUG = 0x1, unprogramme  3113     2007                     	org	8199
  3114     2007  20D4               	dw	8404
  3115                           
  3116                           ;Config register CONFIG2 @ 0x2008
  3117                           ;	Brown-out Reset Selection bit
  3118                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3119                           ;	Flash Program Memory Self Write Enable bits
  3120                           ;	WRT = OFF, Write protection off
  3121     2008                     	org	8200
  3122     2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _I2C_Master_Init->___lldiv
    _leer_hora->_I2C_Master_Read
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5121
                                              8 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                          _leer_hora
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _leer_hora                                            0     0      0    1055
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     706
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     349
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     301
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     608
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _leer_hora
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _setup
     _I2C_Master_Init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      28       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      1A       5       32.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      28      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 10 13:28:04 2023

                               pc 0002                                l73 03E3                                l76 06FF  
                    ___awdiv@sign 0076                                fsr 0004                               l111 03A8  
                             l120 0384                               l201 042A                               l105 04C5  
                             l114 037B                               l123 038E                               l108 039C  
                             l117 0372                               l126 0450                               l127 0453  
                             l128 0458                               l170 03F0                               l171 03F6  
                             l172 03F7                               l180 03C2                               l173 03FD  
                             l174 03FE                               l175 0404                               l183 039B  
                             _ADC 002F                               l192 05C3                               l177 0405  
                             l169 03ED                               l329 0629                               l195 048D  
                             l189 050B                               l446 0690                               l459 0566  
                             _GIE 005F                               _RD3 0043                               _RD4 0044  
                             _RD5 0045                               _RD6 0046                               _RD7 0047  
                             u420 03A2                               u500 05E8                               u421 03A1  
                             u501 05E7                               u430 03A8                               u431 03A7  
                             u440 03E9                               u600 04EF                               u520 0603  
                             u441 03E8                               u601 04EE                               u521 0602  
                             u450 03F4                               u451 03F3                               u515 05EA  
                             u460 03FB                               u620 042A                               u540 0621  
                             u461 03FA                               u621 0429                               u541 0620  
                             u525 05FF                               u470 0402                               u710 0682  
                             u630 062F                               u550 044C                               u471 0401  
                             u615 04F5                               u711 0681                               u631 062E  
                             u551 044B                               u535 0613                               u720 0687  
                             u640 063A                               u800 0558                               u480 05D4  
                             u721 0686                               u705 0676                               u641 0639  
                             u801 0557                               u481 05D3                               u650 064B  
                             u810 055D                               u730 0513                               u570 04A5  
                             u651 064A                               u811 055C                               u731 0512  
                             u580 04CC                               u740 051E                               u581 04CB  
                             u565 0466                               u741 051D                               u670 065D  
                             u750 0529                               u671 065C                               u751 0528  
                             u495 05D9                               u575 04A0                               u665 064F  
                             u690 066E                               u770 053B                               u595 04D2  
                             u691 066D                               u771 053A                               u827 0742  
                             u780 0545                               u685 065E                               u781 0544  
                             u765 052D                               u837 0768                               u847 0476  
                             u695 066A                               u857 0487                               u785 0541  
                             u867 0571                               u795 054C                               u877 0580  
                             u887 058F                               u897 03BA                               _dia 0024  
                             _mes 0022                               _min 0028                               _sec 002A  
                             fsr0 0004                               indf 0000                      ___awmod@sign 0031  
                            l1201 0471                              l1211 0485                              l1203 0474  
                            l1131 03A2                              l1141 0402                              l1133 03E5  
                            l1213 048A                              l1205 0479                              l1301 063A  
                            l1221 04C2                              l1135 03E9                              l1231 03AA  
                            l1207 047C                              l1311 064E                              l1303 063F  
                            l1151 05E8                              l1143 05C4                              l1223 04C3  
                            l1215 048E                              l1137 03F4                              l1233 03AD  
                            l1209 0482                              l1321 0674                              l1313 0655  
                            l1305 0643                              l1129 039C                              l1161 061B  
                            l1153 05F1                              l1145 05D4                              l1225 04C4  
                            l1217 0492                              l1241 03C3                              l1401 0786  
                            l1139 03FB                              l1235 03B3                              l1251 056D  
                            l1331 068C                              l1323 0675                              l1315 0659  
                            l1307 0645                              l1227 036A                              l1171 0385  
                            l1155 0603                              l1147 05D7                              l1163 0621  
                            l1219 0495                              l1243 03CF                              l1411 07D5  
                            l1403 07A7                              l1237 03B6                              l1253 0576  
                            l1261 04C7                              l1325 067C                              l1317 065D  
                            l1309 064B                              l1341 0518                              l1181 0430  
                            l1229 036F                              l1173 038A                              l1157 0611  
                            l1149 05E4                              l1245 03D3                              l1413 07DE  
                            l1405 07BB                              l1239 03BF                              l1255 0585  
                            l1263 04CC                              l1271 04E9                              l1319 066E  
                            l1327 0682                              l1351 052C                              l1343 051A  
                            l1335 050C                              l1191 0454                              l1183 0438  
                            l1167 0373                              l1175 037C                              l1159 0612  
                            l1247 03D4                              l1415 07E6                              l1407 07C3  
                            l1257 058B                              l1249 0567                              l1273 04EF  
                            l1265 04D9                              l1281 0407                              l1329 0687  
                            l1361 054B                              l1353 0533                              l1345 051E  
                            l1337 050F                              l1185 0441                              l1169 0378  
                            l1177 0381                              l1409 07CC                              l1259 038F  
                            l1275 04FC                              l1267 04DC                              l1195 045A  
                            l1283 040A                              l1291 062A                              l1363 0552  
                            l1355 0537                              l1347 0523                              l1339 0513  
                            l1187 0446                              l1179 042B                              l1277 04FF  
                            l1269 04E2                              l1197 0460                              l1285 0417  
                            l1293 062B                              l1357 053B                              l1349 0529  
                            l1365 0558                              l1189 044C                              l1381 072B  
                            l1373 0700                              l1279 0505                              l1199 0463  
                            l1287 041D                              l1295 062F                              l1367 055D  
                            l1359 0545                              l1391 0753                              l1383 0739  
                            l1375 0717                              l1297 0634                              l1369 0562  
                            l1289 0691                              l1393 075F                              l1385 073E  
                            l1377 071D                              l1299 0636                              l1395 0764  
                            l1387 0745                              l1379 0722                              l1397 076B  
                            l1389 074A                              l1399 0770                              STR_1 0009  
                            _PEIE 005E                 ?_Lcd_Write_String 0070                              _anio 0020  
__end_of_I2C_Master_RepeatedStart 0373                              _main 0700                              _hora 0026  
                            btemp 007E                              start 0000                ??_Lcd_Write_String 0075  
                 __end_of_Lcd_Cmd 03C3                  ?_I2C_Master_Init 0030                  ?_I2C_Master_Read 0070  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                             ?_main 0070  
                 __end_of___awdiv 0691                   __end_of___awmod 0567                             _ANSEL 0188  
                 __end_of___lldiv 062A                   ___awdiv@divisor 0070                   ___awdiv@counter 0075  
                           _PORTB 0006                             _PORTD 0008                             _TRISB 0086  
                           _TRISD 0088                             _SSPIE 0463                             _SSPIF 0063  
                           _setup 03C3                             pclath 000A                             status 0003  
                           wtemp0 007E                  __end_of_Lcd_Init 05C4                  __end_of_Lcd_Port 0406  
                 __initialization 07F3                      __end_of_main 07F3                            ??_main 0038  
               ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070  
                          _ADCON0 001F                ??_I2C_Master_Write 0072                            _ADRESH 001E  
                ___awdiv@dividend 0072                            ?_setup 0070                            _ANSELH 0189  
                       ??_Lcd_Cmd 0071                            _SSPADD 0093                            _TRISC3 043B  
                          _TRISC4 043C                            _SSPCON 0014                            _SSPBUF 0013  
        _I2C_Master_RepeatedStart 036A                         ??___awdiv 0074                         ??___awmod 007D  
                       ??___lldiv 0078                  ___awdiv@quotient 0077                   ___awmod@divisor 0079  
                 ___awmod@counter 0030                            _unidad 002C                   Lcd_Set_Cursor@a 0076  
                 Lcd_Set_Cursor@b 0074                   Lcd_Set_Cursor@y 0078                   Lcd_Set_Cursor@z 0077  
         __end_of__initialization 07FC                 __end_of_Lcd_Clear 039C                    __pcstackCOMMON 0070  
                   __end_of_setup 03E4                    _Lcd_Set_Cursor 04C6                         ?_Lcd_Init 0070  
                       ?_Lcd_Port 0070                           ??_setup 007E                        __pbssBANK0 0020  
                      __pmaintext 0700            __end_of_Lcd_Set_Cursor 050C                        ??_Lcd_Init 0074  
                      ??_Lcd_Port 0070                           _SSPCON2 0091                           _SSPSTAT 0094  
                      __stringtab 0003                    _Lcd_Write_Char 0459                           _Lcd_Cmd 03A9  
                         ___awdiv 062A                           ___awmod 050C                           ___lldiv 05C4  
                         _decenas 002D                 __end_of_leer_hora 0700                   ?_Lcd_Set_Cursor 0074  
                         __ptext1 03C3                           __ptext2 048E                           __ptext3 05C4  
                         __ptext4 0691                           __ptext5 0385                           __ptext6 037C  
                         __ptext7 0373                           __ptext8 036A                           __ptext9 042B  
                ___awmod@dividend 007B                           clrloop0 0363            __end_of_Lcd_Write_Char 048E  
            end_of_initialization 07FC        ??_I2C_Master_RepeatedStart 0070                   ___lldiv@divisor 0070  
                 ___lldiv@counter 007D                  I2C_Master_Init@c 0030                  I2C_Master_Read@a 0070  
                       Lcd_Port@a 0070                         _PORTDbits 0008                         _TRISCbits 0087  
                 ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0077                 Lcd_Write_String@i 0075  
                       _Lcd_Clear 038F                  _Lcd_Write_String 0406               start_initialization 07F3  
               ??_I2C_Master_Init 0034                 ??_I2C_Master_Read 0072                 ??_I2C_Master_Wait 0070  
               ??_I2C_Master_Stop 0070                        ?_Lcd_Clear 0070                   Lcd_Write_Char@a 0074  
                 Lcd_Write_Char@y 0073                         ___latbits 0002                     __pcstackBANK0 0030  
                        ?_Lcd_Cmd 0070                  _I2C_Master_Start 0373                  _I2C_Master_Write 0385  
                ??_Lcd_Set_Cursor 0075                          ?___awdiv 0070                          ?___awmod 0079  
                        ?___lldiv 0070                         __pstrings 0003                         _leer_hora 0691  
                       clear_ram0 0362                          Lcd_Cmd@a 0073                       ??_Lcd_Clear 0074  
                      _ADCON0bits 001F                       __stringbase 0008                        _ADCON1bits 009F  
                ??_Lcd_Write_Char 0071                        ?_leer_hora 0070                          _Lcd_Init 0567  
                        _Lcd_Port 03E4               I2C_Master_Read@temp 0074          __end_of_Lcd_Write_String 042B  
       ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0009                   _I2C_Master_Init 048E  
                 _I2C_Master_Read 042B                   _I2C_Master_Wait 039C                   _I2C_Master_Stop 037C  
                        _centenas 002E                          __ptext10 039C                          __ptext11 050C  
                        __ptext12 062A                          __ptext13 0406                          __ptext14 0459  
                        __ptext15 04C6                          __ptext16 0567                          __ptext17 038F  
                        __ptext18 03A9                          __ptext19 03E4          __end_of_I2C_Master_Start 037C  
        __end_of_I2C_Master_Write 038F                       ??_leer_hora 0076                Lcd_Write_Char@temp 0072  
                ___lldiv@dividend 0074                         stringcode 0003                        _OSCCONbits 008F  
         __end_of_I2C_Master_Init 04C6           __end_of_I2C_Master_Read 0459           __end_of_I2C_Master_Wait 03A9  
         __end_of_I2C_Master_Stop 0385                Lcd_Set_Cursor@temp 0079                  ___lldiv@quotient 0079  
               I2C_Master_Write@d 0070                          stringdir 0003                          stringtab 0003  
                     _SSPCON2bits 0091  
